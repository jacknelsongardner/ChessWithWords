import type { DeleteNotesRequest, GetNotesRequest, PostNotesRequest, PostRemovalNoteRequest } from '@devvit/protos';
import type { Prettify } from '@devvit/shared-types/Prettify.js';
import { T1, T2, T3, T5 } from '@devvit/shared-types/tid.js';
import type { ListingFetchOptions } from './Listing.js';
import { Listing } from './Listing.js';
import type { ModAction } from './ModAction.js';
export type ModNoteType = 'NOTE' | 'APPROVAL' | 'REMOVAL' | 'BAN' | 'MUTE' | 'INVITE' | 'SPAM' | 'CONTENT_CHANGE' | 'MOD_ACTION' | 'ALL';
export type UserNoteLabel = 'BOT_BAN' | 'PERMA_BAN' | 'BAN' | 'ABUSE_WARNING' | 'SPAM_WARNING' | 'SPAM_WATCH' | 'SOLID_CONTRIBUTOR' | 'HELPFUL_USER';
export type UserNote = {
    note?: string | undefined;
    redditId?: T1 | T3 | T5 | undefined;
    label?: UserNoteLabel | undefined;
};
export interface ModNote {
    id: string;
    operator: {
        id?: T2 | undefined;
        name?: string | undefined;
    };
    user: {
        id?: T2 | undefined;
        name?: string | undefined;
    };
    subreddit: {
        id?: T5 | undefined;
        name?: string | undefined;
    };
    type: ModNoteType;
    createdAt: Date;
    userNote?: UserNote | undefined;
    modAction?: ModAction;
}
export type GetModNotesOptions = Prettify<Pick<GetNotesRequest, 'subreddit' | 'user'> & {
    filter?: ModNoteType;
} & Pick<ListingFetchOptions, 'limit' | 'before'>>;
export type CreateModNoteOptions = Prettify<PostNotesRequest & {
    redditId?: T1 | T3;
    label?: UserNoteLabel;
}>;
export type DeleteNotesOptions = Prettify<DeleteNotesRequest>;
export type AddRemovalNoteOptions = Prettify<PostRemovalNoteRequest>;
export declare class ModNote {
    #private;
    /**
     * @internal
     */
    private constructor();
    /** @internal */
    static get(options: GetModNotesOptions): Listing<ModNote>;
    /** @internal */
    static delete(options: DeleteNotesOptions): Promise<boolean>;
    /** @internal */
    static add(options: CreateModNoteOptions): Promise<ModNote>;
    /** @internal */
    static addRemovalNote(options: AddRemovalNoteOptions): Promise<void>;
}
//# sourceMappingURL=ModNote.d.ts.map