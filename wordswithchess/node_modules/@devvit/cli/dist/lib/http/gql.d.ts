import type { JsonObject } from '@devvit/shared-types/json.js';
import type { StoredToken } from '../auth/StoredToken.js';
export type GqlQueryConfig<T extends JsonObject> = {
    accessToken?: string;
    hash: string;
    /** GraphQL query name. Used for logging. */
    name: string;
    variables?: T;
};
export declare function gqlQuery<T, V extends JsonObject>(config: GqlQueryConfig<V>): Promise<{
    data: T;
}>;
export declare function isCurrentUserEmployee(token: StoredToken): Promise<boolean>;
/**
 * Get the number of subscribers of a subreddit.
 *
 * @param subreddit - The name or t5 ID of the subreddit.
 * @param token - The stored token for authentication.
 * @returns A Promise that resolves to the number of subscribers if the subreddit exists.
 */
export declare function fetchSubredditSubscriberCount(subreddit: string, token: StoredToken): Promise<number>;
export declare function getUserId(username: string, token: StoredToken): Promise<string>;
//# sourceMappingURL=gql.d.ts.map