import type { LogMessage } from '@devvit/protos';
import { Severity } from '@devvit/protos';
export type AppLogConfig = {
    dateFormat: string | undefined;
    /** When true, print if log originates from local or remote runtime. */
    runtime: boolean;
    /** When true, print log level and timestamp with each message. */
    verbose: boolean;
    /** When true, show timestamp with each message. */
    showTimestamps: boolean;
};
export type SeverityConfig = {
    label: string;
    color: (text: string) => string;
};
export declare const severities: Record<Severity, SeverityConfig>;
export declare const defaultAppLogDateFormat: string;
export declare function formatAppLogDate(date: Date | number, dateFormat: string | undefined): string;
/**
 * Formats msg as a terminal-wide header / footer. Eg, the msg "abc" becomes
 * "────────────────────── abc ───────────────────────" on a 50-wide character
 * terminal.
 */
export declare function formatAppLogDivider(msg: string, trunc?: 'TruncStart'): string;
export declare function formatAppLogMessage(log: Readonly<LogMessage>, config: Readonly<AppLogConfig>, localRuntime?: boolean): string;
export declare const supportedDurationFormats: string;
export declare function parseAppLogDuration(str: string): Duration;
//# sourceMappingURL=app-log-util.d.ts.map