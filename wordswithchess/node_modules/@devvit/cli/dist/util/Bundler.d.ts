import { type ProjectRootDir } from '@devvit/build-pack/lib/BuildPack.js';
import { type Bundle } from '@devvit/protos/types/devvit/plugin/buildpack/buildpack_common.js';
import type { ActorSpec } from '@devvit/protos/types/devvit/runtime/bundle.js';
import type { Observable } from 'rxjs';
import type { Project } from './project.js';
export type BundlerResult = {
    bundles: Bundle[] | undefined;
};
export declare class Bundler {
    #private;
    constructor();
    bundle(project: Readonly<Project>, actorSpec: ActorSpec, includeMetafile?: boolean): Promise<Bundle[]>;
    dispose(): Promise<void>;
    watch(project: Readonly<Project> | undefined, root: ProjectRootDir, actorSpec: ActorSpec): Observable<BundlerResult>;
}
//# sourceMappingURL=Bundler.d.ts.map