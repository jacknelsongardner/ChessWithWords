import type { T2 } from '@devvit/shared-types/tid.js';
import { Command } from '@oclif/core';
import type { StoredToken } from '../../lib/auth/StoredToken.js';
import { type BuildMode, type Project } from '../project.js';
/**
 * Note: we have to return `Promise<string>` here rather than just `string`
 * The official documentation has an error and doesn't match the TS declarations for this method
 *
 * @see https://oclif.io/docs/args/
 */
export declare const toLowerCaseArgParser: (input: string) => Promise<string>;
export declare abstract class DevvitCommand extends Command {
    #private;
    static baseFlags: {
        readonly config: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
    };
    protected readonly developerAccountClient: import("@devvit/protos/community.js").DeveloperAccountClient;
    /** Project configuration. */
    get project(): Project;
    /**
     * Warning: mutating project state is not well supported. State copies are not
     * invalidated.
     */
    set project(project: Project);
    isRunningInAppDirectory(): boolean;
    protected init(mode?: BuildMode | 'None'): Promise<void>;
    protected checkDeveloperAccount: () => Promise<void>;
    protected checkIfUserLoggedIn(): Promise<void>;
    /**
     * @description Get the user's display name from the stored token.
     */
    protected getUserDisplayName(token: StoredToken): Promise<string>;
    /**
     * @description Get the user's t2 id from the stored token.
     */
    protected getUserT2Id(token: StoredToken): Promise<T2>;
    /**
     * @description Handle resolving the appname@version for the following cases
     *
     * Case 1: devvit <publish|install> <app-name>@<version>  - can be run anywhere
     * Case 1: devvit <publish|install> <app-name>            - can be run anywhere
     * Case 3: devvit <publish|install> @<version>            - must be in project directory
     * Case 2: devvit <publish|install>                       - must be in project directory
     */
    protected inferAppNameAndVersion(appWithVersion: string | undefined): Promise<{
        appName: string;
        version: string;
    }>;
}
//# sourceMappingURL=DevvitCommand.d.ts.map