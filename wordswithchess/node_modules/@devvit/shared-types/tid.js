import { assert } from './assert.js';
// CALMS!
export var T_PREFIX;
(function (T_PREFIX) {
    T_PREFIX["COMMENT"] = "t1_";
    T_PREFIX["ACCOUNT"] = "t2_";
    T_PREFIX["LINK"] = "t3_";
    T_PREFIX["MESSAGE"] = "t4_";
    T_PREFIX["SUBREDDIT"] = "t5_";
    T_PREFIX["AWARD"] = "t6_";
})(T_PREFIX || (T_PREFIX = {}));
// type guards
export function isT1(id) {
    return id.startsWith(T_PREFIX.COMMENT);
}
export function isT2(id) {
    return id.startsWith(T_PREFIX.ACCOUNT);
}
export function isT3(id) {
    return id.startsWith(T_PREFIX.LINK);
}
export function isT4(id) {
    return id.startsWith(T_PREFIX.MESSAGE);
}
export function isT5(id) {
    return id.startsWith(T_PREFIX.SUBREDDIT);
}
export function isT6(id) {
    return id.startsWith(T_PREFIX.AWARD);
}
// assertion functions
export function assertT1(id) {
    assert(isT1(id), `Expected comment id to start with ${T_PREFIX.COMMENT}, got ${id}}`);
}
export function assertT2(id) {
    assert(isT2(id), `Expected account id to start with ${T_PREFIX.ACCOUNT}, got ${id}}`);
}
export function assertT3(id) {
    assert(isT3(id), `Expected link id to start with ${T_PREFIX.LINK}, got ${id}}`);
}
export function assertT4(id) {
    assert(isT4(id), `Expected message id to start with ${T_PREFIX.MESSAGE}, got ${id}}`);
}
export function assertT5(id) {
    assert(isT5(id), `Expected subreddit id to start with ${T_PREFIX.SUBREDDIT}, got ${id}}`);
}
export function assertT6(id) {
    assert(isT6(id), `Expected award id to start with ${T_PREFIX.AWARD}, got ${id}}`);
}
// factory functions
export function T1(id) {
    assertT1(id);
    return id;
}
export function T2(id) {
    assertT2(id);
    return id;
}
export function T3(id) {
    assertT3(id);
    return id;
}
export function T4(id) {
    assertT4(id);
    return id;
}
export function T5(id) {
    assertT5(id);
    return id;
}
export function T6(id) {
    assertT6(id);
    return id;
}
export function asTid(id) {
    if (isT1(id)) {
        return T1(id);
    }
    if (isT2(id)) {
        return T2(id);
    }
    if (isT3(id)) {
        return T3(id);
    }
    if (isT4(id)) {
        return T4(id);
    }
    if (isT5(id)) {
        return T5(id);
    }
    if (isT6(id)) {
        return T6(id);
    }
    throw new Error(`Expected thing id to start with ${Object.values(T_PREFIX).join(', ')} got ${id}}`);
}
