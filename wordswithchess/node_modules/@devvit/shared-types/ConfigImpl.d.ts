import { Definition } from '@devvit/protos/lib/Types.js';
import { ActorSpec, DependencySpec, Permissions } from '@devvit/protos/types/devvit/runtime/bundle.js';
import type { AssetMap } from './Assets.js';
import type { Config } from './Config.js';
import type { Namespace } from './Namespace.js';
export type ClientFactory = {
    Build<T>(desc: Definition): T;
};
export declare class ConfigImpl implements Config {
    #private;
    readonly assets: Readonly<AssetMap>;
    readonly webviewAssets: Readonly<AssetMap>;
    constructor(factory: ClientFactory, actorSpec: ActorSpec, assets: AssetMap, webViewAssets: AssetMap);
    export(namespace: Readonly<Namespace>): DependencySpec;
    get providedDefinitions(): Readonly<Definition>[];
    provides(definition: Readonly<Definition>): void;
    addPermissions(permissions: Readonly<Permissions>): void;
    use<T>(definition: Readonly<Definition>): T;
    uses(definition: Readonly<Definition>): boolean;
    getPermissions(): Readonly<Permissions>[];
}
//# sourceMappingURL=ConfigImpl.d.ts.map