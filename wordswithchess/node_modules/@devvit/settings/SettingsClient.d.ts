import { type FormFieldValue } from '@devvit/protos';
import type { SettingsResponse } from '@devvit/protos/types/devvit/plugin/settings/v1alpha/settings.js';
import type { FormField } from '@devvit/shared';
import type { SettingsValues } from './types/settings.js';
export declare class SettingsClient {
    #private;
    get<T = string | number | boolean | string[] | undefined>(name: string): Promise<T | undefined>;
    getAll<T extends object = SettingsValues>(): Promise<T>;
}
export declare const settings: SettingsClient;
export declare function cleanAppSettings(response: SettingsResponse): void;
export declare function getSettingsValues(results: {
    readonly [key: string]: FormFieldValue;
}, settingsDefinitions: FormField[] | undefined): SettingsValues;
export declare function setDefaultsIfNecessary(settingsValues: SettingsValues, settingsDefinitions: FormField[]): void;
//# sourceMappingURL=SettingsClient.d.ts.map