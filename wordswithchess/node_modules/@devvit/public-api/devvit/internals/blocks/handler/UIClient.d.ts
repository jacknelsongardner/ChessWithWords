import type { Form } from '@devvit/shared';
import type { FormKey } from '@devvit/shared-types/useForm.js';
import type { Comment, Post, Subreddit, User } from '../../../../apis/reddit/models/index.js';
import type { JSONObject } from '../../../../types/json.js';
import type { Toast } from '../../../../types/toast.js';
import type { UIClient as _UIClient } from '../../../../types/ui-client.js';
import type { WebViewUIClient } from '../../../../types/web-view-ui-client.js';
import type { RenderContext } from './RenderContext.js';
export declare function useUI(): _UIClient;
export declare class UIClient implements _UIClient {
    #private;
    constructor(renderContext: RenderContext);
    get webView(): WebViewUIClient;
    showForm(formKey: FormKey, data?: JSONObject | undefined): void;
    showFormInternal(formKey: FormKey, data?: JSONObject | undefined, formInternalOverride?: Form | undefined): void;
    showToast(text: string): void;
    showToast(toast: Toast): void;
    navigateTo(url: string): void;
    navigateTo(subreddit: Pick<Subreddit, 'url'>): void;
    navigateTo(post: Pick<Post, 'url'>): void;
    navigateTo(comment: Pick<Comment, 'url'>): void;
    navigateTo(user: Pick<User, 'url'>): void;
}
//# sourceMappingURL=UIClient.d.ts.map