import { type FormFieldValue, type Metadata } from '@devvit/protos';
import type { SettingsResponse } from '@devvit/protos/types/devvit/plugin/settings/v1alpha/settings.js';
import type { SettingsClient as _SettingsClient, SettingsFormField, SettingsValues } from '../../types/settings.js';
export declare class SettingsClient implements _SettingsClient {
    #private;
    constructor(metadata: Metadata);
    get<T = string | number | boolean | string[] | undefined>(name: string): Promise<T | undefined>;
    getAll<T extends object = SettingsValues>(): Promise<T>;
}
export declare function cleanAppSettings(response: SettingsResponse): void;
export declare function getSettingsValues(results: {
    [key: string]: FormFieldValue;
}, settingsDefinitions: SettingsFormField[] | undefined): SettingsValues;
export declare function setDefaultsIfNecessary(settingsValues: SettingsValues, settingsDefinitions: SettingsFormField[]): void;
//# sourceMappingURL=SettingsClient.d.ts.map