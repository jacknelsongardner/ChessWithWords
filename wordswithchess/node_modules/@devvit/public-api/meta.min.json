{
  "inputs": {
    "src/apis/reddit/common.ts": {
      "bytes": 155,
      "imports": [],
      "format": "esm"
    },
    "../shared-types/dist/NonNull.js": {
      "bytes": 206,
      "imports": [],
      "format": "esm"
    },
    "../shared-types/dist/Actor.js": {
      "bytes": 1242,
      "imports": [],
      "format": "esm"
    },
    "../shared-types/dist/fetch-domains.js": {
      "bytes": 1892,
      "imports": [],
      "format": "esm"
    },
    "../shared/dist/types/baseContext.js": {
      "bytes": 11,
      "imports": [],
      "format": "esm"
    },
    "../shared/dist/types/menu-item.js": {
      "bytes": 11,
      "imports": [],
      "format": "esm"
    },
    "../shared/dist/types/settings.js": {
      "bytes": 11,
      "imports": [],
      "format": "esm"
    },
    "../shared/dist/types/triggers.js": {
      "bytes": 708,
      "imports": [
        {
          "path": "@devvit/protos/json/devvit/events/v1alpha/events.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/devvit/events/v1alpha/events.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/devvit/reddit/v2alpha/postv2.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/devvit/reddit/v2alpha/subredditv2.js",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "../shared/dist/types/ui-response.js": {
      "bytes": 11,
      "imports": [],
      "format": "esm"
    },
    "../shared-types/dist/json.js": {
      "bytes": 11,
      "imports": [],
      "format": "esm"
    },
    "../shared-types/dist/shared/form.js": {
      "bytes": 177,
      "imports": [],
      "format": "esm"
    },
    "../shared-types/dist/assert.js": {
      "bytes": 89,
      "imports": [],
      "format": "esm"
    },
    "../shared-types/dist/tid.js": {
      "bytes": 2341,
      "imports": [
        {
          "path": "../shared-types/dist/assert.js",
          "kind": "import-statement",
          "original": "./assert.js"
        }
      ],
      "format": "esm"
    },
    "../shared/dist/index.js": {
      "bytes": 336,
      "imports": [
        {
          "path": "../shared/dist/types/baseContext.js",
          "kind": "import-statement",
          "original": "./types/baseContext.js"
        },
        {
          "path": "../shared/dist/types/menu-item.js",
          "kind": "import-statement",
          "original": "./types/menu-item.js"
        },
        {
          "path": "../shared/dist/types/settings.js",
          "kind": "import-statement",
          "original": "./types/settings.js"
        },
        {
          "path": "../shared/dist/types/triggers.js",
          "kind": "import-statement",
          "original": "./types/triggers.js"
        },
        {
          "path": "../shared/dist/types/ui-response.js",
          "kind": "import-statement",
          "original": "./types/ui-response.js"
        },
        {
          "path": "../shared-types/dist/json.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/json.js"
        },
        {
          "path": "../shared-types/dist/shared/form.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/shared/form.js"
        },
        {
          "path": "../shared-types/dist/tid.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/tid.js"
        }
      ],
      "format": "esm"
    },
    "src/types/form.ts": {
      "bytes": 2075,
      "imports": [
        {
          "path": "../shared/dist/index.js",
          "kind": "import-statement",
          "original": "@devvit/shared"
        }
      ],
      "format": "esm"
    },
    "src/apis/ui/helpers/assertValidFormFields.ts": {
      "bytes": 1058,
      "imports": [
        {
          "path": "src/types/form.ts",
          "kind": "import-statement",
          "original": "../../../types/form.js"
        }
      ],
      "format": "esm"
    },
    "src/types/configuration.ts": {
      "bytes": 1203,
      "imports": [],
      "format": "esm"
    },
    "src/types/context.ts": {
      "bytes": 10792,
      "imports": [],
      "format": "esm"
    },
    "src/types/custom-post.ts": {
      "bytes": 410,
      "imports": [],
      "format": "esm"
    },
    "src/types/data.ts": {
      "bytes": 120,
      "imports": [],
      "format": "esm"
    },
    "src/types/hooks.ts": {
      "bytes": 6078,
      "imports": [],
      "format": "esm"
    },
    "src/types/icons.ts": {
      "bytes": 4973,
      "imports": [],
      "format": "esm"
    },
    "src/types/kvStore.ts": {
      "bytes": 501,
      "imports": [],
      "format": "esm"
    },
    "src/types/media.ts": {
      "bytes": 972,
      "imports": [],
      "format": "esm"
    },
    "src/types/menu-item.ts": {
      "bytes": 1134,
      "imports": [],
      "format": "esm"
    },
    "src/types/redis.ts": {
      "bytes": 60365,
      "imports": [],
      "format": "esm"
    },
    "src/types/scheduler.ts": {
      "bytes": 3292,
      "imports": [],
      "format": "esm"
    },
    "src/types/settings.ts": {
      "bytes": 2198,
      "imports": [],
      "format": "esm"
    },
    "src/types/toast.ts": {
      "bytes": 160,
      "imports": [],
      "format": "esm"
    },
    "src/types/triggers.ts": {
      "bytes": 7908,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/types/ui-client.ts": {
      "bytes": 1431,
      "imports": [],
      "format": "esm"
    },
    "src/types/index.ts": {
      "bytes": 482,
      "imports": [
        {
          "path": "src/types/configuration.ts",
          "kind": "import-statement",
          "original": "./configuration.js"
        },
        {
          "path": "src/types/context.ts",
          "kind": "import-statement",
          "original": "./context.js"
        },
        {
          "path": "src/types/custom-post.ts",
          "kind": "import-statement",
          "original": "./custom-post.js"
        },
        {
          "path": "src/types/data.ts",
          "kind": "import-statement",
          "original": "./data.js"
        },
        {
          "path": "src/types/form.ts",
          "kind": "import-statement",
          "original": "./form.js"
        },
        {
          "path": "src/types/hooks.ts",
          "kind": "import-statement",
          "original": "./hooks.js"
        },
        {
          "path": "src/types/icons.ts",
          "kind": "import-statement",
          "original": "./icons.js"
        },
        {
          "path": "src/types/kvStore.ts",
          "kind": "import-statement",
          "original": "./kvStore.js"
        },
        {
          "path": "src/types/media.ts",
          "kind": "import-statement",
          "original": "./media.js"
        },
        {
          "path": "src/types/menu-item.ts",
          "kind": "import-statement",
          "original": "./menu-item.js"
        },
        {
          "path": "src/types/redis.ts",
          "kind": "import-statement",
          "original": "./redis.js"
        },
        {
          "path": "src/types/scheduler.ts",
          "kind": "import-statement",
          "original": "./scheduler.js"
        },
        {
          "path": "src/types/settings.ts",
          "kind": "import-statement",
          "original": "./settings.js"
        },
        {
          "path": "src/types/toast.ts",
          "kind": "import-statement",
          "original": "./toast.js"
        },
        {
          "path": "src/types/triggers.ts",
          "kind": "import-statement",
          "original": "./triggers.js"
        },
        {
          "path": "src/types/ui-client.ts",
          "kind": "import-statement",
          "original": "./ui-client.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/ui/helpers/transformForm.ts": {
      "bytes": 3807,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/helpers/extendDevvitPrototype.ts": {
      "bytes": 459,
      "imports": [
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../Devvit.js"
        }
      ],
      "format": "esm"
    },
    "../shared-types/dist/Header.js": {
      "bytes": 2474,
      "imports": [],
      "format": "esm"
    },
    "src/types/realtime.ts": {
      "bytes": 636,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/blocks/useChannel.ts": {
      "bytes": 4925,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/types/hooks.ts",
          "kind": "import-statement",
          "original": "../../../types/hooks.js"
        },
        {
          "path": "src/types/realtime.ts",
          "kind": "import-statement",
          "original": "../../../types/realtime.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/ui/helpers/getFormValues.ts": {
      "bytes": 1067,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/useForm.ts": {
      "bytes": 1922,
      "imports": [
        {
          "path": "src/apis/ui/helpers/getFormValues.ts",
          "kind": "import-statement",
          "original": "../../../apis/ui/helpers/getFormValues.js"
        },
        {
          "path": "src/types/hooks.ts",
          "kind": "import-statement",
          "original": "../../../types/hooks.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/useInterval.ts": {
      "bytes": 2745,
      "imports": [
        {
          "path": "src/types/hooks.ts",
          "kind": "import-statement",
          "original": "../../../types/hooks.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/useState.ts": {
      "bytes": 1591,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/promise_cache.ts": {
      "bytes": 9648,
      "imports": [
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/cache.ts": {
      "bytes": 685,
      "imports": [
        {
          "path": "src/devvit/internals/promise_cache.ts",
          "kind": "import-statement",
          "original": "./promise_cache.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/AssetsClient/AssetsClient.ts": {
      "bytes": 3716,
      "imports": [
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../devvit/Devvit.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/key-value-storage/KeyValueStorage.ts": {
      "bytes": 1187,
      "imports": [
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../devvit/Devvit.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/media/MediaClient.ts": {
      "bytes": 655,
      "imports": [
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../devvit/Devvit.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/modLog/ModLogClient.ts": {
      "bytes": 453,
      "imports": [
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../devvit/Devvit.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/realtime/RealtimeClient.ts": {
      "bytes": 519,
      "imports": [
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../devvit/Devvit.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/types/tid.ts": {
      "bytes": 3713,
      "imports": [
        {
          "path": "../shared-types/dist/assert.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/assert.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/RedditAPIClient.ts": {
      "bytes": 62161,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../devvit/Devvit.js"
        },
        {
          "path": "src/types/tid.ts",
          "kind": "import-statement",
          "original": "../../types/tid.js"
        },
        {
          "path": "src/apis/reddit/models/index.ts",
          "kind": "import-statement",
          "original": "./models/index.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/redis/RedisClient.ts": {
      "bytes": 28222,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../devvit/Devvit.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/scheduler/SchedulerClient.ts": {
      "bytes": 2190,
      "imports": [
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../devvit/Devvit.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/settings/SettingsClient.ts": {
      "bytes": 4212,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../devvit/Devvit.js"
        },
        {
          "path": "src/apis/ui/helpers/getFormValues.ts",
          "kind": "import-statement",
          "original": "../ui/helpers/getFormValues.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/ui/UIClient.ts": {
      "bytes": 4412,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../devvit/Devvit.js"
        },
        {
          "path": "src/apis/ui/helpers/assertValidFormFields.ts",
          "kind": "import-statement",
          "original": "./helpers/assertValidFormFields.js"
        },
        {
          "path": "src/apis/ui/helpers/transformForm.ts",
          "kind": "import-statement",
          "original": "./helpers/transformForm.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/makeAPIClients.ts": {
      "bytes": 3362,
      "imports": [
        {
          "path": "src/devvit/internals/blocks/useChannel.ts",
          "kind": "import-statement",
          "original": "../devvit/internals/blocks/useChannel.js"
        },
        {
          "path": "src/devvit/internals/blocks/useForm.ts",
          "kind": "import-statement",
          "original": "../devvit/internals/blocks/useForm.js"
        },
        {
          "path": "src/devvit/internals/blocks/useInterval.ts",
          "kind": "import-statement",
          "original": "../devvit/internals/blocks/useInterval.js"
        },
        {
          "path": "src/devvit/internals/blocks/useState.ts",
          "kind": "import-statement",
          "original": "../devvit/internals/blocks/useState.js"
        },
        {
          "path": "src/devvit/internals/cache.ts",
          "kind": "import-statement",
          "original": "../devvit/internals/cache.js"
        },
        {
          "path": "src/apis/AssetsClient/AssetsClient.ts",
          "kind": "import-statement",
          "original": "./AssetsClient/AssetsClient.js"
        },
        {
          "path": "src/apis/key-value-storage/KeyValueStorage.ts",
          "kind": "import-statement",
          "original": "./key-value-storage/KeyValueStorage.js"
        },
        {
          "path": "src/apis/media/MediaClient.ts",
          "kind": "import-statement",
          "original": "./media/MediaClient.js"
        },
        {
          "path": "src/apis/modLog/ModLogClient.ts",
          "kind": "import-statement",
          "original": "./modLog/ModLogClient.js"
        },
        {
          "path": "src/apis/realtime/RealtimeClient.ts",
          "kind": "import-statement",
          "original": "./realtime/RealtimeClient.js"
        },
        {
          "path": "src/apis/reddit/RedditAPIClient.ts",
          "kind": "import-statement",
          "original": "./reddit/RedditAPIClient.js"
        },
        {
          "path": "src/apis/redis/RedisClient.ts",
          "kind": "import-statement",
          "original": "./redis/RedisClient.js"
        },
        {
          "path": "src/apis/scheduler/SchedulerClient.ts",
          "kind": "import-statement",
          "original": "./scheduler/SchedulerClient.js"
        },
        {
          "path": "src/apis/settings/SettingsClient.ts",
          "kind": "import-statement",
          "original": "./settings/SettingsClient.js"
        },
        {
          "path": "src/apis/ui/UIClient.ts",
          "kind": "import-statement",
          "original": "./ui/UIClient.js"
        }
      ],
      "format": "esm"
    },
    "package.json": {
      "bytes": 2357,
      "imports": [],
      "format": "esm",
      "with": {
        "type": "json"
      }
    },
    "src/devvit/internals/context.ts": {
      "bytes": 3453,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "package.json",
          "kind": "import-statement",
          "original": "../../version.json",
          "with": {
            "type": "json"
          }
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/helpers/settingsUtils.ts": {
      "bytes": 2093,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/apis/makeAPIClients.ts",
          "kind": "import-statement",
          "original": "../../../apis/makeAPIClients.js"
        },
        {
          "path": "src/apis/ui/helpers/getFormValues.ts",
          "kind": "import-statement",
          "original": "../../../apis/ui/helpers/getFormValues.js"
        },
        {
          "path": "src/devvit/internals/context.ts",
          "kind": "import-statement",
          "original": "../context.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/app-settings.ts": {
      "bytes": 1233,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/apis/ui/helpers/transformForm.ts",
          "kind": "import-statement",
          "original": "../../apis/ui/helpers/transformForm.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../Devvit.js"
        },
        {
          "path": "src/devvit/internals/helpers/extendDevvitPrototype.ts",
          "kind": "import-statement",
          "original": "./helpers/extendDevvitPrototype.js"
        },
        {
          "path": "src/devvit/internals/helpers/settingsUtils.ts",
          "kind": "import-statement",
          "original": "./helpers/settingsUtils.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/ui/helpers/getEffectsFromUIClient.ts": {
      "bytes": 369,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/helpers/makeUniqueIdGenerator.ts": {
      "bytes": 328,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/semanticColors.ts": {
      "bytes": 22537,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/helpers/color.ts": {
      "bytes": 5349,
      "imports": [
        {
          "path": "src/devvit/internals/semanticColors.ts",
          "kind": "import-statement",
          "original": "../semanticColors.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/transformContext.ts": {
      "bytes": 3971,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/transformerUtils.ts": {
      "bytes": 3341,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/BlocksTransformer.ts": {
      "bytes": 24576,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../Devvit.js"
        },
        {
          "path": "src/devvit/internals/helpers/color.ts",
          "kind": "import-statement",
          "original": "../helpers/color.js"
        },
        {
          "path": "src/devvit/internals/blocks/transformContext.ts",
          "kind": "import-statement",
          "original": "./transformContext.js"
        },
        {
          "path": "src/devvit/internals/blocks/transformerUtils.ts",
          "kind": "import-statement",
          "original": "./transformerUtils.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/BlocksReconciler.ts": {
      "bytes": 19562,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "src/apis/makeAPIClients.ts",
          "kind": "import-statement",
          "original": "../../../apis/makeAPIClients.js"
        },
        {
          "path": "src/apis/ui/helpers/getEffectsFromUIClient.ts",
          "kind": "import-statement",
          "original": "../../../apis/ui/helpers/getEffectsFromUIClient.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../Devvit.js"
        },
        {
          "path": "src/devvit/internals/context.ts",
          "kind": "import-statement",
          "original": "../context.js"
        },
        {
          "path": "src/devvit/internals/helpers/makeUniqueIdGenerator.ts",
          "kind": "import-statement",
          "original": "../helpers/makeUniqueIdGenerator.js"
        },
        {
          "path": "src/devvit/internals/blocks/BlocksTransformer.ts",
          "kind": "import-statement",
          "original": "./BlocksTransformer.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/custom-post.ts": {
      "bytes": 1172,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../Devvit.js"
        },
        {
          "path": "src/devvit/internals/blocks/BlocksReconciler.ts",
          "kind": "import-statement",
          "original": "./blocks/BlocksReconciler.js"
        },
        {
          "path": "src/devvit/internals/helpers/extendDevvitPrototype.ts",
          "kind": "import-statement",
          "original": "./helpers/extendDevvitPrototype.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/installation-settings.ts": {
      "bytes": 1308,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/apis/ui/helpers/transformForm.ts",
          "kind": "import-statement",
          "original": "../../apis/ui/helpers/transformForm.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../Devvit.js"
        },
        {
          "path": "src/devvit/internals/helpers/extendDevvitPrototype.ts",
          "kind": "import-statement",
          "original": "./helpers/extendDevvitPrototype.js"
        },
        {
          "path": "src/devvit/internals/helpers/settingsUtils.ts",
          "kind": "import-statement",
          "original": "./helpers/settingsUtils.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/csrf.ts": {
      "bytes": 4432,
      "imports": [
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "src/devvit/internals/menu-items.ts",
          "kind": "import-statement",
          "original": "./menu-items.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/menu-items.ts": {
      "bytes": 3796,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/apis/makeAPIClients.ts",
          "kind": "import-statement",
          "original": "../../apis/makeAPIClients.js"
        },
        {
          "path": "src/apis/ui/helpers/getEffectsFromUIClient.ts",
          "kind": "import-statement",
          "original": "../../apis/ui/helpers/getEffectsFromUIClient.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../Devvit.js"
        },
        {
          "path": "src/devvit/internals/context.ts",
          "kind": "import-statement",
          "original": "./context.js"
        },
        {
          "path": "src/devvit/internals/csrf.ts",
          "kind": "import-statement",
          "original": "./csrf.js"
        },
        {
          "path": "src/devvit/internals/helpers/extendDevvitPrototype.ts",
          "kind": "import-statement",
          "original": "./helpers/extendDevvitPrototype.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/plugins.ts": {
      "bytes": 272,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/scheduler.ts": {
      "bytes": 1177,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/apis/makeAPIClients.ts",
          "kind": "import-statement",
          "original": "../../apis/makeAPIClients.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../Devvit.js"
        },
        {
          "path": "src/devvit/internals/context.ts",
          "kind": "import-statement",
          "original": "./context.js"
        },
        {
          "path": "src/devvit/internals/helpers/extendDevvitPrototype.ts",
          "kind": "import-statement",
          "original": "./helpers/extendDevvitPrototype.js"
        }
      ],
      "format": "esm"
    },
    "../shared-types/dist/StringUtil.js": {
      "bytes": 1747,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/triggers.ts": {
      "bytes": 8595,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "../shared-types/dist/StringUtil.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/StringUtil.js"
        },
        {
          "path": "src/apis/makeAPIClients.ts",
          "kind": "import-statement",
          "original": "../../apis/makeAPIClients.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../Devvit.js"
        },
        {
          "path": "src/devvit/internals/context.ts",
          "kind": "import-statement",
          "original": "./context.js"
        },
        {
          "path": "src/devvit/internals/helpers/extendDevvitPrototype.ts",
          "kind": "import-statement",
          "original": "./helpers/extendDevvitPrototype.js"
        }
      ],
      "format": "esm"
    },
    "../../node_modules/kind-of/index.js": {
      "bytes": 3562,
      "imports": [],
      "format": "cjs"
    },
    "../../node_modules/shallow-clone/index.js": {
      "bytes": 1887,
      "imports": [
        {
          "path": "../../node_modules/kind-of/index.js",
          "kind": "require-call",
          "original": "kind-of"
        }
      ],
      "format": "cjs"
    },
    "../../node_modules/isobject/index.js": {
      "bytes": 288,
      "imports": [],
      "format": "cjs"
    },
    "../../node_modules/clone-deep/node_modules/is-plain-object/index.js": {
      "bytes": 856,
      "imports": [
        {
          "path": "../../node_modules/isobject/index.js",
          "kind": "require-call",
          "original": "isobject"
        }
      ],
      "format": "cjs"
    },
    "../../node_modules/clone-deep/index.js": {
      "bytes": 1023,
      "imports": [
        {
          "path": "../../node_modules/shallow-clone/index.js",
          "kind": "require-call",
          "original": "shallow-clone"
        },
        {
          "path": "../../node_modules/kind-of/index.js",
          "kind": "require-call",
          "original": "kind-of"
        },
        {
          "path": "../../node_modules/clone-deep/node_modules/is-plain-object/index.js",
          "kind": "require-call",
          "original": "is-plain-object"
        }
      ],
      "format": "cjs"
    },
    "../../node_modules/moderndash/dist/index.js": {
      "bytes": 25486,
      "imports": [
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/ui-event-handler.ts": {
      "bytes": 4454,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "../../node_modules/clone-deep/index.js",
          "kind": "import-statement",
          "original": "clone-deep"
        },
        {
          "path": "../../node_modules/moderndash/dist/index.js",
          "kind": "import-statement",
          "original": "moderndash"
        },
        {
          "path": "src/apis/makeAPIClients.ts",
          "kind": "import-statement",
          "original": "../../apis/makeAPIClients.js"
        },
        {
          "path": "src/apis/ui/helpers/getEffectsFromUIClient.ts",
          "kind": "import-statement",
          "original": "../../apis/ui/helpers/getEffectsFromUIClient.js"
        },
        {
          "path": "src/apis/ui/helpers/getFormValues.ts",
          "kind": "import-statement",
          "original": "../../apis/ui/helpers/getFormValues.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../Devvit.js"
        },
        {
          "path": "src/devvit/internals/blocks/BlocksReconciler.ts",
          "kind": "import-statement",
          "original": "./blocks/BlocksReconciler.js"
        },
        {
          "path": "src/devvit/internals/context.ts",
          "kind": "import-statement",
          "original": "./context.js"
        },
        {
          "path": "src/devvit/internals/csrf.ts",
          "kind": "import-statement",
          "original": "./csrf.js"
        },
        {
          "path": "src/devvit/internals/helpers/extendDevvitPrototype.ts",
          "kind": "import-statement",
          "original": "./helpers/extendDevvitPrototype.js"
        },
        {
          "path": "src/devvit/internals/menu-items.ts",
          "kind": "import-statement",
          "original": "./menu-items.js"
        }
      ],
      "format": "esm"
    },
    "../shared-types/dist/CircuitBreaker.js": {
      "bytes": 884,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/promise_cache.ts": {
      "bytes": 9791,
      "imports": [
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/cache.ts": {
      "bytes": 673,
      "imports": [
        {
          "path": "src/devvit/internals/blocks/handler/promise_cache.ts",
          "kind": "import-statement",
          "original": "./promise_cache.js"
        }
      ],
      "format": "esm"
    },
    "../shared-types/dist/useForm.js": {
      "bytes": 943,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/useForm.ts": {
      "bytes": 1920,
      "imports": [
        {
          "path": "../shared-types/dist/useForm.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/useForm.js"
        },
        {
          "path": "src/apis/ui/helpers/getFormValues.ts",
          "kind": "import-statement",
          "original": "../../../../apis/ui/helpers/getFormValues.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/BlocksHandler.ts",
          "kind": "import-statement",
          "original": "./BlocksHandler.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/UIClient.ts": {
      "bytes": 4926,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/apis/ui/helpers/assertValidFormFields.ts",
          "kind": "import-statement",
          "original": "../../../../apis/ui/helpers/assertValidFormFields.js"
        },
        {
          "path": "src/apis/ui/helpers/transformForm.ts",
          "kind": "import-statement",
          "original": "../../../../apis/ui/helpers/transformForm.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/BlocksHandler.ts",
          "kind": "import-statement",
          "original": "./BlocksHandler.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useForm.ts",
          "kind": "import-statement",
          "original": "./useForm.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/useChannel.ts": {
      "bytes": 5830,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "src/types/realtime.ts",
          "kind": "import-statement",
          "original": "../../../../types/realtime.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/BlocksHandler.ts",
          "kind": "import-statement",
          "original": "./BlocksHandler.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/RenderContext.ts": {
      "bytes": 8554,
      "imports": [
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/useInterval.ts": {
      "bytes": 2569,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/devvit/internals/blocks/handler/BlocksHandler.ts",
          "kind": "import-statement",
          "original": "./BlocksHandler.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/RenderContext.ts",
          "kind": "import-statement",
          "original": "./RenderContext.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/types.ts": {
      "bytes": 3169,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/useAsync.ts": {
      "bytes": 6955,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/CircuitBreaker.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/CircuitBreaker.js"
        },
        {
          "path": "../shared-types/dist/StringUtil.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/StringUtil.js"
        },
        {
          "path": "../../node_modules/moderndash/dist/index.js",
          "kind": "import-statement",
          "original": "moderndash"
        },
        {
          "path": "src/devvit/internals/blocks/handler/BlocksHandler.ts",
          "kind": "import-statement",
          "original": "./BlocksHandler.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/useState.ts": {
      "bytes": 4832,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/devvit/internals/blocks/handler/BlocksHandler.ts",
          "kind": "import-statement",
          "original": "./BlocksHandler.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/types.ts",
          "kind": "import-statement",
          "original": "./types.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useAsync.ts",
          "kind": "import-statement",
          "original": "./useAsync.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/ContextBuilder.ts": {
      "bytes": 2991,
      "imports": [
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "src/apis/AssetsClient/AssetsClient.ts",
          "kind": "import-statement",
          "original": "../../../../apis/AssetsClient/AssetsClient.js"
        },
        {
          "path": "src/apis/key-value-storage/KeyValueStorage.ts",
          "kind": "import-statement",
          "original": "../../../../apis/key-value-storage/KeyValueStorage.js"
        },
        {
          "path": "src/apis/media/MediaClient.ts",
          "kind": "import-statement",
          "original": "../../../../apis/media/MediaClient.js"
        },
        {
          "path": "src/apis/modLog/ModLogClient.ts",
          "kind": "import-statement",
          "original": "../../../../apis/modLog/ModLogClient.js"
        },
        {
          "path": "src/apis/realtime/RealtimeClient.ts",
          "kind": "import-statement",
          "original": "../../../../apis/realtime/RealtimeClient.js"
        },
        {
          "path": "src/apis/reddit/RedditAPIClient.ts",
          "kind": "import-statement",
          "original": "../../../../apis/reddit/RedditAPIClient.js"
        },
        {
          "path": "src/apis/redis/RedisClient.ts",
          "kind": "import-statement",
          "original": "../../../../apis/redis/RedisClient.js"
        },
        {
          "path": "src/apis/scheduler/SchedulerClient.ts",
          "kind": "import-statement",
          "original": "../../../../apis/scheduler/SchedulerClient.js"
        },
        {
          "path": "src/apis/settings/SettingsClient.ts",
          "kind": "import-statement",
          "original": "../../../../apis/settings/SettingsClient.js"
        },
        {
          "path": "src/devvit/internals/context.ts",
          "kind": "import-statement",
          "original": "../../context.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/cache.ts",
          "kind": "import-statement",
          "original": "./cache.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/UIClient.ts",
          "kind": "import-statement",
          "original": "./UIClient.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useChannel.ts",
          "kind": "import-statement",
          "original": "./useChannel.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useForm.ts",
          "kind": "import-statement",
          "original": "./useForm.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useInterval.ts",
          "kind": "import-statement",
          "original": "./useInterval.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useState.ts",
          "kind": "import-statement",
          "original": "./useState.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/BlocksHandler.ts": {
      "bytes": 19481,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/CircuitBreaker.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/CircuitBreaker.js"
        },
        {
          "path": "src/devvit/internals/blocks/BlocksTransformer.ts",
          "kind": "import-statement",
          "original": "../BlocksTransformer.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/ContextBuilder.ts",
          "kind": "import-statement",
          "original": "./ContextBuilder.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/RenderContext.ts",
          "kind": "import-statement",
          "original": "./RenderContext.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/types.ts",
          "kind": "import-statement",
          "original": "./types.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/upgrade-app-shim.tsx": {
      "bytes": 4853,
      "imports": [
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../Devvit.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/internals/ui-request-handler.tsx": {
      "bytes": 2141,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../Devvit.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/BlocksHandler.ts",
          "kind": "import-statement",
          "original": "./blocks/handler/BlocksHandler.js"
        },
        {
          "path": "src/devvit/internals/helpers/extendDevvitPrototype.ts",
          "kind": "import-statement",
          "original": "./helpers/extendDevvitPrototype.js"
        },
        {
          "path": "src/devvit/internals/upgrade-app-shim.tsx",
          "kind": "import-statement",
          "original": "./upgrade-app-shim.js"
        }
      ],
      "format": "esm"
    },
    "src/devvit/Devvit.ts": {
      "bytes": 38465,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/reddit/devvit/app_permission/v1/app_permission.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/Actor.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Actor.js"
        },
        {
          "path": "../shared-types/dist/fetch-domains.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/fetch-domains.js"
        },
        {
          "path": "src/apis/ui/helpers/assertValidFormFields.ts",
          "kind": "import-statement",
          "original": "../apis/ui/helpers/assertValidFormFields.js"
        },
        {
          "path": "src/types/index.ts",
          "kind": "import-statement",
          "original": "../types/index.js"
        },
        {
          "path": "src/devvit/internals/app-settings.ts",
          "kind": "import-statement",
          "original": "./internals/app-settings.js"
        },
        {
          "path": "src/devvit/internals/custom-post.ts",
          "kind": "import-statement",
          "original": "./internals/custom-post.js"
        },
        {
          "path": "src/devvit/internals/installation-settings.ts",
          "kind": "import-statement",
          "original": "./internals/installation-settings.js"
        },
        {
          "path": "src/devvit/internals/menu-items.ts",
          "kind": "import-statement",
          "original": "./internals/menu-items.js"
        },
        {
          "path": "src/devvit/internals/plugins.ts",
          "kind": "import-statement",
          "original": "./internals/plugins.js"
        },
        {
          "path": "src/devvit/internals/scheduler.ts",
          "kind": "import-statement",
          "original": "./internals/scheduler.js"
        },
        {
          "path": "src/devvit/internals/triggers.ts",
          "kind": "import-statement",
          "original": "./internals/triggers.js"
        },
        {
          "path": "src/devvit/internals/ui-event-handler.ts",
          "kind": "import-statement",
          "original": "./internals/ui-event-handler.js"
        },
        {
          "path": "src/devvit/internals/ui-request-handler.tsx",
          "kind": "import-statement",
          "original": "./internals/ui-request-handler.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/helpers/makeGettersEnumerable.ts": {
      "bytes": 968,
      "imports": [],
      "format": "esm"
    },
    "../shared-types/dist/richtext/types.js": {
      "bytes": 4111,
      "imports": [],
      "format": "esm"
    },
    "../shared-types/dist/richtext/elements.js": {
      "bytes": 7909,
      "imports": [
        {
          "path": "../shared-types/dist/richtext/mixins.js",
          "kind": "import-statement",
          "original": "./mixins.js"
        },
        {
          "path": "../shared-types/dist/richtext/types.js",
          "kind": "import-statement",
          "original": "./types.js"
        }
      ],
      "format": "esm"
    },
    "../shared-types/dist/richtext/mixins.js": {
      "bytes": 4143,
      "imports": [
        {
          "path": "../shared-types/dist/richtext/elements.js",
          "kind": "import-statement",
          "original": "./elements.js"
        }
      ],
      "format": "esm"
    },
    "../shared-types/dist/richtext/RichTextBuilder.js": {
      "bytes": 3187,
      "imports": [
        {
          "path": "../shared-types/dist/richtext/mixins.js",
          "kind": "import-statement",
          "original": "./mixins.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/helpers/richtextToString.ts": {
      "bytes": 454,
      "imports": [
        {
          "path": "../shared-types/dist/richtext/RichTextBuilder.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/richtext/RichTextBuilder.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/Listing.ts": {
      "bytes": 3299,
      "imports": [
        {
          "path": "src/apis/reddit/helpers/makeGettersEnumerable.ts",
          "kind": "import-statement",
          "original": "../helpers/makeGettersEnumerable.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/ModNote.ts": {
      "bytes": 5851,
      "imports": [
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/types/tid.ts",
          "kind": "import-statement",
          "original": "../../../types/tid.js"
        },
        {
          "path": "src/apis/reddit/models/Listing.ts",
          "kind": "import-statement",
          "original": "./Listing.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/graphql/GraphQL.ts": {
      "bytes": 756,
      "imports": [
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/helpers/permissions.ts": {
      "bytes": 869,
      "imports": [],
      "format": "esm"
    },
    "src/apis/reddit/models/Flair.ts": {
      "bytes": 15840,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/types/tid.ts",
          "kind": "import-statement",
          "original": "../../../types/tid.js"
        },
        {
          "path": "src/apis/reddit/helpers/makeGettersEnumerable.ts",
          "kind": "import-statement",
          "original": "../helpers/makeGettersEnumerable.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "../../node_modules/base64-js/index.js": {
      "bytes": 3932,
      "imports": [],
      "format": "cjs"
    },
    "src/apis/reddit/helpers/textFallbackToRichtext.ts": {
      "bytes": 742,
      "imports": [
        {
          "path": "../shared-types/dist/richtext/RichTextBuilder.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/richtext/RichTextBuilder.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/Post.ts": {
      "bytes": 49820,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/reddit/devvit/app_permission/v1/app_permission.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "../shared-types/dist/richtext/RichTextBuilder.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/richtext/RichTextBuilder.js"
        },
        {
          "path": "../../node_modules/base64-js/index.js",
          "kind": "import-statement",
          "original": "base64-js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/devvit/internals/blocks/BlocksReconciler.ts",
          "kind": "import-statement",
          "original": "../../../devvit/internals/blocks/BlocksReconciler.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/BlocksHandler.ts",
          "kind": "import-statement",
          "original": "../../../devvit/internals/blocks/handler/BlocksHandler.js"
        },
        {
          "path": "src/types/tid.ts",
          "kind": "import-statement",
          "original": "../../../types/tid.js"
        },
        {
          "path": "src/apis/reddit/common.ts",
          "kind": "import-statement",
          "original": "../common.js"
        },
        {
          "path": "src/apis/reddit/graphql/GraphQL.ts",
          "kind": "import-statement",
          "original": "../graphql/GraphQL.js"
        },
        {
          "path": "src/apis/reddit/helpers/makeGettersEnumerable.ts",
          "kind": "import-statement",
          "original": "../helpers/makeGettersEnumerable.js"
        },
        {
          "path": "src/apis/reddit/helpers/richtextToString.ts",
          "kind": "import-statement",
          "original": "../helpers/richtextToString.js"
        },
        {
          "path": "src/apis/reddit/helpers/textFallbackToRichtext.ts",
          "kind": "import-statement",
          "original": "../helpers/textFallbackToRichtext.js"
        },
        {
          "path": "src/apis/reddit/models/Comment.ts",
          "kind": "import-statement",
          "original": "./Comment.js"
        },
        {
          "path": "src/apis/reddit/models/Listing.ts",
          "kind": "import-statement",
          "original": "./Listing.js"
        },
        {
          "path": "src/apis/reddit/models/ModNote.ts",
          "kind": "import-statement",
          "original": "./ModNote.js"
        },
        {
          "path": "src/apis/reddit/models/User.ts",
          "kind": "import-statement",
          "original": "./User.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/User.ts": {
      "bytes": 20385,
      "imports": [
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/types/tid.ts",
          "kind": "import-statement",
          "original": "../../../types/tid.js"
        },
        {
          "path": "src/apis/reddit/graphql/GraphQL.ts",
          "kind": "import-statement",
          "original": "../graphql/GraphQL.js"
        },
        {
          "path": "src/apis/reddit/helpers/makeGettersEnumerable.ts",
          "kind": "import-statement",
          "original": "../helpers/makeGettersEnumerable.js"
        },
        {
          "path": "src/apis/reddit/helpers/permissions.ts",
          "kind": "import-statement",
          "original": "../helpers/permissions.js"
        },
        {
          "path": "src/apis/reddit/models/Comment.ts",
          "kind": "import-statement",
          "original": "./Comment.js"
        },
        {
          "path": "src/apis/reddit/models/Flair.ts",
          "kind": "import-statement",
          "original": "./Flair.js"
        },
        {
          "path": "src/apis/reddit/models/Listing.ts",
          "kind": "import-statement",
          "original": "./Listing.js"
        },
        {
          "path": "src/apis/reddit/models/Post.ts",
          "kind": "import-statement",
          "original": "./Post.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/Comment.ts": {
      "bytes": 24109,
      "imports": [
        {
          "path": "@devvit/protos/json/reddit/devvit/app_permission/v1/app_permission.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/types/tid.ts",
          "kind": "import-statement",
          "original": "../../../types/tid.js"
        },
        {
          "path": "src/apis/reddit/common.ts",
          "kind": "import-statement",
          "original": "../common.js"
        },
        {
          "path": "src/apis/reddit/helpers/makeGettersEnumerable.ts",
          "kind": "import-statement",
          "original": "../helpers/makeGettersEnumerable.js"
        },
        {
          "path": "src/apis/reddit/helpers/richtextToString.ts",
          "kind": "import-statement",
          "original": "../helpers/richtextToString.js"
        },
        {
          "path": "src/apis/reddit/models/Listing.ts",
          "kind": "import-statement",
          "original": "./Listing.js"
        },
        {
          "path": "src/apis/reddit/models/ModNote.ts",
          "kind": "import-statement",
          "original": "./ModNote.js"
        },
        {
          "path": "src/apis/reddit/models/User.ts",
          "kind": "import-statement",
          "original": "./User.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/ModAction.ts": {
      "bytes": 5734,
      "imports": [
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/apis/reddit/models/Listing.ts",
          "kind": "import-statement",
          "original": "./Listing.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/ModMail.ts": {
      "bytes": 34531,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/types/tid.ts",
          "kind": "import-statement",
          "original": "../../../types/tid.js"
        },
        {
          "path": "src/apis/reddit/graphql/GraphQL.ts",
          "kind": "import-statement",
          "original": "../graphql/GraphQL.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/PrivateMessage.ts": {
      "bytes": 4965,
      "imports": [
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/types/tid.ts",
          "kind": "import-statement",
          "original": "../../../types/tid.js"
        },
        {
          "path": "src/apis/reddit/helpers/makeGettersEnumerable.ts",
          "kind": "import-statement",
          "original": "../helpers/makeGettersEnumerable.js"
        },
        {
          "path": "src/apis/reddit/models/Listing.ts",
          "kind": "import-statement",
          "original": "./Listing.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/Subreddit.ts": {
      "bytes": 40647,
      "imports": [
        {
          "path": "../shared-types/dist/Header.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/Header.js"
        },
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/types/tid.ts",
          "kind": "import-statement",
          "original": "../../../types/tid.js"
        },
        {
          "path": "src/apis/reddit/graphql/GraphQL.ts",
          "kind": "import-statement",
          "original": "../graphql/GraphQL.js"
        },
        {
          "path": "src/apis/reddit/helpers/makeGettersEnumerable.ts",
          "kind": "import-statement",
          "original": "../helpers/makeGettersEnumerable.js"
        },
        {
          "path": "src/apis/reddit/models/Comment.ts",
          "kind": "import-statement",
          "original": "./Comment.js"
        },
        {
          "path": "src/apis/reddit/models/Flair.ts",
          "kind": "import-statement",
          "original": "./Flair.js"
        },
        {
          "path": "src/apis/reddit/models/Listing.ts",
          "kind": "import-statement",
          "original": "./Listing.js"
        },
        {
          "path": "src/apis/reddit/models/ModAction.ts",
          "kind": "import-statement",
          "original": "./ModAction.js"
        },
        {
          "path": "src/apis/reddit/models/Post.ts",
          "kind": "import-statement",
          "original": "./Post.js"
        },
        {
          "path": "src/apis/reddit/models/User.ts",
          "kind": "import-statement",
          "original": "./User.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/Vault.ts": {
      "bytes": 2025,
      "imports": [
        {
          "path": "src/types/tid.ts",
          "kind": "import-statement",
          "original": "../../../types/tid.js"
        },
        {
          "path": "src/apis/reddit/graphql/GraphQL.ts",
          "kind": "import-statement",
          "original": "../graphql/GraphQL.js"
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/Widget.ts": {
      "bytes": 19600,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/apis/reddit/helpers/makeGettersEnumerable.ts",
          "kind": "import-statement",
          "original": "../helpers/makeGettersEnumerable.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/WikiPage.ts": {
      "bytes": 13309,
      "imports": [
        {
          "path": "../shared-types/dist/NonNull.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/NonNull.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "../../../devvit/Devvit.js"
        },
        {
          "path": "src/apis/reddit/helpers/makeGettersEnumerable.ts",
          "kind": "import-statement",
          "original": "../helpers/makeGettersEnumerable.js"
        },
        {
          "path": "src/apis/reddit/models/Listing.ts",
          "kind": "import-statement",
          "original": "./Listing.js"
        },
        {
          "path": "src/apis/reddit/models/User.ts",
          "kind": "import-statement",
          "original": "./User.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/apis/reddit/models/index.ts": {
      "bytes": 391,
      "imports": [
        {
          "path": "src/apis/reddit/models/Comment.ts",
          "kind": "import-statement",
          "original": "./Comment.js"
        },
        {
          "path": "src/apis/reddit/models/Flair.ts",
          "kind": "import-statement",
          "original": "./Flair.js"
        },
        {
          "path": "src/apis/reddit/models/Listing.ts",
          "kind": "import-statement",
          "original": "./Listing.js"
        },
        {
          "path": "src/apis/reddit/models/ModAction.ts",
          "kind": "import-statement",
          "original": "./ModAction.js"
        },
        {
          "path": "src/apis/reddit/models/ModMail.ts",
          "kind": "import-statement",
          "original": "./ModMail.js"
        },
        {
          "path": "src/apis/reddit/models/ModNote.ts",
          "kind": "import-statement",
          "original": "./ModNote.js"
        },
        {
          "path": "src/apis/reddit/models/Post.ts",
          "kind": "import-statement",
          "original": "./Post.js"
        },
        {
          "path": "src/apis/reddit/models/PrivateMessage.ts",
          "kind": "import-statement",
          "original": "./PrivateMessage.js"
        },
        {
          "path": "src/apis/reddit/models/Subreddit.ts",
          "kind": "import-statement",
          "original": "./Subreddit.js"
        },
        {
          "path": "src/apis/reddit/models/User.ts",
          "kind": "import-statement",
          "original": "./User.js"
        },
        {
          "path": "src/apis/reddit/models/Vault.ts",
          "kind": "import-statement",
          "original": "./Vault.js"
        },
        {
          "path": "src/apis/reddit/models/Widget.ts",
          "kind": "import-statement",
          "original": "./Widget.js"
        },
        {
          "path": "src/apis/reddit/models/WikiPage.ts",
          "kind": "import-statement",
          "original": "./WikiPage.js"
        }
      ],
      "format": "esm"
    },
    "../shared-types/dist/sanitizeSvg.js": {
      "bytes": 4109,
      "imports": [],
      "format": "esm"
    },
    "src/apis/ui/helpers/svg.ts": {
      "bytes": 1325,
      "imports": [
        {
          "path": "../shared-types/dist/sanitizeSvg.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/sanitizeSvg.js"
        }
      ],
      "format": "esm"
    },
    "../shared-types/dist/constants.js": {
      "bytes": 1576,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/helpers/devvitInternalMessage.ts": {
      "bytes": 931,
      "imports": [],
      "format": "esm"
    },
    "src/devvit/internals/blocks/handler/useWebView.ts": {
      "bytes": 5804,
      "imports": [
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "../shared-types/dist/constants.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/constants.js"
        },
        {
          "path": "../shared-types/dist/StringUtil.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/StringUtil.js"
        },
        {
          "path": "src/devvit/internals/helpers/devvitInternalMessage.ts",
          "kind": "import-statement",
          "original": "../../helpers/devvitInternalMessage.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/BlocksHandler.ts",
          "kind": "import-statement",
          "original": "./BlocksHandler.js"
        },
        {
          "path": "<runtime>",
          "kind": "import-statement",
          "external": true
        }
      ],
      "format": "esm"
    },
    "src/types/json.ts": {
      "bytes": 1761,
      "imports": [],
      "format": "esm"
    },
    "src/index.ts": {
      "bytes": 854,
      "imports": [
        {
          "path": "src/apis/reddit/common.ts",
          "kind": "import-statement",
          "original": "./apis/reddit/common.js"
        },
        {
          "path": "src/apis/reddit/models/index.ts",
          "kind": "import-statement",
          "original": "./apis/reddit/models/index.js"
        },
        {
          "path": "src/apis/ui/helpers/svg.ts",
          "kind": "import-statement",
          "original": "./apis/ui/helpers/svg.js"
        },
        {
          "path": "src/devvit/Devvit.ts",
          "kind": "import-statement",
          "original": "./devvit/Devvit.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useAsync.ts",
          "kind": "import-statement",
          "original": "./devvit/internals/blocks/handler/useAsync.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useChannel.ts",
          "kind": "import-statement",
          "original": "./devvit/internals/blocks/handler/useChannel.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useForm.ts",
          "kind": "import-statement",
          "original": "./devvit/internals/blocks/handler/useForm.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useInterval.ts",
          "kind": "import-statement",
          "original": "./devvit/internals/blocks/handler/useInterval.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useState.ts",
          "kind": "import-statement",
          "original": "./devvit/internals/blocks/handler/useState.js"
        },
        {
          "path": "src/devvit/internals/blocks/handler/useWebView.ts",
          "kind": "import-statement",
          "original": "./devvit/internals/blocks/handler/useWebView.js"
        },
        {
          "path": "src/types/index.ts",
          "kind": "import-statement",
          "original": "./types/index.js"
        },
        {
          "path": "src/types/json.ts",
          "kind": "import-statement",
          "original": "./types/json.js"
        },
        {
          "path": "../shared-types/dist/richtext/RichTextBuilder.js",
          "kind": "import-statement",
          "original": "@devvit/shared-types/richtext/RichTextBuilder.js"
        }
      ],
      "format": "esm"
    }
  },
  "outputs": {
    "dist/public-api.min.js.map": {
      "imports": [],
      "exports": [],
      "inputs": {},
      "bytes": 1090272
    },
    "dist/public-api.min.js": {
      "imports": [
        {
          "path": "@devvit/protos/json/reddit/devvit/app_permission/v1/app_permission.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/reddit/devvit/app_permission/v1/app_permission.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/devvit/events/v1alpha/events.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/devvit/events/v1alpha/events.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/devvit/reddit/v2alpha/postv2.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/devvit/reddit/v2alpha/subredditv2.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos/json/reddit/devvit/app_permission/v1/app_permission.js",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        },
        {
          "path": "@devvit/protos",
          "kind": "import-statement",
          "external": true
        }
      ],
      "exports": [
        "ALL_ICON_NAMES",
        "AboutLocations",
        "AuthorFlairSettings",
        "ButtonWidget",
        "CalendarWidget",
        "Comment",
        "CommunityListWidget",
        "CustomWidget",
        "DeletionReason",
        "Devvit",
        "EventSource",
        "Flair",
        "FlairTemplate",
        "FlairType",
        "GalleryMediaStatus",
        "Hook",
        "ImageWidget",
        "Listing",
        "ModMailActionType",
        "ModMailConversationState",
        "ModMailService",
        "ModNote",
        "Post",
        "PostFlairSettings",
        "PostFlairWidget",
        "PrivateMessage",
        "RichTextBuilder",
        "RunAs",
        "SettingScope",
        "SocialLinkType",
        "Subreddit",
        "SubredditDescription",
        "SubredditRulesWidget",
        "SubredditWikiSettings",
        "TextAreaWidget",
        "User",
        "Widget",
        "WikiPage",
        "WikiPagePermissionLevel",
        "WikiPageRevision",
        "WikiPageSettings",
        "convertUserFlairProtoToAPI",
        "getCurrentUsernameFromMetadata",
        "getModerationLog",
        "getSubredditInfoById",
        "getSubredditInfoByName",
        "getSubredditLeaderboard",
        "getSubredditNameById",
        "getSubredditStyles",
        "getVaultByAddress",
        "getVaultByUserId",
        "svg",
        "useAsync",
        "useChannel",
        "useForm",
        "useInterval",
        "useState",
        "useWebView"
      ],
      "entryPoint": "src/index.ts",
      "inputs": {
        "../../node_modules/kind-of/index.js": {
          "bytesInOutput": 2344
        },
        "../../node_modules/shallow-clone/index.js": {
          "bytesInOutput": 1098
        },
        "../../node_modules/isobject/index.js": {
          "bytesInOutput": 117
        },
        "../../node_modules/clone-deep/node_modules/is-plain-object/index.js": {
          "bytesInOutput": 295
        },
        "../../node_modules/clone-deep/index.js": {
          "bytesInOutput": 427
        },
        "../../node_modules/base64-js/index.js": {
          "bytesInOutput": 1470
        },
        "src/apis/reddit/common.ts": {
          "bytesInOutput": 36
        },
        "src/index.ts": {
          "bytesInOutput": 0
        },
        "src/apis/reddit/models/Comment.ts": {
          "bytesInOutput": 9768
        },
        "../shared-types/dist/NonNull.js": {
          "bytesInOutput": 72
        },
        "src/devvit/Devvit.ts": {
          "bytesInOutput": 7234
        },
        "../shared-types/dist/Actor.js": {
          "bytesInOutput": 31
        },
        "../shared-types/dist/fetch-domains.js": {
          "bytesInOutput": 472
        },
        "../shared/dist/index.js": {
          "bytesInOutput": 0
        },
        "../shared/dist/types/triggers.js": {
          "bytesInOutput": 387
        },
        "../shared-types/dist/shared/form.js": {
          "bytesInOutput": 77
        },
        "../shared-types/dist/assert.js": {
          "bytesInOutput": 38
        },
        "../shared-types/dist/tid.js": {
          "bytesInOutput": 128
        },
        "src/apis/ui/helpers/assertValidFormFields.ts": {
          "bytesInOutput": 362
        },
        "src/types/index.ts": {
          "bytesInOutput": 0
        },
        "src/types/hooks.ts": {
          "bytesInOutput": 71
        },
        "src/types/icons.ts": {
          "bytesInOutput": 4791
        },
        "src/types/triggers.ts": {
          "bytesInOutput": 67
        },
        "src/devvit/internals/app-settings.ts": {
          "bytesInOutput": 295
        },
        "src/apis/ui/helpers/transformForm.ts": {
          "bytesInOutput": 1836
        },
        "src/devvit/internals/helpers/extendDevvitPrototype.ts": {
          "bytesInOutput": 33
        },
        "src/devvit/internals/helpers/settingsUtils.ts": {
          "bytesInOutput": 491
        },
        "src/devvit/internals/blocks/useChannel.ts": {
          "bytesInOutput": 1538
        },
        "../shared-types/dist/Header.js": {
          "bytesInOutput": 1223
        },
        "src/apis/ui/helpers/getFormValues.ts": {
          "bytesInOutput": 436
        },
        "src/devvit/internals/blocks/useForm.ts": {
          "bytesInOutput": 488
        },
        "src/devvit/internals/blocks/useInterval.ts": {
          "bytesInOutput": 983
        },
        "src/devvit/internals/blocks/useState.ts": {
          "bytesInOutput": 502
        },
        "src/devvit/internals/promise_cache.ts": {
          "bytesInOutput": 2576
        },
        "src/devvit/internals/cache.ts": {
          "bytesInOutput": 65
        },
        "src/apis/AssetsClient/AssetsClient.ts": {
          "bytesInOutput": 669
        },
        "src/apis/key-value-storage/KeyValueStorage.ts": {
          "bytesInOutput": 449
        },
        "src/apis/media/MediaClient.ts": {
          "bytesInOutput": 248
        },
        "src/apis/modLog/ModLogClient.ts": {
          "bytesInOutput": 124
        },
        "src/apis/realtime/RealtimeClient.ts": {
          "bytesInOutput": 153
        },
        "src/apis/reddit/RedditAPIClient.ts": {
          "bytesInOutput": 8008
        },
        "src/types/tid.ts": {
          "bytesInOutput": 1268
        },
        "src/apis/redis/RedisClient.ts": {
          "bytesInOutput": 12560
        },
        "src/apis/scheduler/SchedulerClient.ts": {
          "bytesInOutput": 714
        },
        "src/apis/settings/SettingsClient.ts": {
          "bytesInOutput": 1247
        },
        "src/apis/ui/UIClient.ts": {
          "bytesInOutput": 1450
        },
        "src/apis/makeAPIClients.ts": {
          "bytesInOutput": 848
        },
        "src/devvit/internals/context.ts": {
          "bytesInOutput": 1261
        },
        "package.json": {
          "bytesInOutput": 1943
        },
        "src/devvit/internals/custom-post.ts": {
          "bytesInOutput": 389
        },
        "src/devvit/internals/blocks/BlocksReconciler.ts": {
          "bytesInOutput": 7095
        },
        "src/apis/ui/helpers/getEffectsFromUIClient.ts": {
          "bytesInOutput": 34
        },
        "src/devvit/internals/helpers/makeUniqueIdGenerator.ts": {
          "bytesInOutput": 101
        },
        "src/devvit/internals/blocks/BlocksTransformer.ts": {
          "bytesInOutput": 10093
        },
        "src/devvit/internals/semanticColors.ts": {
          "bytesInOutput": 17012
        },
        "src/devvit/internals/helpers/color.ts": {
          "bytesInOutput": 3463
        },
        "src/devvit/internals/blocks/transformContext.ts": {
          "bytesInOutput": 787
        },
        "src/devvit/internals/blocks/transformerUtils.ts": {
          "bytesInOutput": 1136
        },
        "src/devvit/internals/installation-settings.ts": {
          "bytesInOutput": 316
        },
        "src/devvit/internals/menu-items.ts": {
          "bytesInOutput": 1349
        },
        "src/devvit/internals/csrf.ts": {
          "bytesInOutput": 1694
        },
        "src/devvit/internals/plugins.ts": {
          "bytesInOutput": 47
        },
        "src/devvit/internals/scheduler.ts": {
          "bytesInOutput": 323
        },
        "src/devvit/internals/triggers.ts": {
          "bytesInOutput": 3272
        },
        "../shared-types/dist/StringUtil.js": {
          "bytesInOutput": 503
        },
        "src/devvit/internals/ui-event-handler.ts": {
          "bytesInOutput": 1390
        },
        "../../node_modules/moderndash/dist/index.js": {
          "bytesInOutput": 911
        },
        "src/devvit/internals/ui-request-handler.tsx": {
          "bytesInOutput": 665
        },
        "src/devvit/internals/blocks/handler/BlocksHandler.ts": {
          "bytesInOutput": 7082
        },
        "../shared-types/dist/CircuitBreaker.js": {
          "bytesInOutput": 66
        },
        "src/devvit/internals/blocks/handler/promise_cache.ts": {
          "bytesInOutput": 2598
        },
        "src/devvit/internals/blocks/handler/cache.ts": {
          "bytesInOutput": 65
        },
        "src/devvit/internals/blocks/handler/UIClient.ts": {
          "bytesInOutput": 1394
        },
        "../shared-types/dist/useForm.js": {
          "bytesInOutput": 74
        },
        "src/devvit/internals/blocks/handler/useForm.ts": {
          "bytesInOutput": 379
        },
        "src/devvit/internals/blocks/handler/useChannel.ts": {
          "bytesInOutput": 2962
        },
        "src/devvit/internals/blocks/handler/useInterval.ts": {
          "bytesInOutput": 1213
        },
        "src/devvit/internals/blocks/handler/RenderContext.ts": {
          "bytesInOutput": 2460
        },
        "src/devvit/internals/blocks/handler/useState.ts": {
          "bytesInOutput": 1623
        },
        "src/devvit/internals/blocks/handler/types.ts": {
          "bytesInOutput": 29
        },
        "src/devvit/internals/blocks/handler/useAsync.ts": {
          "bytesInOutput": 2409
        },
        "src/devvit/internals/blocks/handler/ContextBuilder.ts": {
          "bytesInOutput": 561
        },
        "src/devvit/internals/upgrade-app-shim.tsx": {
          "bytesInOutput": 2091
        },
        "src/apis/reddit/helpers/makeGettersEnumerable.ts": {
          "bytesInOutput": 166
        },
        "../shared-types/dist/richtext/types.js": {
          "bytesInOutput": 474
        },
        "../shared-types/dist/richtext/elements.js": {
          "bytesInOutput": 2178
        },
        "../shared-types/dist/richtext/mixins.js": {
          "bytesInOutput": 1357
        },
        "../shared-types/dist/richtext/RichTextBuilder.js": {
          "bytesInOutput": 1215
        },
        "src/apis/reddit/helpers/richtextToString.ts": {
          "bytesInOutput": 101
        },
        "src/apis/reddit/models/Listing.ts": {
          "bytesInOutput": 1373
        },
        "src/apis/reddit/models/ModNote.ts": {
          "bytesInOutput": 1764
        },
        "src/apis/reddit/graphql/GraphQL.ts": {
          "bytesInOutput": 209
        },
        "src/apis/reddit/helpers/permissions.ts": {
          "bytesInOutput": 272
        },
        "src/apis/reddit/models/Flair.ts": {
          "bytesInOutput": 4610
        },
        "src/apis/reddit/models/Post.ts": {
          "bytesInOutput": 16750
        },
        "src/apis/reddit/helpers/textFallbackToRichtext.ts": {
          "bytesInOutput": 114
        },
        "src/apis/reddit/models/User.ts": {
          "bytesInOutput": 6302
        },
        "src/apis/reddit/models/index.ts": {
          "bytesInOutput": 0
        },
        "src/apis/reddit/models/ModAction.ts": {
          "bytesInOutput": 1472
        },
        "src/apis/reddit/models/ModMail.ts": {
          "bytesInOutput": 7523
        },
        "src/apis/reddit/models/PrivateMessage.ts": {
          "bytesInOutput": 1767
        },
        "src/apis/reddit/models/Subreddit.ts": {
          "bytesInOutput": 11189
        },
        "src/apis/reddit/models/Vault.ts": {
          "bytesInOutput": 515
        },
        "src/apis/reddit/models/Widget.ts": {
          "bytesInOutput": 7981
        },
        "src/apis/reddit/models/WikiPage.ts": {
          "bytesInOutput": 4855
        },
        "../shared-types/dist/sanitizeSvg.js": {
          "bytesInOutput": 1351
        },
        "src/apis/ui/helpers/svg.ts": {
          "bytesInOutput": 178
        },
        "src/devvit/internals/blocks/handler/useWebView.ts": {
          "bytesInOutput": 1985
        },
        "../shared-types/dist/constants.js": {
          "bytesInOutput": 15
        },
        "src/devvit/internals/helpers/devvitInternalMessage.ts": {
          "bytesInOutput": 107
        }
      },
      "bytes": 224943
    }
  }
}
