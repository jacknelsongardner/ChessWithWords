import type { Metadata } from '@devvit/protos';
import type { Context } from './server-context.js';
export declare function getMetadata(): Readonly<Metadata> | undefined;
/**
 * Runs an async callback with the given Context. Code in the callback can use
 * `getContext()` to get the context. For testing.
 * @experimental
 * @param context The context to run the callback with
 * @param callback The callback to run
 */
export declare function runWithContext<T>(context: Context, callback: () => Promise<T>): Promise<T>;
export declare const context: Context;
/** For testing. @experimental */
export declare function setContextCache(key: string, value: unknown): void;
/** For testing. @experimental */
export declare function getContextCache<T>(key: string): T | undefined;
//# sourceMappingURL=context.d.ts.map