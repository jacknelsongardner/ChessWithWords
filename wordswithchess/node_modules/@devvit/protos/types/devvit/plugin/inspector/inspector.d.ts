/**
 * #inspector.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { SerializableServiceDefinition } from "../../runtime/serializable.js";
export interface InspectorDescription {
    provides: SerializableServiceDefinition[];
    hostname: string;
}
export interface InspectorDescriptions {
    descriptions: InspectorDescription[];
}
export declare const InspectorDescription: {
    $type: "devvit.plugin.inspector.InspectorDescription";
    encode(message: InspectorDescription, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InspectorDescription;
    fromJSON(object: any): InspectorDescription;
    toJSON(message: InspectorDescription): unknown;
    create(base?: DeepPartial<InspectorDescription>): InspectorDescription;
    fromPartial(object: DeepPartial<InspectorDescription>): InspectorDescription;
};
export declare const InspectorDescriptions: {
    $type: "devvit.plugin.inspector.InspectorDescriptions";
    encode(message: InspectorDescriptions, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InspectorDescriptions;
    fromJSON(object: any): InspectorDescriptions;
    toJSON(message: InspectorDescriptions): unknown;
    create(base?: DeepPartial<InspectorDescriptions>): InspectorDescriptions;
    fromPartial(object: DeepPartial<InspectorDescriptions>): InspectorDescriptions;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=inspector.d.ts.map