import { CommentRequest, JsonWrappedComment, SubmitRequest, SubmitResponse } from '../redditapi/linksandcomments/linksandcomments_msg.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface UserActionsClient {
    Comment(request: CommentRequest): Promise<JsonWrappedComment>;
    Submit(request: SubmitRequest): Promise<SubmitResponse>;
    SubmitCustomPost(request: SubmitRequest): Promise<SubmitResponse>;
}
export declare class UserActionsClientJSON implements UserActionsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Comment(request: CommentRequest): Promise<JsonWrappedComment>;
    Submit(request: SubmitRequest): Promise<SubmitResponse>;
    SubmitCustomPost(request: SubmitRequest): Promise<SubmitResponse>;
}
export declare class UserActionsClientProtobuf implements UserActionsClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Comment(request: CommentRequest): Promise<JsonWrappedComment>;
    Submit(request: SubmitRequest): Promise<SubmitResponse>;
    SubmitCustomPost(request: SubmitRequest): Promise<SubmitResponse>;
}
export {};
//# sourceMappingURL=useractions.twirp-client.d.ts.map