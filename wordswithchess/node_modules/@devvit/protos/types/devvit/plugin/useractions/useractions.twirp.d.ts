import { TwirpContext, TwirpServer } from 'twirp-ts';
import { CommentRequest, JsonWrappedComment, SubmitRequest, SubmitResponse } from '../redditapi/linksandcomments/linksandcomments_msg.js';
export interface UserActionsTwirp<T extends TwirpContext = TwirpContext> {
    Comment(ctx: T, request: CommentRequest): Promise<JsonWrappedComment>;
    Submit(ctx: T, request: SubmitRequest): Promise<SubmitResponse>;
    SubmitCustomPost(ctx: T, request: SubmitRequest): Promise<SubmitResponse>;
}
export declare enum UserActionsMethod {
    Comment = "Comment",
    Submit = "Submit",
    SubmitCustomPost = "SubmitCustomPost"
}
export declare const UserActionsMethodList: UserActionsMethod[];
export declare function createUserActionsServer<T extends TwirpContext = TwirpContext>(service: UserActionsTwirp<T>): TwirpServer<UserActionsTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=useractions.twirp.d.ts.map