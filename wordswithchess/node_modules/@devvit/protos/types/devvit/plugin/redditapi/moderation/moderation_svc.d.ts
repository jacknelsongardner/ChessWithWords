/**
 * #moderation_svc.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { Metadata } from "../../../../../lib/Types.js";
import { Empty } from "../../../../google/protobuf/empty.js";
import { StringValue } from "../../../../google/protobuf/wrappers.js";
import { JsonRedditObjects, JsonStatus, Listing } from "../common/common_msg.js";
import { AboutLocationRequest, AboutLogRequest, AboutLogResponse, AcceptModeratorInviteRequest, BasicModerationIdRequest, DistinguishRequest, RemoveRequest, SnoozeReportsRequest, StylesheetRequest, UpdateCrowdControlLevelRequest } from "./moderation_msg.js";
/** MODERATION -  https://www.reddit.com/dev/api#section_moderation */
export interface Moderation {
    /** https://www.reddit.com/dev/api#GET_about_log */
    AboutLog(request: AboutLogRequest, metadata?: Metadata): Promise<AboutLogResponse>;
    /** https://www.reddit.com/dev/api#GET_about_\{location\} */
    AboutLocation(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    /** https://www.reddit.com/dev/api#GET_about_\reports */
    AboutReports(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    /** https://www.reddit.com/dev/api#GET_about_\spam */
    AboutSpam(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    /** https://www.reddit.com/dev/api#GET_about_\modqueue */
    AboutModqueue(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    /** https://www.reddit.com/dev/api#GET_about_\unmoderated */
    AboutUnmoderated(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    /** https://www.reddit.com/dev/api#GET_about_\edited */
    AboutEdited(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    /** https://www.reddit.com/dev/api#POST_api_accept_moderator_invite */
    AcceptModeratorInvite(request: AcceptModeratorInviteRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_approve */
    Approve(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_distinguish */
    Distinguish(request: DistinguishRequest, metadata?: Metadata): Promise<JsonRedditObjects>;
    /** https://www.reddit.com/dev/api#POST_api_ignore_reports */
    IgnoreReports(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_leavecontributor */
    LeaveContributor(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_leavemoderator */
    LeaveModerator(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_mute_message_author */
    MuteMessageAuthor(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_remove */
    Remove(request: RemoveRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_show_comment */
    ShowComment(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_snooze_reports */
    SnoozeReports(request: SnoozeReportsRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_unignore_reports */
    UnignoreReports(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_unmute_message_author */
    UnmuteMessageAuthor(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_unsnooze_reports */
    UnsnoozeReports(request: SnoozeReportsRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_update_crowd_control_level */
    UpdateCrowdControlLevel(request: UpdateCrowdControlLevelRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#GET_stylesheet */
    Stylesheet(request: StylesheetRequest, metadata?: Metadata): Promise<StringValue>;
}
export declare const ModerationServiceName = "devvit.plugin.redditapi.moderation.Moderation";
export declare class ModerationClientImpl implements Moderation {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    AboutLog(request: AboutLogRequest, metadata?: Metadata): Promise<AboutLogResponse>;
    AboutLocation(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    AboutReports(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    AboutSpam(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    AboutModqueue(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    AboutUnmoderated(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    AboutEdited(request: AboutLocationRequest, metadata?: Metadata): Promise<Listing>;
    AcceptModeratorInvite(request: AcceptModeratorInviteRequest, metadata?: Metadata): Promise<JsonStatus>;
    Approve(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    Distinguish(request: DistinguishRequest, metadata?: Metadata): Promise<JsonRedditObjects>;
    IgnoreReports(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    LeaveContributor(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    LeaveModerator(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    MuteMessageAuthor(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    Remove(request: RemoveRequest, metadata?: Metadata): Promise<Empty>;
    ShowComment(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    SnoozeReports(request: SnoozeReportsRequest, metadata?: Metadata): Promise<Empty>;
    UnignoreReports(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    UnmuteMessageAuthor(request: BasicModerationIdRequest, metadata?: Metadata): Promise<Empty>;
    UnsnoozeReports(request: SnoozeReportsRequest, metadata?: Metadata): Promise<Empty>;
    UpdateCrowdControlLevel(request: UpdateCrowdControlLevelRequest, metadata?: Metadata): Promise<Empty>;
    Stylesheet(request: StylesheetRequest, metadata?: Metadata): Promise<StringValue>;
}
/** MODERATION -  https://www.reddit.com/dev/api#section_moderation */
export type ModerationDefinition = typeof ModerationDefinition;
export declare const ModerationDefinition: {
    readonly name: "Moderation";
    readonly fullName: "devvit.plugin.redditapi.moderation.Moderation";
    readonly methods: {
        /** https://www.reddit.com/dev/api#GET_about_log */
        readonly aboutLog: {
            readonly name: "AboutLog";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.AboutLogRequest";
                encode(message: AboutLogRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): AboutLogRequest;
                fromJSON(object: any): AboutLogRequest;
                toJSON(message: AboutLogRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    show?: string | undefined | undefined;
                    mod?: string | undefined | undefined;
                    type?: string | undefined | undefined;
                    subreddit?: string | undefined | undefined;
                }): AboutLogRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    show?: string | undefined | undefined;
                    mod?: string | undefined | undefined;
                    type?: string | undefined | undefined;
                    subreddit?: string | undefined | undefined;
                }): AboutLogRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.moderation.AboutLogResponse";
                encode(message: AboutLogResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): AboutLogResponse;
                fromJSON(object: any): AboutLogResponse;
                toJSON(message: AboutLogResponse): unknown;
                create(base?: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                description?: string | undefined | undefined;
                                targetBody?: string | undefined | undefined;
                                modId36?: string | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                targetTitle?: string | undefined | undefined;
                                targetPermalink?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                details?: string | undefined | undefined;
                                action?: string | undefined | undefined;
                                targetAuthor?: string | undefined | undefined;
                                targetFullname?: string | undefined | undefined;
                                srId36?: string | undefined | undefined;
                                id?: string | undefined | undefined;
                                mod?: string | undefined | undefined;
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): AboutLogResponse;
                fromPartial(object: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                description?: string | undefined | undefined;
                                targetBody?: string | undefined | undefined;
                                modId36?: string | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                targetTitle?: string | undefined | undefined;
                                targetPermalink?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                details?: string | undefined | undefined;
                                action?: string | undefined | undefined;
                                targetAuthor?: string | undefined | undefined;
                                targetFullname?: string | undefined | undefined;
                                srId36?: string | undefined | undefined;
                                id?: string | undefined | undefined;
                                mod?: string | undefined | undefined;
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): AboutLogResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_about_\{location\} */
        readonly aboutLocation: {
            readonly name: "AboutLocation";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.AboutLocationRequest";
                encode(message: AboutLocationRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): AboutLocationRequest;
                fromJSON(object: any): AboutLocationRequest;
                toJSON(message: AboutLocationRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.Listing";
                encode(message: Listing, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Listing;
                fromJSON(object: any): Listing;
                toJSON(message: Listing): unknown;
                create(base?: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
                fromPartial(object: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_about_\reports */
        readonly aboutReports: {
            readonly name: "AboutReports";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.AboutLocationRequest";
                encode(message: AboutLocationRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): AboutLocationRequest;
                fromJSON(object: any): AboutLocationRequest;
                toJSON(message: AboutLocationRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.Listing";
                encode(message: Listing, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Listing;
                fromJSON(object: any): Listing;
                toJSON(message: Listing): unknown;
                create(base?: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
                fromPartial(object: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_about_\spam */
        readonly aboutSpam: {
            readonly name: "AboutSpam";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.AboutLocationRequest";
                encode(message: AboutLocationRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): AboutLocationRequest;
                fromJSON(object: any): AboutLocationRequest;
                toJSON(message: AboutLocationRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.Listing";
                encode(message: Listing, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Listing;
                fromJSON(object: any): Listing;
                toJSON(message: Listing): unknown;
                create(base?: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
                fromPartial(object: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_about_\modqueue */
        readonly aboutModqueue: {
            readonly name: "AboutModqueue";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.AboutLocationRequest";
                encode(message: AboutLocationRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): AboutLocationRequest;
                fromJSON(object: any): AboutLocationRequest;
                toJSON(message: AboutLocationRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.Listing";
                encode(message: Listing, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Listing;
                fromJSON(object: any): Listing;
                toJSON(message: Listing): unknown;
                create(base?: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
                fromPartial(object: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_about_\unmoderated */
        readonly aboutUnmoderated: {
            readonly name: "AboutUnmoderated";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.AboutLocationRequest";
                encode(message: AboutLocationRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): AboutLocationRequest;
                fromJSON(object: any): AboutLocationRequest;
                toJSON(message: AboutLocationRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.Listing";
                encode(message: Listing, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Listing;
                fromJSON(object: any): Listing;
                toJSON(message: Listing): unknown;
                create(base?: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
                fromPartial(object: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_about_\edited */
        readonly aboutEdited: {
            readonly name: "AboutEdited";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.AboutLocationRequest";
                encode(message: AboutLocationRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): AboutLocationRequest;
                fromJSON(object: any): AboutLocationRequest;
                toJSON(message: AboutLocationRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    location?: string;
                    only?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    subreddit?: string;
                }): AboutLocationRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.Listing";
                encode(message: Listing, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Listing;
                fromJSON(object: any): Listing;
                toJSON(message: Listing): unknown;
                create(base?: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
                fromPartial(object: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_accept_moderator_invite */
        readonly acceptModeratorInvite: {
            readonly name: "AcceptModeratorInvite";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.AcceptModeratorInviteRequest";
                encode(message: AcceptModeratorInviteRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): AcceptModeratorInviteRequest;
                fromJSON(object: any): AcceptModeratorInviteRequest;
                toJSON(message: AcceptModeratorInviteRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): AcceptModeratorInviteRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): AcceptModeratorInviteRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.JsonStatus";
                encode(message: JsonStatus, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): JsonStatus;
                fromJSON(object: any): JsonStatus;
                toJSON(message: JsonStatus): unknown;
                create(base?: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
                fromPartial(object: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_approve */
        readonly approve: {
            readonly name: "Approve";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest";
                encode(message: BasicModerationIdRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicModerationIdRequest;
                fromJSON(object: any): BasicModerationIdRequest;
                toJSON(message: BasicModerationIdRequest): unknown;
                create(base?: {
                    id?: string;
                }): BasicModerationIdRequest;
                fromPartial(object: {
                    id?: string;
                }): BasicModerationIdRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_distinguish */
        readonly distinguish: {
            readonly name: "Distinguish";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.DistinguishRequest";
                encode(message: DistinguishRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): DistinguishRequest;
                fromJSON(object: any): DistinguishRequest;
                toJSON(message: DistinguishRequest): unknown;
                create(base?: {
                    how?: string;
                    id?: string;
                    sticky?: boolean;
                }): DistinguishRequest;
                fromPartial(object: {
                    how?: string;
                    id?: string;
                    sticky?: boolean;
                }): DistinguishRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.JsonRedditObjects";
                encode(message: JsonRedditObjects, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): JsonRedditObjects;
                fromJSON(object: any): JsonRedditObjects;
                toJSON(message: JsonRedditObjects): unknown;
                create(base?: {
                    json?: {
                        errors?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        data?: {
                            things?: {
                                kind?: string;
                                data?: {
                                    allAwardings?: {
                                        typeUrl?: string;
                                        value?: Uint8Array;
                                    }[];
                                    approved?: boolean | undefined | undefined;
                                    approvedAtUtc?: number | undefined | undefined;
                                    approvedBy?: string | undefined | undefined;
                                    archived?: boolean | undefined | undefined;
                                    associatedAward?: string | undefined | undefined;
                                    author?: string | undefined | undefined;
                                    authorFlairBackgroundColor?: string | undefined | undefined;
                                    authorFlairCssClass?: string | undefined | undefined;
                                    authorFlairRichtext?: {
                                        e?: string | undefined | undefined;
                                        t?: string | undefined | undefined;
                                        a?: string | undefined | undefined;
                                        u?: string | undefined | undefined;
                                    }[];
                                    authorFlairTemplateId?: string | undefined | undefined;
                                    authorFlairText?: string | undefined | undefined;
                                    authorFlairTextColor?: string | undefined | undefined;
                                    authorFlairType?: string | undefined | undefined;
                                    authorFullname?: string | undefined | undefined;
                                    authorIsBlocked?: boolean | undefined | undefined;
                                    authorPatreonFlair?: boolean | undefined | undefined;
                                    authorPremium?: boolean | undefined | undefined;
                                    awarders?: string[];
                                    bannedAtUtc?: number | undefined | undefined;
                                    bannedBy?: string | undefined | undefined;
                                    body?: string | undefined | undefined;
                                    bodyHtml?: string | undefined | undefined;
                                    canGild?: boolean | undefined | undefined;
                                    canModPost?: boolean | undefined | undefined;
                                    collapsed?: boolean | undefined | undefined;
                                    collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                    collapsedReason?: string | undefined | undefined;
                                    collapsedReasonCode?: string | undefined | undefined;
                                    commentType?: string | undefined | undefined;
                                    controversiality?: number | undefined | undefined;
                                    created?: number | undefined | undefined;
                                    createdUtc?: number | undefined | undefined;
                                    distinguished?: string | undefined | undefined;
                                    downs?: number | undefined | undefined;
                                    edited?: boolean | undefined | undefined;
                                    gilded?: number | undefined | undefined;
                                    gildings?: {
                                        typeUrl?: string;
                                        value?: Uint8Array;
                                    } | undefined;
                                    id?: string | undefined | undefined;
                                    ignoreReports?: boolean | undefined | undefined;
                                    isSubmitter?: boolean | undefined | undefined;
                                    likes?: boolean | undefined | undefined;
                                    linkId?: string | undefined | undefined;
                                    locked?: boolean | undefined | undefined;
                                    modNote?: string | undefined | undefined;
                                    modReasonBy?: string | undefined | undefined;
                                    modReasonTitle?: string | undefined | undefined;
                                    name?: string | undefined | undefined;
                                    noFollow?: boolean | undefined | undefined;
                                    numReports?: number | undefined | undefined;
                                    parentId?: string | undefined | undefined;
                                    permalink?: string | undefined | undefined;
                                    removalReason?: string | undefined | undefined;
                                    removed?: boolean | undefined | undefined;
                                    replies?: string | undefined | undefined;
                                    reportReasons?: any[] | undefined;
                                    rteMode?: string | undefined | undefined;
                                    saved?: boolean | undefined | undefined;
                                    score?: number | undefined | undefined;
                                    scoreHidden?: boolean | undefined | undefined;
                                    sendReplies?: boolean | undefined | undefined;
                                    spam?: boolean | undefined | undefined;
                                    stickied?: boolean | undefined | undefined;
                                    subreddit?: string | undefined | undefined;
                                    subredditId?: string | undefined | undefined;
                                    subredditNamePrefixed?: string | undefined | undefined;
                                    subredditType?: string | undefined | undefined;
                                    topAwardedType?: string | undefined | undefined;
                                    totalAwardsReceived?: number | undefined | undefined;
                                    treatmentTags?: {
                                        typeUrl?: string;
                                        value?: Uint8Array;
                                    }[];
                                    unrepliableReason?: string | undefined | undefined;
                                    ups?: number | undefined | undefined;
                                    depth?: number | undefined | undefined;
                                    linkTitle?: string | undefined | undefined;
                                    linkAuthor?: string | undefined | undefined;
                                    numComments?: number | undefined | undefined;
                                    over18?: boolean | undefined | undefined;
                                    linkPermalink?: string | undefined | undefined;
                                    quarantine?: boolean | undefined | undefined;
                                    linkUrl?: string | undefined | undefined;
                                    selftext?: string | undefined | undefined;
                                    selftextHtml?: string | undefined | undefined;
                                    thumbnail?: string | undefined | undefined;
                                    thumbnailWidth?: number | undefined | undefined;
                                    thumbnailHeight?: number | undefined | undefined;
                                    title?: string | undefined | undefined;
                                    url?: string | undefined | undefined;
                                    displayName?: string | undefined | undefined;
                                    modPermissions?: string[];
                                    count?: number | undefined | undefined;
                                    children?: any[] | undefined;
                                    replyList?: {
                                        kind?: string;
                                        data?: {
                                            after?: string | undefined | undefined;
                                            before?: string | undefined | undefined;
                                            children?: /*elided*/ any[];
                                            dist?: number | undefined | undefined;
                                        } | undefined;
                                    } | undefined;
                                    hidden?: boolean | undefined | undefined;
                                    linkFlairBackgroundColor?: string | undefined | undefined;
                                    linkFlairCssClass?: string | undefined | undefined;
                                    linkFlairRichtext?: {
                                        e?: string | undefined | undefined;
                                        t?: string | undefined | undefined;
                                        a?: string | undefined | undefined;
                                        u?: string | undefined | undefined;
                                    }[];
                                    linkFlairTemplateId?: string | undefined | undefined;
                                    linkFlairText?: string | undefined | undefined;
                                    linkFlairTextColor?: string | undefined | undefined;
                                    linkFlairType?: string | undefined | undefined;
                                    secureMedia?: {
                                        type?: string;
                                        oembed?: {
                                            type?: string;
                                            title?: string | undefined | undefined;
                                            providerName?: string | undefined | undefined;
                                            providerUrl?: string | undefined | undefined;
                                            version?: string;
                                            thumbnailWidth?: number | undefined | undefined;
                                            thumbnailHeight?: number | undefined | undefined;
                                            thumbnailUrl?: string | undefined | undefined;
                                            html?: string;
                                            height?: number | undefined | undefined;
                                            width?: number | undefined | undefined;
                                            authorUrl?: string | undefined | undefined;
                                            authorName?: string | undefined | undefined;
                                        } | undefined;
                                        redditVideo?: {
                                            bitrateKbps?: number | undefined | undefined;
                                            dashUrl?: string | undefined | undefined;
                                            duration?: number | undefined | undefined;
                                            fallbackUrl?: string | undefined | undefined;
                                            height?: number | undefined | undefined;
                                            hlsUrl?: string | undefined | undefined;
                                            isGif?: boolean | undefined | undefined;
                                            scrubberMediaUrl?: string | undefined | undefined;
                                            transcodingStatus?: string | undefined | undefined;
                                            width?: number | undefined | undefined;
                                        } | undefined;
                                    } | undefined;
                                    spoiler?: boolean;
                                    modReports?: any[][];
                                    userReports?: any[][];
                                    removedBy?: string | undefined | undefined;
                                    removedByCategory?: string | undefined | undefined;
                                    gallery?: {
                                        url?: string;
                                        width?: number;
                                        height?: number;
                                        status?: import("../common/common_msg.js").GalleryMediaStatus;
                                    }[];
                                } | undefined;
                            }[];
                        } | undefined;
                    } | undefined;
                }): JsonRedditObjects;
                fromPartial(object: {
                    json?: {
                        errors?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        data?: {
                            things?: {
                                kind?: string;
                                data?: {
                                    allAwardings?: {
                                        typeUrl?: string;
                                        value?: Uint8Array;
                                    }[];
                                    approved?: boolean | undefined | undefined;
                                    approvedAtUtc?: number | undefined | undefined;
                                    approvedBy?: string | undefined | undefined;
                                    archived?: boolean | undefined | undefined;
                                    associatedAward?: string | undefined | undefined;
                                    author?: string | undefined | undefined;
                                    authorFlairBackgroundColor?: string | undefined | undefined;
                                    authorFlairCssClass?: string | undefined | undefined;
                                    authorFlairRichtext?: {
                                        e?: string | undefined | undefined;
                                        t?: string | undefined | undefined;
                                        a?: string | undefined | undefined;
                                        u?: string | undefined | undefined;
                                    }[];
                                    authorFlairTemplateId?: string | undefined | undefined;
                                    authorFlairText?: string | undefined | undefined;
                                    authorFlairTextColor?: string | undefined | undefined;
                                    authorFlairType?: string | undefined | undefined;
                                    authorFullname?: string | undefined | undefined;
                                    authorIsBlocked?: boolean | undefined | undefined;
                                    authorPatreonFlair?: boolean | undefined | undefined;
                                    authorPremium?: boolean | undefined | undefined;
                                    awarders?: string[];
                                    bannedAtUtc?: number | undefined | undefined;
                                    bannedBy?: string | undefined | undefined;
                                    body?: string | undefined | undefined;
                                    bodyHtml?: string | undefined | undefined;
                                    canGild?: boolean | undefined | undefined;
                                    canModPost?: boolean | undefined | undefined;
                                    collapsed?: boolean | undefined | undefined;
                                    collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                    collapsedReason?: string | undefined | undefined;
                                    collapsedReasonCode?: string | undefined | undefined;
                                    commentType?: string | undefined | undefined;
                                    controversiality?: number | undefined | undefined;
                                    created?: number | undefined | undefined;
                                    createdUtc?: number | undefined | undefined;
                                    distinguished?: string | undefined | undefined;
                                    downs?: number | undefined | undefined;
                                    edited?: boolean | undefined | undefined;
                                    gilded?: number | undefined | undefined;
                                    gildings?: {
                                        typeUrl?: string;
                                        value?: Uint8Array;
                                    } | undefined;
                                    id?: string | undefined | undefined;
                                    ignoreReports?: boolean | undefined | undefined;
                                    isSubmitter?: boolean | undefined | undefined;
                                    likes?: boolean | undefined | undefined;
                                    linkId?: string | undefined | undefined;
                                    locked?: boolean | undefined | undefined;
                                    modNote?: string | undefined | undefined;
                                    modReasonBy?: string | undefined | undefined;
                                    modReasonTitle?: string | undefined | undefined;
                                    name?: string | undefined | undefined;
                                    noFollow?: boolean | undefined | undefined;
                                    numReports?: number | undefined | undefined;
                                    parentId?: string | undefined | undefined;
                                    permalink?: string | undefined | undefined;
                                    removalReason?: string | undefined | undefined;
                                    removed?: boolean | undefined | undefined;
                                    replies?: string | undefined | undefined;
                                    reportReasons?: any[] | undefined;
                                    rteMode?: string | undefined | undefined;
                                    saved?: boolean | undefined | undefined;
                                    score?: number | undefined | undefined;
                                    scoreHidden?: boolean | undefined | undefined;
                                    sendReplies?: boolean | undefined | undefined;
                                    spam?: boolean | undefined | undefined;
                                    stickied?: boolean | undefined | undefined;
                                    subreddit?: string | undefined | undefined;
                                    subredditId?: string | undefined | undefined;
                                    subredditNamePrefixed?: string | undefined | undefined;
                                    subredditType?: string | undefined | undefined;
                                    topAwardedType?: string | undefined | undefined;
                                    totalAwardsReceived?: number | undefined | undefined;
                                    treatmentTags?: {
                                        typeUrl?: string;
                                        value?: Uint8Array;
                                    }[];
                                    unrepliableReason?: string | undefined | undefined;
                                    ups?: number | undefined | undefined;
                                    depth?: number | undefined | undefined;
                                    linkTitle?: string | undefined | undefined;
                                    linkAuthor?: string | undefined | undefined;
                                    numComments?: number | undefined | undefined;
                                    over18?: boolean | undefined | undefined;
                                    linkPermalink?: string | undefined | undefined;
                                    quarantine?: boolean | undefined | undefined;
                                    linkUrl?: string | undefined | undefined;
                                    selftext?: string | undefined | undefined;
                                    selftextHtml?: string | undefined | undefined;
                                    thumbnail?: string | undefined | undefined;
                                    thumbnailWidth?: number | undefined | undefined;
                                    thumbnailHeight?: number | undefined | undefined;
                                    title?: string | undefined | undefined;
                                    url?: string | undefined | undefined;
                                    displayName?: string | undefined | undefined;
                                    modPermissions?: string[];
                                    count?: number | undefined | undefined;
                                    children?: any[] | undefined;
                                    replyList?: {
                                        kind?: string;
                                        data?: {
                                            after?: string | undefined | undefined;
                                            before?: string | undefined | undefined;
                                            children?: /*elided*/ any[];
                                            dist?: number | undefined | undefined;
                                        } | undefined;
                                    } | undefined;
                                    hidden?: boolean | undefined | undefined;
                                    linkFlairBackgroundColor?: string | undefined | undefined;
                                    linkFlairCssClass?: string | undefined | undefined;
                                    linkFlairRichtext?: {
                                        e?: string | undefined | undefined;
                                        t?: string | undefined | undefined;
                                        a?: string | undefined | undefined;
                                        u?: string | undefined | undefined;
                                    }[];
                                    linkFlairTemplateId?: string | undefined | undefined;
                                    linkFlairText?: string | undefined | undefined;
                                    linkFlairTextColor?: string | undefined | undefined;
                                    linkFlairType?: string | undefined | undefined;
                                    secureMedia?: {
                                        type?: string;
                                        oembed?: {
                                            type?: string;
                                            title?: string | undefined | undefined;
                                            providerName?: string | undefined | undefined;
                                            providerUrl?: string | undefined | undefined;
                                            version?: string;
                                            thumbnailWidth?: number | undefined | undefined;
                                            thumbnailHeight?: number | undefined | undefined;
                                            thumbnailUrl?: string | undefined | undefined;
                                            html?: string;
                                            height?: number | undefined | undefined;
                                            width?: number | undefined | undefined;
                                            authorUrl?: string | undefined | undefined;
                                            authorName?: string | undefined | undefined;
                                        } | undefined;
                                        redditVideo?: {
                                            bitrateKbps?: number | undefined | undefined;
                                            dashUrl?: string | undefined | undefined;
                                            duration?: number | undefined | undefined;
                                            fallbackUrl?: string | undefined | undefined;
                                            height?: number | undefined | undefined;
                                            hlsUrl?: string | undefined | undefined;
                                            isGif?: boolean | undefined | undefined;
                                            scrubberMediaUrl?: string | undefined | undefined;
                                            transcodingStatus?: string | undefined | undefined;
                                            width?: number | undefined | undefined;
                                        } | undefined;
                                    } | undefined;
                                    spoiler?: boolean;
                                    modReports?: any[][];
                                    userReports?: any[][];
                                    removedBy?: string | undefined | undefined;
                                    removedByCategory?: string | undefined | undefined;
                                    gallery?: {
                                        url?: string;
                                        width?: number;
                                        height?: number;
                                        status?: import("../common/common_msg.js").GalleryMediaStatus;
                                    }[];
                                } | undefined;
                            }[];
                        } | undefined;
                    } | undefined;
                }): JsonRedditObjects;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_ignore_reports */
        readonly ignoreReports: {
            readonly name: "IgnoreReports";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest";
                encode(message: BasicModerationIdRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicModerationIdRequest;
                fromJSON(object: any): BasicModerationIdRequest;
                toJSON(message: BasicModerationIdRequest): unknown;
                create(base?: {
                    id?: string;
                }): BasicModerationIdRequest;
                fromPartial(object: {
                    id?: string;
                }): BasicModerationIdRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_leavecontributor */
        readonly leaveContributor: {
            readonly name: "LeaveContributor";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest";
                encode(message: BasicModerationIdRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicModerationIdRequest;
                fromJSON(object: any): BasicModerationIdRequest;
                toJSON(message: BasicModerationIdRequest): unknown;
                create(base?: {
                    id?: string;
                }): BasicModerationIdRequest;
                fromPartial(object: {
                    id?: string;
                }): BasicModerationIdRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_leavemoderator */
        readonly leaveModerator: {
            readonly name: "LeaveModerator";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest";
                encode(message: BasicModerationIdRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicModerationIdRequest;
                fromJSON(object: any): BasicModerationIdRequest;
                toJSON(message: BasicModerationIdRequest): unknown;
                create(base?: {
                    id?: string;
                }): BasicModerationIdRequest;
                fromPartial(object: {
                    id?: string;
                }): BasicModerationIdRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_mute_message_author */
        readonly muteMessageAuthor: {
            readonly name: "MuteMessageAuthor";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest";
                encode(message: BasicModerationIdRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicModerationIdRequest;
                fromJSON(object: any): BasicModerationIdRequest;
                toJSON(message: BasicModerationIdRequest): unknown;
                create(base?: {
                    id?: string;
                }): BasicModerationIdRequest;
                fromPartial(object: {
                    id?: string;
                }): BasicModerationIdRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_remove */
        readonly remove: {
            readonly name: "Remove";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.RemoveRequest";
                encode(message: RemoveRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): RemoveRequest;
                fromJSON(object: any): RemoveRequest;
                toJSON(message: RemoveRequest): unknown;
                create(base?: {
                    id?: string;
                    spam?: boolean;
                }): RemoveRequest;
                fromPartial(object: {
                    id?: string;
                    spam?: boolean;
                }): RemoveRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_show_comment */
        readonly showComment: {
            readonly name: "ShowComment";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest";
                encode(message: BasicModerationIdRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicModerationIdRequest;
                fromJSON(object: any): BasicModerationIdRequest;
                toJSON(message: BasicModerationIdRequest): unknown;
                create(base?: {
                    id?: string;
                }): BasicModerationIdRequest;
                fromPartial(object: {
                    id?: string;
                }): BasicModerationIdRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_snooze_reports */
        readonly snoozeReports: {
            readonly name: "SnoozeReports";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.SnoozeReportsRequest";
                encode(message: SnoozeReportsRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SnoozeReportsRequest;
                fromJSON(object: any): SnoozeReportsRequest;
                toJSON(message: SnoozeReportsRequest): unknown;
                create(base?: {
                    id?: string;
                    reason?: string;
                }): SnoozeReportsRequest;
                fromPartial(object: {
                    id?: string;
                    reason?: string;
                }): SnoozeReportsRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_unignore_reports */
        readonly unignoreReports: {
            readonly name: "UnignoreReports";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest";
                encode(message: BasicModerationIdRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicModerationIdRequest;
                fromJSON(object: any): BasicModerationIdRequest;
                toJSON(message: BasicModerationIdRequest): unknown;
                create(base?: {
                    id?: string;
                }): BasicModerationIdRequest;
                fromPartial(object: {
                    id?: string;
                }): BasicModerationIdRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_unmute_message_author */
        readonly unmuteMessageAuthor: {
            readonly name: "UnmuteMessageAuthor";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest";
                encode(message: BasicModerationIdRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicModerationIdRequest;
                fromJSON(object: any): BasicModerationIdRequest;
                toJSON(message: BasicModerationIdRequest): unknown;
                create(base?: {
                    id?: string;
                }): BasicModerationIdRequest;
                fromPartial(object: {
                    id?: string;
                }): BasicModerationIdRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_unsnooze_reports */
        readonly unsnoozeReports: {
            readonly name: "UnsnoozeReports";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.SnoozeReportsRequest";
                encode(message: SnoozeReportsRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SnoozeReportsRequest;
                fromJSON(object: any): SnoozeReportsRequest;
                toJSON(message: SnoozeReportsRequest): unknown;
                create(base?: {
                    id?: string;
                    reason?: string;
                }): SnoozeReportsRequest;
                fromPartial(object: {
                    id?: string;
                    reason?: string;
                }): SnoozeReportsRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_update_crowd_control_level */
        readonly updateCrowdControlLevel: {
            readonly name: "UpdateCrowdControlLevel";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.UpdateCrowdControlLevelRequest";
                encode(message: UpdateCrowdControlLevelRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): UpdateCrowdControlLevelRequest;
                fromJSON(object: any): UpdateCrowdControlLevelRequest;
                toJSON(message: UpdateCrowdControlLevelRequest): unknown;
                create(base?: {
                    id?: string;
                    level?: number;
                }): UpdateCrowdControlLevelRequest;
                fromPartial(object: {
                    id?: string;
                    level?: number;
                }): UpdateCrowdControlLevelRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_stylesheet */
        readonly stylesheet: {
            readonly name: "Stylesheet";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.moderation.StylesheetRequest";
                encode(message: StylesheetRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): StylesheetRequest;
                fromJSON(object: any): StylesheetRequest;
                toJSON(message: StylesheetRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): StylesheetRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): StylesheetRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.StringValue";
                encode(message: StringValue, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): StringValue;
                fromJSON(object: any): StringValue;
                toJSON(message: StringValue): unknown;
                create(base?: {
                    value?: string;
                }): StringValue;
                fromPartial(object: {
                    value?: string;
                }): StringValue;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array, metadata?: Metadata): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=moderation_svc.d.ts.map