/**
 * #subreddits_svc.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { Metadata } from "../../../../../lib/Types.js";
import { Empty } from "../../../../google/protobuf/empty.js";
import { StringValue } from "../../../../google/protobuf/wrappers.js";
import { JsonStatus, Listing } from "../common/common_msg.js";
import { AboutWhereRequest, BasicSearchRequest, BasicSubredditRequest, BasicWhereRequest, DeleteSrImgRequest, SearchRedditNamesResponse, SearchSubredditsResponse, SiteAdminRequest, StickyRequest, StickyResponse, SubmitTextResponse, SubredditAboutEditRequest, SubredditAboutEditResponse, SubredditAboutResponse, SubredditAboutRulesResponse, SubredditAboutTrafficResponse, SubredditAddRemovalReasonRequest, SubredditAddRemovalReasonResponse, SubredditAutocompleteRequest, SubredditAutocompleteResponse, SubredditGetRemovalReasonsRequest, SubredditGetRemovalReasonsResponse, SubredditPostRequirementsResponse, SubredditsSearchRequest, SubredditsSearchResponse, SubredditStylesheetRequest, SubscribeRequest, UploadSrImgRequest, UploadSrImgResponse, UserSearchResponse, UsersSearchRequest } from "./subreddits_msg.js";
/** SUBREDDITS - https://www.reddit.com/dev/api#section_subreddits */
export interface Subreddits {
    /** https://www.reddit.com/dev/api#GET_about_\{where\} */
    AboutWhere(request: AboutWhereRequest, metadata?: Metadata): Promise<Listing>;
    /** https://www.reddit.com/dev/api#POST_api_delete_sr_banner */
    DeleteSrBanner(request: BasicSubredditRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_delete_sr_header */
    DeleteSrHeader(request: BasicSubredditRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_delete_sr_icon */
    DeleteSrIcon(request: BasicSubredditRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_delete_sr_img */
    DeleteSrImg(request: DeleteSrImgRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_search_reddit_names */
    SearchRedditNames(request: BasicSearchRequest, metadata?: Metadata): Promise<SearchRedditNamesResponse>;
    /** https://www.reddit.com/dev/api#POST_api_search_subreddits */
    SearchSubreddits(request: BasicSearchRequest, metadata?: Metadata): Promise<SearchSubredditsResponse>;
    /** https://www.reddit.com/dev/api#POST_api_site_admin */
    SiteAdmin(request: SiteAdminRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#GET_api_submit_text */
    SubmitText(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubmitTextResponse>;
    /**
     * TODO: this seems to return a Listing, not a SubredditAutocompleteResponse.
     * https://www.reddit.com/dev/api#GET_api_subreddit_autocomplete_v2
     */
    SubredditAutocomplete(request: SubredditAutocompleteRequest, metadata?: Metadata): Promise<SubredditAutocompleteResponse>;
    /** https://www.reddit.com/dev/api#POST_api_subreddit_stylesheet */
    SubredditStylesheet(request: SubredditStylesheetRequest, metadata?: Metadata): Promise<JsonStatus>;
    /** https://www.reddit.com/dev/api#POST_api_subscribe */
    Subscribe(request: SubscribeRequest, metadata?: Metadata): Promise<Empty>;
    /** https://www.reddit.com/dev/api#POST_api_upload_sr_img */
    UploadSrImg(request: UploadSrImgRequest, metadata?: Metadata): Promise<UploadSrImgResponse>;
    /** https://www.reddit.com/dev/api#GET_api_v1_\{subreddit\}_post_requirements */
    SubredditPostRequirements(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditPostRequirementsResponse>;
    /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about */
    SubredditAbout(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditAboutResponse>;
    /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about_edit */
    SubredditAboutEdit(request: SubredditAboutEditRequest, metadata?: Metadata): Promise<SubredditAboutEditResponse>;
    /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about_rules */
    SubredditAboutRules(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditAboutRulesResponse>;
    /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about_traffic */
    SubredditAboutTraffic(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditAboutTrafficResponse>;
    /** https://www.reddit.com/dev/api#GET_sidebar */
    Sidebar(request: BasicSubredditRequest, metadata?: Metadata): Promise<StringValue>;
    /** https://www.reddit.com/dev/api#GET_sticky */
    Sticky(request: StickyRequest, metadata?: Metadata): Promise<StickyResponse>;
    /** https://www.reddit.com/dev/api#GET_subreddits_mine_\{where\} */
    SubredditsMineWhere(request: BasicWhereRequest, metadata?: Metadata): Promise<Listing>;
    /**
     * https://www.reddit.com/dev/api#GET_subreddits_search
     * Make Wrapped
     */
    SubredditsSearch(request: SubredditsSearchRequest, metadata?: Metadata): Promise<SubredditsSearchResponse>;
    /** https://www.reddit.com/dev/api#GET_subreddits_\{where\} */
    SubredditsWhere(request: BasicWhereRequest, metadata?: Metadata): Promise<SubredditsSearchResponse>;
    /** https://www.reddit.com/dev/api#GET_users_search */
    UsersSearch(request: UsersSearchRequest, metadata?: Metadata): Promise<UserSearchResponse>;
    /** https://www.reddit.com/dev/api#GET_users_\{where\} */
    UsersWhere(request: BasicWhereRequest, metadata?: Metadata): Promise<SubredditsSearchResponse>;
    /**
     * Add a removal reason to a subreddit.
     *
     * POST /api/v1/{subreddit}/removal_reasons
     */
    SubredditAddRemovalReason(request: SubredditAddRemovalReasonRequest, metadata?: Metadata): Promise<SubredditAddRemovalReasonResponse>;
    /**
     * Get the list of subreddit's removal reasons.
     *
     * GET /api/v1/{subreddit}/removal_reasons
     */
    SubredditGetRemovalReasons(request: SubredditGetRemovalReasonsRequest, metadata?: Metadata): Promise<SubredditGetRemovalReasonsResponse>;
}
export declare const SubredditsServiceName = "devvit.plugin.redditapi.subreddits.Subreddits";
export declare class SubredditsClientImpl implements Subreddits {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    AboutWhere(request: AboutWhereRequest, metadata?: Metadata): Promise<Listing>;
    DeleteSrBanner(request: BasicSubredditRequest, metadata?: Metadata): Promise<JsonStatus>;
    DeleteSrHeader(request: BasicSubredditRequest, metadata?: Metadata): Promise<JsonStatus>;
    DeleteSrIcon(request: BasicSubredditRequest, metadata?: Metadata): Promise<JsonStatus>;
    DeleteSrImg(request: DeleteSrImgRequest, metadata?: Metadata): Promise<JsonStatus>;
    SearchRedditNames(request: BasicSearchRequest, metadata?: Metadata): Promise<SearchRedditNamesResponse>;
    SearchSubreddits(request: BasicSearchRequest, metadata?: Metadata): Promise<SearchSubredditsResponse>;
    SiteAdmin(request: SiteAdminRequest, metadata?: Metadata): Promise<JsonStatus>;
    SubmitText(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubmitTextResponse>;
    SubredditAutocomplete(request: SubredditAutocompleteRequest, metadata?: Metadata): Promise<SubredditAutocompleteResponse>;
    SubredditStylesheet(request: SubredditStylesheetRequest, metadata?: Metadata): Promise<JsonStatus>;
    Subscribe(request: SubscribeRequest, metadata?: Metadata): Promise<Empty>;
    UploadSrImg(request: UploadSrImgRequest, metadata?: Metadata): Promise<UploadSrImgResponse>;
    SubredditPostRequirements(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditPostRequirementsResponse>;
    SubredditAbout(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditAboutResponse>;
    SubredditAboutEdit(request: SubredditAboutEditRequest, metadata?: Metadata): Promise<SubredditAboutEditResponse>;
    SubredditAboutRules(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditAboutRulesResponse>;
    SubredditAboutTraffic(request: BasicSubredditRequest, metadata?: Metadata): Promise<SubredditAboutTrafficResponse>;
    Sidebar(request: BasicSubredditRequest, metadata?: Metadata): Promise<StringValue>;
    Sticky(request: StickyRequest, metadata?: Metadata): Promise<StickyResponse>;
    SubredditsMineWhere(request: BasicWhereRequest, metadata?: Metadata): Promise<Listing>;
    SubredditsSearch(request: SubredditsSearchRequest, metadata?: Metadata): Promise<SubredditsSearchResponse>;
    SubredditsWhere(request: BasicWhereRequest, metadata?: Metadata): Promise<SubredditsSearchResponse>;
    UsersSearch(request: UsersSearchRequest, metadata?: Metadata): Promise<UserSearchResponse>;
    UsersWhere(request: BasicWhereRequest, metadata?: Metadata): Promise<SubredditsSearchResponse>;
    SubredditAddRemovalReason(request: SubredditAddRemovalReasonRequest, metadata?: Metadata): Promise<SubredditAddRemovalReasonResponse>;
    SubredditGetRemovalReasons(request: SubredditGetRemovalReasonsRequest, metadata?: Metadata): Promise<SubredditGetRemovalReasonsResponse>;
}
/** SUBREDDITS - https://www.reddit.com/dev/api#section_subreddits */
export type SubredditsDefinition = typeof SubredditsDefinition;
export declare const SubredditsDefinition: {
    readonly name: "Subreddits";
    readonly fullName: "devvit.plugin.redditapi.subreddits.Subreddits";
    readonly methods: {
        /** https://www.reddit.com/dev/api#GET_about_\{where\} */
        readonly aboutWhere: {
            readonly name: "AboutWhere";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.AboutWhereRequest";
                encode(message: AboutWhereRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): AboutWhereRequest;
                fromJSON(object: any): AboutWhereRequest;
                toJSON(message: AboutWhereRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    show?: string | undefined | undefined;
                    user?: string | undefined | undefined;
                    subreddit?: string | undefined | undefined;
                    where?: string;
                }): AboutWhereRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    show?: string | undefined | undefined;
                    user?: string | undefined | undefined;
                    subreddit?: string | undefined | undefined;
                    where?: string;
                }): AboutWhereRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.Listing";
                encode(message: Listing, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Listing;
                fromJSON(object: any): Listing;
                toJSON(message: Listing): unknown;
                create(base?: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
                fromPartial(object: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_delete_sr_banner */
        readonly deleteSrBanner: {
            readonly name: "DeleteSrBanner";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSubredditRequest";
                encode(message: BasicSubredditRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSubredditRequest;
                fromJSON(object: any): BasicSubredditRequest;
                toJSON(message: BasicSubredditRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): BasicSubredditRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): BasicSubredditRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.JsonStatus";
                encode(message: JsonStatus, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): JsonStatus;
                fromJSON(object: any): JsonStatus;
                toJSON(message: JsonStatus): unknown;
                create(base?: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
                fromPartial(object: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_delete_sr_header */
        readonly deleteSrHeader: {
            readonly name: "DeleteSrHeader";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSubredditRequest";
                encode(message: BasicSubredditRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSubredditRequest;
                fromJSON(object: any): BasicSubredditRequest;
                toJSON(message: BasicSubredditRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): BasicSubredditRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): BasicSubredditRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.JsonStatus";
                encode(message: JsonStatus, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): JsonStatus;
                fromJSON(object: any): JsonStatus;
                toJSON(message: JsonStatus): unknown;
                create(base?: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
                fromPartial(object: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_delete_sr_icon */
        readonly deleteSrIcon: {
            readonly name: "DeleteSrIcon";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSubredditRequest";
                encode(message: BasicSubredditRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSubredditRequest;
                fromJSON(object: any): BasicSubredditRequest;
                toJSON(message: BasicSubredditRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): BasicSubredditRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): BasicSubredditRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.JsonStatus";
                encode(message: JsonStatus, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): JsonStatus;
                fromJSON(object: any): JsonStatus;
                toJSON(message: JsonStatus): unknown;
                create(base?: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
                fromPartial(object: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_delete_sr_img */
        readonly deleteSrImg: {
            readonly name: "DeleteSrImg";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.DeleteSrImgRequest";
                encode(message: DeleteSrImgRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): DeleteSrImgRequest;
                fromJSON(object: any): DeleteSrImgRequest;
                toJSON(message: DeleteSrImgRequest): unknown;
                create(base?: {
                    subreddit?: string;
                    imgName?: string;
                }): DeleteSrImgRequest;
                fromPartial(object: {
                    subreddit?: string;
                    imgName?: string;
                }): DeleteSrImgRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.JsonStatus";
                encode(message: JsonStatus, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): JsonStatus;
                fromJSON(object: any): JsonStatus;
                toJSON(message: JsonStatus): unknown;
                create(base?: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
                fromPartial(object: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_search_reddit_names */
        readonly searchRedditNames: {
            readonly name: "SearchRedditNames";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSearchRequest";
                encode(message: BasicSearchRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSearchRequest;
                fromJSON(object: any): BasicSearchRequest;
                toJSON(message: BasicSearchRequest): unknown;
                create(base?: {
                    exact?: boolean | undefined | undefined;
                    includeOver18?: boolean | undefined | undefined;
                    includeUnadvertisable?: boolean | undefined | undefined;
                    query?: string;
                    searchQueryId?: string | undefined | undefined;
                    typeaheadActive?: boolean | undefined | undefined;
                }): BasicSearchRequest;
                fromPartial(object: {
                    exact?: boolean | undefined | undefined;
                    includeOver18?: boolean | undefined | undefined;
                    includeUnadvertisable?: boolean | undefined | undefined;
                    query?: string;
                    searchQueryId?: string | undefined | undefined;
                    typeaheadActive?: boolean | undefined | undefined;
                }): BasicSearchRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SearchRedditNamesResponse";
                encode(message: SearchRedditNamesResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SearchRedditNamesResponse;
                fromJSON(object: any): SearchRedditNamesResponse;
                toJSON(message: SearchRedditNamesResponse): unknown;
                create(base?: {
                    names?: string[];
                }): SearchRedditNamesResponse;
                fromPartial(object: {
                    names?: string[];
                }): SearchRedditNamesResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_search_subreddits */
        readonly searchSubreddits: {
            readonly name: "SearchSubreddits";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSearchRequest";
                encode(message: BasicSearchRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSearchRequest;
                fromJSON(object: any): BasicSearchRequest;
                toJSON(message: BasicSearchRequest): unknown;
                create(base?: {
                    exact?: boolean | undefined | undefined;
                    includeOver18?: boolean | undefined | undefined;
                    includeUnadvertisable?: boolean | undefined | undefined;
                    query?: string;
                    searchQueryId?: string | undefined | undefined;
                    typeaheadActive?: boolean | undefined | undefined;
                }): BasicSearchRequest;
                fromPartial(object: {
                    exact?: boolean | undefined | undefined;
                    includeOver18?: boolean | undefined | undefined;
                    includeUnadvertisable?: boolean | undefined | undefined;
                    query?: string;
                    searchQueryId?: string | undefined | undefined;
                    typeaheadActive?: boolean | undefined | undefined;
                }): BasicSearchRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SearchSubredditsResponse";
                encode(message: SearchSubredditsResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SearchSubredditsResponse;
                fromJSON(object: any): SearchSubredditsResponse;
                toJSON(message: SearchSubredditsResponse): unknown;
                create(base?: {
                    subreddits?: {
                        activeUserCount?: number | undefined | undefined;
                        iconImg?: string | undefined | undefined;
                        keyColor?: string | undefined | undefined;
                        name?: string | undefined | undefined;
                        subscriberCount?: number | undefined | undefined;
                        isChatPostFeatureEnabled?: boolean | undefined | undefined;
                        allowChatPostCreation?: boolean | undefined | undefined;
                        allowImages?: boolean | undefined | undefined;
                    }[];
                }): SearchSubredditsResponse;
                fromPartial(object: {
                    subreddits?: {
                        activeUserCount?: number | undefined | undefined;
                        iconImg?: string | undefined | undefined;
                        keyColor?: string | undefined | undefined;
                        name?: string | undefined | undefined;
                        subscriberCount?: number | undefined | undefined;
                        isChatPostFeatureEnabled?: boolean | undefined | undefined;
                        allowChatPostCreation?: boolean | undefined | undefined;
                        allowImages?: boolean | undefined | undefined;
                    }[];
                }): SearchSubredditsResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_site_admin */
        readonly siteAdmin: {
            readonly name: "SiteAdmin";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.SiteAdminRequest";
                encode(message: SiteAdminRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SiteAdminRequest;
                fromJSON(object: any): SiteAdminRequest;
                toJSON(message: SiteAdminRequest): unknown;
                create(base?: {
                    acceptFollowers?: boolean;
                    adminOverrideSpamComments?: boolean;
                    adminOverrideSpamLinks?: boolean;
                    adminOverrideSpamSelfposts?: boolean;
                    allOriginalContent?: boolean;
                    allowChatPostCreation?: boolean;
                    allowDiscovery?: boolean;
                    allowGalleries?: boolean;
                    allowImages?: boolean;
                    allowPolls?: boolean;
                    allowPostCrossposts?: boolean;
                    allowPredictionContributors?: boolean;
                    allowPredictions?: boolean;
                    allowPredictionsTournament?: boolean;
                    allowTalks?: boolean;
                    allowTop?: boolean;
                    allowVideos?: boolean;
                    banEvasionThreshold?: number;
                    collapseDeletedComments?: boolean;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[];
                    } | undefined;
                    commentScoreHideMins?: number;
                    crowdControlFilter?: boolean;
                    crowdControlLevel?: number;
                    crowdControlMode?: boolean;
                    crowdControlPostLevel?: number;
                    description?: string;
                    disableContributorRequests?: boolean;
                    excludeBannedModqueue?: boolean;
                    freeFormReports?: boolean;
                    gRecaptchaResponse?: string;
                    hatefulContentThresholdAbuse?: number;
                    hatefulContentThresholdIdentity?: number;
                    headerTitle?: string;
                    keyColor?: string;
                    linkType?: string;
                    name?: string;
                    newPinnedPostPnsEnabled?: boolean;
                    originalContentTagEnabled?: boolean;
                    over18?: boolean;
                    predictionLeaderboardEntryType?: number;
                    publicDescription?: string;
                    restrictCommenting?: boolean;
                    restrictPosting?: boolean;
                    shouldArchivePosts?: boolean;
                    showMedia?: boolean;
                    showMediaPreview?: boolean;
                    spamComments?: string;
                    spamLinks?: string;
                    spamSelfposts?: string;
                    spoilersEnabled?: boolean;
                    sr?: string;
                    submitLinkLabel?: string;
                    submitText?: string;
                    submitTextLabel?: string;
                    suggestedCommentSort?: string;
                    title?: string;
                    toxicityThresholdChatLevel?: number;
                    type?: string;
                    userFlairPnsEnabled?: boolean;
                    welcomeMessageEnabled?: boolean;
                    welcomeMessageText?: string;
                    wikiEditAge?: number;
                    wikiEditKarma?: number;
                    wikimode?: string;
                    crowdControlChatLevel?: number;
                    hideAds?: boolean;
                    modmailHarassmentFilterEnabled?: boolean;
                }): SiteAdminRequest;
                fromPartial(object: {
                    acceptFollowers?: boolean;
                    adminOverrideSpamComments?: boolean;
                    adminOverrideSpamLinks?: boolean;
                    adminOverrideSpamSelfposts?: boolean;
                    allOriginalContent?: boolean;
                    allowChatPostCreation?: boolean;
                    allowDiscovery?: boolean;
                    allowGalleries?: boolean;
                    allowImages?: boolean;
                    allowPolls?: boolean;
                    allowPostCrossposts?: boolean;
                    allowPredictionContributors?: boolean;
                    allowPredictions?: boolean;
                    allowPredictionsTournament?: boolean;
                    allowTalks?: boolean;
                    allowTop?: boolean;
                    allowVideos?: boolean;
                    banEvasionThreshold?: number;
                    collapseDeletedComments?: boolean;
                    commentContributionSettings?: {
                        allowedMediaTypes?: string[];
                    } | undefined;
                    commentScoreHideMins?: number;
                    crowdControlFilter?: boolean;
                    crowdControlLevel?: number;
                    crowdControlMode?: boolean;
                    crowdControlPostLevel?: number;
                    description?: string;
                    disableContributorRequests?: boolean;
                    excludeBannedModqueue?: boolean;
                    freeFormReports?: boolean;
                    gRecaptchaResponse?: string;
                    hatefulContentThresholdAbuse?: number;
                    hatefulContentThresholdIdentity?: number;
                    headerTitle?: string;
                    keyColor?: string;
                    linkType?: string;
                    name?: string;
                    newPinnedPostPnsEnabled?: boolean;
                    originalContentTagEnabled?: boolean;
                    over18?: boolean;
                    predictionLeaderboardEntryType?: number;
                    publicDescription?: string;
                    restrictCommenting?: boolean;
                    restrictPosting?: boolean;
                    shouldArchivePosts?: boolean;
                    showMedia?: boolean;
                    showMediaPreview?: boolean;
                    spamComments?: string;
                    spamLinks?: string;
                    spamSelfposts?: string;
                    spoilersEnabled?: boolean;
                    sr?: string;
                    submitLinkLabel?: string;
                    submitText?: string;
                    submitTextLabel?: string;
                    suggestedCommentSort?: string;
                    title?: string;
                    toxicityThresholdChatLevel?: number;
                    type?: string;
                    userFlairPnsEnabled?: boolean;
                    welcomeMessageEnabled?: boolean;
                    welcomeMessageText?: string;
                    wikiEditAge?: number;
                    wikiEditKarma?: number;
                    wikimode?: string;
                    crowdControlChatLevel?: number;
                    hideAds?: boolean;
                    modmailHarassmentFilterEnabled?: boolean;
                }): SiteAdminRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.JsonStatus";
                encode(message: JsonStatus, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): JsonStatus;
                fromJSON(object: any): JsonStatus;
                toJSON(message: JsonStatus): unknown;
                create(base?: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
                fromPartial(object: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_api_submit_text */
        readonly submitText: {
            readonly name: "SubmitText";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSubredditRequest";
                encode(message: BasicSubredditRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSubredditRequest;
                fromJSON(object: any): BasicSubredditRequest;
                toJSON(message: BasicSubredditRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): BasicSubredditRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): BasicSubredditRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubmitTextResponse";
                encode(message: SubmitTextResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubmitTextResponse;
                fromJSON(object: any): SubmitTextResponse;
                toJSON(message: SubmitTextResponse): unknown;
                create(base?: {
                    submitText?: string | undefined | undefined;
                    submitTextHtml?: string | undefined | undefined;
                }): SubmitTextResponse;
                fromPartial(object: {
                    submitText?: string | undefined | undefined;
                    submitTextHtml?: string | undefined | undefined;
                }): SubmitTextResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /**
         * TODO: this seems to return a Listing, not a SubredditAutocompleteResponse.
         * https://www.reddit.com/dev/api#GET_api_subreddit_autocomplete_v2
         */
        readonly subredditAutocomplete: {
            readonly name: "SubredditAutocomplete";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditAutocompleteRequest";
                encode(message: SubredditAutocompleteRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAutocompleteRequest;
                fromJSON(object: any): SubredditAutocompleteRequest;
                toJSON(message: SubredditAutocompleteRequest): unknown;
                create(base?: {
                    includeOver18?: boolean | undefined | undefined;
                    includeProfiles?: boolean | undefined | undefined;
                    limit?: number | undefined | undefined;
                    query?: string;
                    searchQueryId?: string | undefined | undefined;
                    typeaheadActive?: boolean | undefined | undefined;
                }): SubredditAutocompleteRequest;
                fromPartial(object: {
                    includeOver18?: boolean | undefined | undefined;
                    includeProfiles?: boolean | undefined | undefined;
                    limit?: number | undefined | undefined;
                    query?: string;
                    searchQueryId?: string | undefined | undefined;
                    typeaheadActive?: boolean | undefined | undefined;
                }): SubredditAutocompleteRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditAutocompleteResponse";
                encode(message: SubredditAutocompleteResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAutocompleteResponse;
                fromJSON(object: any): SubredditAutocompleteResponse;
                toJSON(message: SubredditAutocompleteResponse): unknown;
                create(base?: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        childrenSubreddits?: {
                            kind?: string;
                            data?: {
                                userFlairBackgroundColor?: string | undefined | undefined;
                                submitTextHtml?: string | undefined | undefined;
                                restrictPosting?: boolean | undefined | undefined;
                                userIsBanned?: boolean | undefined | undefined;
                                freeFormReports?: boolean | undefined | undefined;
                                wikiEnabled?: boolean | undefined | undefined;
                                userIsMuted?: boolean | undefined | undefined;
                                userCanFlairInSr?: boolean | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                headerImg?: string | undefined | undefined;
                                title?: string | undefined | undefined;
                                allowGalleries?: boolean | undefined | undefined;
                                iconSize?: number[];
                                primaryColor?: string | undefined | undefined;
                                activeUserCount?: number | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                displayNamePrefixed?: string | undefined | undefined;
                                accountsActive?: number | undefined | undefined;
                                publicTraffic?: boolean | undefined | undefined;
                                subscribers?: number | undefined | undefined;
                                userFlairRichtext?: string[];
                                videostreamLinksCount?: number | undefined | undefined;
                                name?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                hideAds?: boolean | undefined | undefined;
                                emojisEnabled?: boolean | undefined | undefined;
                                advertiserCategory?: string | undefined | undefined;
                                publicDescription?: string | undefined | undefined;
                                commentScoreHideMins?: number | undefined | undefined;
                                allowPredictions?: boolean | undefined | undefined;
                                userHasFavorited?: boolean | undefined | undefined;
                                userFlairTemplateId?: string | undefined | undefined;
                                communityIcon?: string | undefined | undefined;
                                bannerBackgroundImage?: string | undefined | undefined;
                                originalContentTagEnabled?: boolean | undefined | undefined;
                                communityReviewed?: boolean | undefined | undefined;
                                submitText?: string | undefined | undefined;
                                descriptionHtml?: string | undefined | undefined;
                                spoilersEnabled?: boolean | undefined | undefined;
                                commentContributionSettings?: {
                                    allowedMediaTypes?: string[];
                                } | undefined;
                                allowTalks?: boolean | undefined | undefined;
                                headerSize?: number[];
                                userFlairPosition?: string | undefined | undefined;
                                allOriginalContent?: boolean | undefined | undefined;
                                hasMenuWidget?: boolean | undefined | undefined;
                                isEnrolledInNewModmail?: boolean | undefined | undefined;
                                keyColor?: string | undefined | undefined;
                                canAssignUserFlair?: boolean | undefined | undefined;
                                created?: number | undefined | undefined;
                                wls?: number | undefined | undefined;
                                showMediaPreview?: boolean | undefined | undefined;
                                submissionType?: string | undefined | undefined;
                                userIsSubscriber?: boolean | undefined | undefined;
                                allowedMediaInComments?: string[];
                                allowVideogifs?: boolean | undefined | undefined;
                                shouldArchivePosts?: boolean | undefined | undefined;
                                userFlairType?: string | undefined | undefined;
                                allowPolls?: boolean | undefined | undefined;
                                collapseDeletedComments?: boolean | undefined | undefined;
                                emojisCustomSize?: number[];
                                publicDescriptionHtml?: string | undefined | undefined;
                                allowVideos?: boolean | undefined | undefined;
                                isCrosspostableSubreddit?: boolean | undefined | undefined;
                                notificationLevel?: string | undefined | undefined;
                                shouldShowMediaInCommentsSetting?: boolean | undefined | undefined;
                                canAssignLinkFlair?: boolean | undefined | undefined;
                                accountsActiveIsFuzzed?: boolean | undefined | undefined;
                                allowPredictionContributors?: boolean | undefined | undefined;
                                submitTextLabel?: string | undefined | undefined;
                                linkFlairPosition?: string | undefined | undefined;
                                userSrFlairEnabled?: boolean | undefined | undefined;
                                userFlairEnabledInSr?: boolean | undefined | undefined;
                                allowChatPostCreation?: boolean | undefined | undefined;
                                allowDiscovery?: boolean | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                userSrThemeEnabled?: boolean | undefined | undefined;
                                linkFlairEnabled?: boolean | undefined | undefined;
                                disableContributorRequests?: boolean | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                suggestedCommentSort?: string | undefined | undefined;
                                bannerImg?: string | undefined | undefined;
                                userFlairText?: string | undefined | undefined;
                                contentCategory?: string | undefined | undefined;
                                bannerBackgroundColor?: string | undefined | undefined;
                                showMedia?: boolean | undefined | undefined;
                                id?: string | undefined | undefined;
                                userIsModerator?: boolean | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                headerTitle?: string | undefined | undefined;
                                description?: string | undefined | undefined;
                                isChatPostFeatureEnabled?: boolean | undefined | undefined;
                                submitLinkLabel?: string | undefined | undefined;
                                userFlairTextColor?: string | undefined | undefined;
                                restrictCommenting?: boolean | undefined | undefined;
                                userFlairCssClass?: string | undefined | undefined;
                                allowImages?: boolean | undefined | undefined;
                                lang?: string | undefined | undefined;
                                whitelistStatus?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                bannerSize?: number[];
                                mobileBannerImage?: string | undefined | undefined;
                                userIsContributor?: boolean | undefined | undefined;
                                allowPredictionsTournament?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                        childrenAccounts?: {
                            kind?: string;
                            data?: {
                                isEmployee?: boolean | undefined | undefined;
                                isFriend?: boolean | undefined | undefined;
                                snoovatarSize?: number | undefined | undefined;
                                id?: string | undefined | undefined;
                                verified?: boolean | undefined | undefined;
                                isGold?: boolean | undefined | undefined;
                                isMod?: boolean | undefined | undefined;
                                hasVerifiedEmail?: boolean | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                hideFromRobots?: boolean | undefined | undefined;
                                linkKarma?: number | undefined | undefined;
                                acceptChats?: boolean | undefined | undefined;
                                isBlocked?: boolean | undefined | undefined;
                                prefShowSnoovatar?: boolean | undefined | undefined;
                                name?: string | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                snoovatarImg?: string | undefined | undefined;
                                commentKarma?: number | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                hasSubscribed?: boolean | undefined | undefined;
                                acceptPms?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                    } | undefined;
                }): SubredditAutocompleteResponse;
                fromPartial(object: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        childrenSubreddits?: {
                            kind?: string;
                            data?: {
                                userFlairBackgroundColor?: string | undefined | undefined;
                                submitTextHtml?: string | undefined | undefined;
                                restrictPosting?: boolean | undefined | undefined;
                                userIsBanned?: boolean | undefined | undefined;
                                freeFormReports?: boolean | undefined | undefined;
                                wikiEnabled?: boolean | undefined | undefined;
                                userIsMuted?: boolean | undefined | undefined;
                                userCanFlairInSr?: boolean | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                headerImg?: string | undefined | undefined;
                                title?: string | undefined | undefined;
                                allowGalleries?: boolean | undefined | undefined;
                                iconSize?: number[];
                                primaryColor?: string | undefined | undefined;
                                activeUserCount?: number | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                displayNamePrefixed?: string | undefined | undefined;
                                accountsActive?: number | undefined | undefined;
                                publicTraffic?: boolean | undefined | undefined;
                                subscribers?: number | undefined | undefined;
                                userFlairRichtext?: string[];
                                videostreamLinksCount?: number | undefined | undefined;
                                name?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                hideAds?: boolean | undefined | undefined;
                                emojisEnabled?: boolean | undefined | undefined;
                                advertiserCategory?: string | undefined | undefined;
                                publicDescription?: string | undefined | undefined;
                                commentScoreHideMins?: number | undefined | undefined;
                                allowPredictions?: boolean | undefined | undefined;
                                userHasFavorited?: boolean | undefined | undefined;
                                userFlairTemplateId?: string | undefined | undefined;
                                communityIcon?: string | undefined | undefined;
                                bannerBackgroundImage?: string | undefined | undefined;
                                originalContentTagEnabled?: boolean | undefined | undefined;
                                communityReviewed?: boolean | undefined | undefined;
                                submitText?: string | undefined | undefined;
                                descriptionHtml?: string | undefined | undefined;
                                spoilersEnabled?: boolean | undefined | undefined;
                                commentContributionSettings?: {
                                    allowedMediaTypes?: string[];
                                } | undefined;
                                allowTalks?: boolean | undefined | undefined;
                                headerSize?: number[];
                                userFlairPosition?: string | undefined | undefined;
                                allOriginalContent?: boolean | undefined | undefined;
                                hasMenuWidget?: boolean | undefined | undefined;
                                isEnrolledInNewModmail?: boolean | undefined | undefined;
                                keyColor?: string | undefined | undefined;
                                canAssignUserFlair?: boolean | undefined | undefined;
                                created?: number | undefined | undefined;
                                wls?: number | undefined | undefined;
                                showMediaPreview?: boolean | undefined | undefined;
                                submissionType?: string | undefined | undefined;
                                userIsSubscriber?: boolean | undefined | undefined;
                                allowedMediaInComments?: string[];
                                allowVideogifs?: boolean | undefined | undefined;
                                shouldArchivePosts?: boolean | undefined | undefined;
                                userFlairType?: string | undefined | undefined;
                                allowPolls?: boolean | undefined | undefined;
                                collapseDeletedComments?: boolean | undefined | undefined;
                                emojisCustomSize?: number[];
                                publicDescriptionHtml?: string | undefined | undefined;
                                allowVideos?: boolean | undefined | undefined;
                                isCrosspostableSubreddit?: boolean | undefined | undefined;
                                notificationLevel?: string | undefined | undefined;
                                shouldShowMediaInCommentsSetting?: boolean | undefined | undefined;
                                canAssignLinkFlair?: boolean | undefined | undefined;
                                accountsActiveIsFuzzed?: boolean | undefined | undefined;
                                allowPredictionContributors?: boolean | undefined | undefined;
                                submitTextLabel?: string | undefined | undefined;
                                linkFlairPosition?: string | undefined | undefined;
                                userSrFlairEnabled?: boolean | undefined | undefined;
                                userFlairEnabledInSr?: boolean | undefined | undefined;
                                allowChatPostCreation?: boolean | undefined | undefined;
                                allowDiscovery?: boolean | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                userSrThemeEnabled?: boolean | undefined | undefined;
                                linkFlairEnabled?: boolean | undefined | undefined;
                                disableContributorRequests?: boolean | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                suggestedCommentSort?: string | undefined | undefined;
                                bannerImg?: string | undefined | undefined;
                                userFlairText?: string | undefined | undefined;
                                contentCategory?: string | undefined | undefined;
                                bannerBackgroundColor?: string | undefined | undefined;
                                showMedia?: boolean | undefined | undefined;
                                id?: string | undefined | undefined;
                                userIsModerator?: boolean | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                headerTitle?: string | undefined | undefined;
                                description?: string | undefined | undefined;
                                isChatPostFeatureEnabled?: boolean | undefined | undefined;
                                submitLinkLabel?: string | undefined | undefined;
                                userFlairTextColor?: string | undefined | undefined;
                                restrictCommenting?: boolean | undefined | undefined;
                                userFlairCssClass?: string | undefined | undefined;
                                allowImages?: boolean | undefined | undefined;
                                lang?: string | undefined | undefined;
                                whitelistStatus?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                bannerSize?: number[];
                                mobileBannerImage?: string | undefined | undefined;
                                userIsContributor?: boolean | undefined | undefined;
                                allowPredictionsTournament?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                        childrenAccounts?: {
                            kind?: string;
                            data?: {
                                isEmployee?: boolean | undefined | undefined;
                                isFriend?: boolean | undefined | undefined;
                                snoovatarSize?: number | undefined | undefined;
                                id?: string | undefined | undefined;
                                verified?: boolean | undefined | undefined;
                                isGold?: boolean | undefined | undefined;
                                isMod?: boolean | undefined | undefined;
                                hasVerifiedEmail?: boolean | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                hideFromRobots?: boolean | undefined | undefined;
                                linkKarma?: number | undefined | undefined;
                                acceptChats?: boolean | undefined | undefined;
                                isBlocked?: boolean | undefined | undefined;
                                prefShowSnoovatar?: boolean | undefined | undefined;
                                name?: string | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                snoovatarImg?: string | undefined | undefined;
                                commentKarma?: number | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                hasSubscribed?: boolean | undefined | undefined;
                                acceptPms?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                    } | undefined;
                }): SubredditAutocompleteResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_subreddit_stylesheet */
        readonly subredditStylesheet: {
            readonly name: "SubredditStylesheet";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditStylesheetRequest";
                encode(message: SubredditStylesheetRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditStylesheetRequest;
                fromJSON(object: any): SubredditStylesheetRequest;
                toJSON(message: SubredditStylesheetRequest): unknown;
                create(base?: {
                    op?: string;
                    reason?: string;
                    stylesheetContents?: string;
                    subreddit?: string;
                }): SubredditStylesheetRequest;
                fromPartial(object: {
                    op?: string;
                    reason?: string;
                    stylesheetContents?: string;
                    subreddit?: string;
                }): SubredditStylesheetRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.JsonStatus";
                encode(message: JsonStatus, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): JsonStatus;
                fromJSON(object: any): JsonStatus;
                toJSON(message: JsonStatus): unknown;
                create(base?: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
                fromPartial(object: {
                    json?: {
                        errors?: string[];
                    } | undefined;
                }): JsonStatus;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_subscribe */
        readonly subscribe: {
            readonly name: "Subscribe";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.SubscribeRequest";
                encode(message: SubscribeRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubscribeRequest;
                fromJSON(object: any): SubscribeRequest;
                toJSON(message: SubscribeRequest): unknown;
                create(base?: {
                    action?: string;
                    actionSource?: string;
                    skipInitialDefaults?: boolean;
                    sr?: string;
                    srName?: string;
                }): SubscribeRequest;
                fromPartial(object: {
                    action?: string;
                    actionSource?: string;
                    skipInitialDefaults?: boolean;
                    sr?: string;
                    srName?: string;
                }): SubscribeRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                create(base?: {}): Empty;
                fromPartial(_: {}): Empty;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#POST_api_upload_sr_img */
        readonly uploadSrImg: {
            readonly name: "UploadSrImg";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.UploadSrImgRequest";
                encode(message: UploadSrImgRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): UploadSrImgRequest;
                fromJSON(object: any): UploadSrImgRequest;
                toJSON(message: UploadSrImgRequest): unknown;
                create(base?: {
                    file?: string;
                    header?: number;
                    imgType?: string;
                    name?: string;
                    uploadType?: string;
                    subreddit?: string;
                }): UploadSrImgRequest;
                fromPartial(object: {
                    file?: string;
                    header?: number;
                    imgType?: string;
                    name?: string;
                    uploadType?: string;
                    subreddit?: string;
                }): UploadSrImgRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.UploadSrImgResponse";
                encode(message: UploadSrImgResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): UploadSrImgResponse;
                fromJSON(object: any): UploadSrImgResponse;
                toJSON(message: UploadSrImgResponse): unknown;
                create(base?: {
                    errors?: string[];
                    imgSrc?: string | undefined | undefined;
                    errorsValues?: string[];
                }): UploadSrImgResponse;
                fromPartial(object: {
                    errors?: string[];
                    imgSrc?: string | undefined | undefined;
                    errorsValues?: string[];
                }): UploadSrImgResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_api_v1_\{subreddit\}_post_requirements */
        readonly subredditPostRequirements: {
            readonly name: "SubredditPostRequirements";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSubredditRequest";
                encode(message: BasicSubredditRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSubredditRequest;
                fromJSON(object: any): BasicSubredditRequest;
                toJSON(message: BasicSubredditRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): BasicSubredditRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): BasicSubredditRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditPostRequirementsResponse";
                encode(message: SubredditPostRequirementsResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditPostRequirementsResponse;
                fromJSON(object: any): SubredditPostRequirementsResponse;
                toJSON(message: SubredditPostRequirementsResponse): unknown;
                create(base?: {
                    titleRegexes?: string[];
                    bodyBlacklistedStrings?: string[];
                    titleBlacklistedStrings?: string[];
                    bodyTextMaxLength?: number | undefined | undefined;
                    titleRequiredStrings?: string[];
                    guidelinesText?: string | undefined | undefined;
                    galleryMinItems?: number | undefined | undefined;
                    domainBlacklist?: string[];
                    domainWhitelist?: string[];
                    titleTextMaxLength?: number | undefined | undefined;
                    bodyRestrictionPolicy?: string | undefined | undefined;
                    linkRestrictionPolicy?: string | undefined | undefined;
                    guidelinesDisplayPolicy?: string | undefined | undefined;
                    bodyRequiredStrings?: string[];
                    titleTextMinLength?: number | undefined | undefined;
                    galleryCaptionsRequirement?: string | undefined | undefined;
                    isFlairRequired?: boolean | undefined | undefined;
                    galleryMaxItems?: number | undefined | undefined;
                    galleryUrlsRequirement?: string | undefined | undefined;
                    bodyRegexes?: string[];
                    linkRepostAge?: number | undefined | undefined;
                    bodyTextMinLength?: number | undefined | undefined;
                }): SubredditPostRequirementsResponse;
                fromPartial(object: {
                    titleRegexes?: string[];
                    bodyBlacklistedStrings?: string[];
                    titleBlacklistedStrings?: string[];
                    bodyTextMaxLength?: number | undefined | undefined;
                    titleRequiredStrings?: string[];
                    guidelinesText?: string | undefined | undefined;
                    galleryMinItems?: number | undefined | undefined;
                    domainBlacklist?: string[];
                    domainWhitelist?: string[];
                    titleTextMaxLength?: number | undefined | undefined;
                    bodyRestrictionPolicy?: string | undefined | undefined;
                    linkRestrictionPolicy?: string | undefined | undefined;
                    guidelinesDisplayPolicy?: string | undefined | undefined;
                    bodyRequiredStrings?: string[];
                    titleTextMinLength?: number | undefined | undefined;
                    galleryCaptionsRequirement?: string | undefined | undefined;
                    isFlairRequired?: boolean | undefined | undefined;
                    galleryMaxItems?: number | undefined | undefined;
                    galleryUrlsRequirement?: string | undefined | undefined;
                    bodyRegexes?: string[];
                    linkRepostAge?: number | undefined | undefined;
                    bodyTextMinLength?: number | undefined | undefined;
                }): SubredditPostRequirementsResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about */
        readonly subredditAbout: {
            readonly name: "SubredditAbout";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSubredditRequest";
                encode(message: BasicSubredditRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSubredditRequest;
                fromJSON(object: any): BasicSubredditRequest;
                toJSON(message: BasicSubredditRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): BasicSubredditRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): BasicSubredditRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditAboutResponse";
                encode(message: SubredditAboutResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutResponse;
                fromJSON(object: any): SubredditAboutResponse;
                toJSON(message: SubredditAboutResponse): unknown;
                create(base?: {
                    kind?: string | undefined | undefined;
                    data?: {
                        userFlairBackgroundColor?: string | undefined | undefined;
                        submitTextHtml?: string | undefined | undefined;
                        restrictPosting?: boolean | undefined | undefined;
                        userIsBanned?: boolean | undefined | undefined;
                        freeFormReports?: boolean | undefined | undefined;
                        wikiEnabled?: boolean | undefined | undefined;
                        userIsMuted?: boolean | undefined | undefined;
                        userCanFlairInSr?: boolean | undefined | undefined;
                        displayName?: string | undefined | undefined;
                        headerImg?: string | undefined | undefined;
                        title?: string | undefined | undefined;
                        allowGalleries?: boolean | undefined | undefined;
                        primaryColor?: string | undefined | undefined;
                        activeUserCount?: number | undefined | undefined;
                        iconImg?: string | undefined | undefined;
                        displayNamePrefixed?: string | undefined | undefined;
                        accountsActive?: number | undefined | undefined;
                        publicTraffic?: boolean | undefined | undefined;
                        subscribers?: number | undefined | undefined;
                        userFlairRichtext?: {
                            e?: string | undefined | undefined;
                            t?: string | undefined | undefined;
                        }[];
                        name?: string | undefined | undefined;
                        quarantine?: boolean | undefined | undefined;
                        hideAds?: boolean | undefined | undefined;
                        emojisEnabled?: boolean | undefined | undefined;
                        advertiserCategory?: string | undefined | undefined;
                        publicDescription?: string | undefined | undefined;
                        commentScoreHideMins?: number | undefined | undefined;
                        allowPredictions?: boolean | undefined | undefined;
                        userHasFavorited?: boolean | undefined | undefined;
                        userFlairTemplateId?: string | undefined | undefined;
                        communityIcon?: string | undefined | undefined;
                        bannerBackgroundImage?: string | undefined | undefined;
                        originalContentTagEnabled?: boolean | undefined | undefined;
                        communityReviewed?: boolean | undefined | undefined;
                        submitText?: string | undefined | undefined;
                        descriptionHtml?: string | undefined | undefined;
                        spoilersEnabled?: boolean | undefined | undefined;
                        commentContributionSettings?: {
                            allowedMediaTypes?: string[];
                        } | undefined;
                        allowTalks?: boolean | undefined | undefined;
                        userFlairPosition?: string | undefined | undefined;
                        allOriginalContent?: boolean | undefined | undefined;
                        collectionsEnabled?: boolean | undefined | undefined;
                        isEnrolledInNewModmail?: boolean | undefined | undefined;
                        keyColor?: string | undefined | undefined;
                        eventPostsEnabled?: boolean | undefined | undefined;
                        canAssignUserFlair?: boolean | undefined | undefined;
                        created?: number | undefined | undefined;
                        showMediaPreview?: boolean | undefined | undefined;
                        submissionType?: string | undefined | undefined;
                        userIsSubscriber?: boolean | undefined | undefined;
                        allowedMediaInComments?: string[];
                        allowVideogifs?: boolean | undefined | undefined;
                        shouldArchivePosts?: boolean | undefined | undefined;
                        userFlairType?: string | undefined | undefined;
                        allowPolls?: boolean | undefined | undefined;
                        collapseDeletedComments?: boolean | undefined | undefined;
                        coins?: number | undefined | undefined;
                        publicDescriptionHtml?: string | undefined | undefined;
                        allowVideos?: boolean | undefined | undefined;
                        isCrosspostableSubreddit?: boolean | undefined | undefined;
                        notificationLevel?: string | undefined | undefined;
                        shouldShowMediaInCommentsSetting?: boolean | undefined | undefined;
                        canAssignLinkFlair?: boolean | undefined | undefined;
                        hasMenuWidget?: boolean | undefined | undefined;
                        accountsActiveIsFuzzed?: boolean | undefined | undefined;
                        allowPredictionContributors?: boolean | undefined | undefined;
                        submitTextLabel?: string | undefined | undefined;
                        linkFlairPosition?: string | undefined | undefined;
                        userSrFlairEnabled?: boolean | undefined | undefined;
                        userFlairEnabledInSr?: boolean | undefined | undefined;
                        allowChatPostCreation?: boolean | undefined | undefined;
                        allowDiscovery?: boolean | undefined | undefined;
                        acceptFollowers?: boolean | undefined | undefined;
                        userSrThemeEnabled?: boolean | undefined | undefined;
                        linkFlairEnabled?: boolean | undefined | undefined;
                        disableContributorRequests?: boolean | undefined | undefined;
                        subredditType?: string | undefined | undefined;
                        suggestedCommentSort?: string | undefined | undefined;
                        bannerImg?: string | undefined | undefined;
                        userFlairText?: string | undefined | undefined;
                        bannerBackgroundColor?: string | undefined | undefined;
                        showMedia?: boolean | undefined | undefined;
                        id?: string | undefined | undefined;
                        userIsModerator?: boolean | undefined | undefined;
                        over18?: boolean | undefined | undefined;
                        headerTitle?: string | undefined | undefined;
                        description?: string | undefined | undefined;
                        isChatPostFeatureEnabled?: boolean | undefined | undefined;
                        submitLinkLabel?: string | undefined | undefined;
                        userFlairTextColor?: string | undefined | undefined;
                        restrictCommenting?: boolean | undefined | undefined;
                        userFlairCssClass?: string | undefined | undefined;
                        allowImages?: boolean | undefined | undefined;
                        lang?: string | undefined | undefined;
                        url?: string | undefined | undefined;
                        createdUtc?: number | undefined | undefined;
                        bannerSize?: number[];
                        mobileBannerImage?: string | undefined | undefined;
                        userIsContributor?: boolean | undefined | undefined;
                        allowPredictionsTournament?: boolean | undefined | undefined;
                        iconSize?: number[];
                        headerSize?: number[];
                        wls?: number | undefined | undefined;
                        whitelistStatus?: string | undefined | undefined;
                        emojisCustomSize?: number[];
                    } | undefined;
                }): SubredditAboutResponse;
                fromPartial(object: {
                    kind?: string | undefined | undefined;
                    data?: {
                        userFlairBackgroundColor?: string | undefined | undefined;
                        submitTextHtml?: string | undefined | undefined;
                        restrictPosting?: boolean | undefined | undefined;
                        userIsBanned?: boolean | undefined | undefined;
                        freeFormReports?: boolean | undefined | undefined;
                        wikiEnabled?: boolean | undefined | undefined;
                        userIsMuted?: boolean | undefined | undefined;
                        userCanFlairInSr?: boolean | undefined | undefined;
                        displayName?: string | undefined | undefined;
                        headerImg?: string | undefined | undefined;
                        title?: string | undefined | undefined;
                        allowGalleries?: boolean | undefined | undefined;
                        primaryColor?: string | undefined | undefined;
                        activeUserCount?: number | undefined | undefined;
                        iconImg?: string | undefined | undefined;
                        displayNamePrefixed?: string | undefined | undefined;
                        accountsActive?: number | undefined | undefined;
                        publicTraffic?: boolean | undefined | undefined;
                        subscribers?: number | undefined | undefined;
                        userFlairRichtext?: {
                            e?: string | undefined | undefined;
                            t?: string | undefined | undefined;
                        }[];
                        name?: string | undefined | undefined;
                        quarantine?: boolean | undefined | undefined;
                        hideAds?: boolean | undefined | undefined;
                        emojisEnabled?: boolean | undefined | undefined;
                        advertiserCategory?: string | undefined | undefined;
                        publicDescription?: string | undefined | undefined;
                        commentScoreHideMins?: number | undefined | undefined;
                        allowPredictions?: boolean | undefined | undefined;
                        userHasFavorited?: boolean | undefined | undefined;
                        userFlairTemplateId?: string | undefined | undefined;
                        communityIcon?: string | undefined | undefined;
                        bannerBackgroundImage?: string | undefined | undefined;
                        originalContentTagEnabled?: boolean | undefined | undefined;
                        communityReviewed?: boolean | undefined | undefined;
                        submitText?: string | undefined | undefined;
                        descriptionHtml?: string | undefined | undefined;
                        spoilersEnabled?: boolean | undefined | undefined;
                        commentContributionSettings?: {
                            allowedMediaTypes?: string[];
                        } | undefined;
                        allowTalks?: boolean | undefined | undefined;
                        userFlairPosition?: string | undefined | undefined;
                        allOriginalContent?: boolean | undefined | undefined;
                        collectionsEnabled?: boolean | undefined | undefined;
                        isEnrolledInNewModmail?: boolean | undefined | undefined;
                        keyColor?: string | undefined | undefined;
                        eventPostsEnabled?: boolean | undefined | undefined;
                        canAssignUserFlair?: boolean | undefined | undefined;
                        created?: number | undefined | undefined;
                        showMediaPreview?: boolean | undefined | undefined;
                        submissionType?: string | undefined | undefined;
                        userIsSubscriber?: boolean | undefined | undefined;
                        allowedMediaInComments?: string[];
                        allowVideogifs?: boolean | undefined | undefined;
                        shouldArchivePosts?: boolean | undefined | undefined;
                        userFlairType?: string | undefined | undefined;
                        allowPolls?: boolean | undefined | undefined;
                        collapseDeletedComments?: boolean | undefined | undefined;
                        coins?: number | undefined | undefined;
                        publicDescriptionHtml?: string | undefined | undefined;
                        allowVideos?: boolean | undefined | undefined;
                        isCrosspostableSubreddit?: boolean | undefined | undefined;
                        notificationLevel?: string | undefined | undefined;
                        shouldShowMediaInCommentsSetting?: boolean | undefined | undefined;
                        canAssignLinkFlair?: boolean | undefined | undefined;
                        hasMenuWidget?: boolean | undefined | undefined;
                        accountsActiveIsFuzzed?: boolean | undefined | undefined;
                        allowPredictionContributors?: boolean | undefined | undefined;
                        submitTextLabel?: string | undefined | undefined;
                        linkFlairPosition?: string | undefined | undefined;
                        userSrFlairEnabled?: boolean | undefined | undefined;
                        userFlairEnabledInSr?: boolean | undefined | undefined;
                        allowChatPostCreation?: boolean | undefined | undefined;
                        allowDiscovery?: boolean | undefined | undefined;
                        acceptFollowers?: boolean | undefined | undefined;
                        userSrThemeEnabled?: boolean | undefined | undefined;
                        linkFlairEnabled?: boolean | undefined | undefined;
                        disableContributorRequests?: boolean | undefined | undefined;
                        subredditType?: string | undefined | undefined;
                        suggestedCommentSort?: string | undefined | undefined;
                        bannerImg?: string | undefined | undefined;
                        userFlairText?: string | undefined | undefined;
                        bannerBackgroundColor?: string | undefined | undefined;
                        showMedia?: boolean | undefined | undefined;
                        id?: string | undefined | undefined;
                        userIsModerator?: boolean | undefined | undefined;
                        over18?: boolean | undefined | undefined;
                        headerTitle?: string | undefined | undefined;
                        description?: string | undefined | undefined;
                        isChatPostFeatureEnabled?: boolean | undefined | undefined;
                        submitLinkLabel?: string | undefined | undefined;
                        userFlairTextColor?: string | undefined | undefined;
                        restrictCommenting?: boolean | undefined | undefined;
                        userFlairCssClass?: string | undefined | undefined;
                        allowImages?: boolean | undefined | undefined;
                        lang?: string | undefined | undefined;
                        url?: string | undefined | undefined;
                        createdUtc?: number | undefined | undefined;
                        bannerSize?: number[];
                        mobileBannerImage?: string | undefined | undefined;
                        userIsContributor?: boolean | undefined | undefined;
                        allowPredictionsTournament?: boolean | undefined | undefined;
                        iconSize?: number[];
                        headerSize?: number[];
                        wls?: number | undefined | undefined;
                        whitelistStatus?: string | undefined | undefined;
                        emojisCustomSize?: number[];
                    } | undefined;
                }): SubredditAboutResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about_edit */
        readonly subredditAboutEdit: {
            readonly name: "SubredditAboutEdit";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditAboutEditRequest";
                encode(message: SubredditAboutEditRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutEditRequest;
                fromJSON(object: any): SubredditAboutEditRequest;
                toJSON(message: SubredditAboutEditRequest): unknown;
                create(base?: {
                    created?: string;
                    location?: string;
                    subreddit?: string;
                }): SubredditAboutEditRequest;
                fromPartial(object: {
                    created?: string;
                    location?: string;
                    subreddit?: string;
                }): SubredditAboutEditRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditAboutEditResponse";
                encode(message: SubredditAboutEditResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutEditResponse;
                fromJSON(object: any): SubredditAboutEditResponse;
                toJSON(message: SubredditAboutEditResponse): unknown;
                create(base?: {
                    kind?: string | undefined | undefined;
                    data?: {
                        defaultSet?: boolean | undefined | undefined;
                        toxicityThresholdChatLevel?: number | undefined | undefined;
                        crowdControlChatLevel?: number | undefined | undefined;
                        restrictPosting?: boolean | undefined | undefined;
                        publicDescription?: string | undefined | undefined;
                        subredditId?: string | undefined | undefined;
                        allowImages?: boolean | undefined | undefined;
                        freeFormReports?: boolean | undefined | undefined;
                        domain?: string | undefined | undefined;
                        originalContentTagEnabled?: boolean | undefined | undefined;
                        showMedia?: boolean | undefined | undefined;
                        excludeBannedModqueue?: boolean | undefined | undefined;
                        shouldArchivePosts?: boolean | undefined | undefined;
                        submitText?: string | undefined | undefined;
                        spamLinks?: string | undefined | undefined;
                        title?: string | undefined | undefined;
                        collapseDeletedComments?: boolean | undefined | undefined;
                        wikimode?: string | undefined | undefined;
                        over18?: boolean | undefined | undefined;
                        allowVideos?: boolean | undefined | undefined;
                        allowGalleries?: boolean | undefined | undefined;
                        crowdControlLevel?: number | undefined | undefined;
                        banEvasionThreshold?: number | undefined | undefined;
                        crowdControlMode?: boolean | undefined | undefined;
                        welcomeMessageEnabled?: boolean | undefined | undefined;
                        welcomeMessageText?: string | undefined | undefined;
                        suggestedCommentSort?: boolean | undefined | undefined;
                        disableContributorRequests?: boolean | undefined | undefined;
                        allowTalks?: boolean | undefined | undefined;
                        description?: string | undefined | undefined;
                        submitLinkLabel?: string | undefined | undefined;
                        spoilersEnabled?: boolean | undefined | undefined;
                        allowPostCrossposts?: boolean | undefined | undefined;
                        spamComments?: string | undefined | undefined;
                        publicTraffic?: boolean | undefined | undefined;
                        restrictCommenting?: boolean | undefined | undefined;
                        allowPolls?: boolean | undefined | undefined;
                        commentContributionSettings?: {
                            allowedMediaTypes?: string[];
                        } | undefined;
                        submitTextLabel?: string | undefined | undefined;
                        commentScoreHideMins?: number | undefined | undefined;
                        allOriginalContent?: boolean | undefined | undefined;
                        spamSelfposts?: string | undefined | undefined;
                        keyColor?: string | undefined | undefined;
                        language?: string | undefined | undefined;
                        newPinnedPostPnsEnabled?: boolean | undefined | undefined;
                        hideAds?: boolean | undefined | undefined;
                        predictionLeaderboardEntryType?: number | undefined | undefined;
                        headerHoverText?: string | undefined | undefined;
                        wikiEditAge?: number | undefined | undefined;
                        allowChatPostCreation?: boolean | undefined | undefined;
                        allowPredictionContributors?: boolean | undefined | undefined;
                        allowDiscovery?: boolean | undefined | undefined;
                        acceptFollowers?: boolean | undefined | undefined;
                        crowdControlPostLevel?: number | undefined | undefined;
                        allowPredictionsTournament?: boolean | undefined | undefined;
                        wikiEditKarma?: number | undefined | undefined;
                        showMediaPreview?: boolean | undefined | undefined;
                        crowdControlFilter?: boolean | undefined | undefined;
                        subredditType?: string | undefined | undefined;
                        allowPredictions?: boolean | undefined | undefined;
                        userFlairPnsEnabled?: boolean | undefined | undefined;
                        contentOptions?: string | undefined | undefined;
                    } | undefined;
                }): SubredditAboutEditResponse;
                fromPartial(object: {
                    kind?: string | undefined | undefined;
                    data?: {
                        defaultSet?: boolean | undefined | undefined;
                        toxicityThresholdChatLevel?: number | undefined | undefined;
                        crowdControlChatLevel?: number | undefined | undefined;
                        restrictPosting?: boolean | undefined | undefined;
                        publicDescription?: string | undefined | undefined;
                        subredditId?: string | undefined | undefined;
                        allowImages?: boolean | undefined | undefined;
                        freeFormReports?: boolean | undefined | undefined;
                        domain?: string | undefined | undefined;
                        originalContentTagEnabled?: boolean | undefined | undefined;
                        showMedia?: boolean | undefined | undefined;
                        excludeBannedModqueue?: boolean | undefined | undefined;
                        shouldArchivePosts?: boolean | undefined | undefined;
                        submitText?: string | undefined | undefined;
                        spamLinks?: string | undefined | undefined;
                        title?: string | undefined | undefined;
                        collapseDeletedComments?: boolean | undefined | undefined;
                        wikimode?: string | undefined | undefined;
                        over18?: boolean | undefined | undefined;
                        allowVideos?: boolean | undefined | undefined;
                        allowGalleries?: boolean | undefined | undefined;
                        crowdControlLevel?: number | undefined | undefined;
                        banEvasionThreshold?: number | undefined | undefined;
                        crowdControlMode?: boolean | undefined | undefined;
                        welcomeMessageEnabled?: boolean | undefined | undefined;
                        welcomeMessageText?: string | undefined | undefined;
                        suggestedCommentSort?: boolean | undefined | undefined;
                        disableContributorRequests?: boolean | undefined | undefined;
                        allowTalks?: boolean | undefined | undefined;
                        description?: string | undefined | undefined;
                        submitLinkLabel?: string | undefined | undefined;
                        spoilersEnabled?: boolean | undefined | undefined;
                        allowPostCrossposts?: boolean | undefined | undefined;
                        spamComments?: string | undefined | undefined;
                        publicTraffic?: boolean | undefined | undefined;
                        restrictCommenting?: boolean | undefined | undefined;
                        allowPolls?: boolean | undefined | undefined;
                        commentContributionSettings?: {
                            allowedMediaTypes?: string[];
                        } | undefined;
                        submitTextLabel?: string | undefined | undefined;
                        commentScoreHideMins?: number | undefined | undefined;
                        allOriginalContent?: boolean | undefined | undefined;
                        spamSelfposts?: string | undefined | undefined;
                        keyColor?: string | undefined | undefined;
                        language?: string | undefined | undefined;
                        newPinnedPostPnsEnabled?: boolean | undefined | undefined;
                        hideAds?: boolean | undefined | undefined;
                        predictionLeaderboardEntryType?: number | undefined | undefined;
                        headerHoverText?: string | undefined | undefined;
                        wikiEditAge?: number | undefined | undefined;
                        allowChatPostCreation?: boolean | undefined | undefined;
                        allowPredictionContributors?: boolean | undefined | undefined;
                        allowDiscovery?: boolean | undefined | undefined;
                        acceptFollowers?: boolean | undefined | undefined;
                        crowdControlPostLevel?: number | undefined | undefined;
                        allowPredictionsTournament?: boolean | undefined | undefined;
                        wikiEditKarma?: number | undefined | undefined;
                        showMediaPreview?: boolean | undefined | undefined;
                        crowdControlFilter?: boolean | undefined | undefined;
                        subredditType?: string | undefined | undefined;
                        allowPredictions?: boolean | undefined | undefined;
                        userFlairPnsEnabled?: boolean | undefined | undefined;
                        contentOptions?: string | undefined | undefined;
                    } | undefined;
                }): SubredditAboutEditResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about_rules */
        readonly subredditAboutRules: {
            readonly name: "SubredditAboutRules";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSubredditRequest";
                encode(message: BasicSubredditRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSubredditRequest;
                fromJSON(object: any): BasicSubredditRequest;
                toJSON(message: BasicSubredditRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): BasicSubredditRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): BasicSubredditRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditAboutRulesResponse";
                encode(message: SubredditAboutRulesResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutRulesResponse;
                fromJSON(object: any): SubredditAboutRulesResponse;
                toJSON(message: SubredditAboutRulesResponse): unknown;
                create(base?: {
                    rules?: {
                        kind?: string | undefined | undefined;
                        description?: string | undefined | undefined;
                        shortName?: string | undefined | undefined;
                        violationReason?: string | undefined | undefined;
                        createdUtc?: number | undefined | undefined;
                        priority?: number | undefined | undefined;
                        descriptionHtml?: string | undefined | undefined;
                    }[];
                    siteRules?: string[];
                    siteRulesFlow?: {
                        reasonTextToShow?: string | undefined | undefined;
                        reasonText?: string | undefined | undefined;
                        nextStepHeader?: string | undefined | undefined;
                        nextStepReasons?: /*elided*/ any[];
                        complaintButtonText?: string | undefined | undefined;
                        complaintUrl?: string | undefined | undefined;
                        complaintPageTitle?: string | undefined | undefined;
                        fileComplaint?: boolean | undefined | undefined;
                        complaintPrompt?: string | undefined | undefined;
                        canWriteNotes?: boolean | undefined | undefined;
                        isAbuseOfReportButton?: boolean | undefined | undefined;
                        notesInputTitle?: string | undefined | undefined;
                        usernamesInputTitle?: string | undefined | undefined;
                        canSpecifyUsernames?: boolean | undefined | undefined;
                        requestCrisisSupport?: boolean | undefined | undefined;
                        oneUsername?: boolean | undefined | undefined;
                    }[];
                }): SubredditAboutRulesResponse;
                fromPartial(object: {
                    rules?: {
                        kind?: string | undefined | undefined;
                        description?: string | undefined | undefined;
                        shortName?: string | undefined | undefined;
                        violationReason?: string | undefined | undefined;
                        createdUtc?: number | undefined | undefined;
                        priority?: number | undefined | undefined;
                        descriptionHtml?: string | undefined | undefined;
                    }[];
                    siteRules?: string[];
                    siteRulesFlow?: {
                        reasonTextToShow?: string | undefined | undefined;
                        reasonText?: string | undefined | undefined;
                        nextStepHeader?: string | undefined | undefined;
                        nextStepReasons?: /*elided*/ any[];
                        complaintButtonText?: string | undefined | undefined;
                        complaintUrl?: string | undefined | undefined;
                        complaintPageTitle?: string | undefined | undefined;
                        fileComplaint?: boolean | undefined | undefined;
                        complaintPrompt?: string | undefined | undefined;
                        canWriteNotes?: boolean | undefined | undefined;
                        isAbuseOfReportButton?: boolean | undefined | undefined;
                        notesInputTitle?: string | undefined | undefined;
                        usernamesInputTitle?: string | undefined | undefined;
                        canSpecifyUsernames?: boolean | undefined | undefined;
                        requestCrisisSupport?: boolean | undefined | undefined;
                        oneUsername?: boolean | undefined | undefined;
                    }[];
                }): SubredditAboutRulesResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_r_\{subreddit\}_about_traffic */
        readonly subredditAboutTraffic: {
            readonly name: "SubredditAboutTraffic";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSubredditRequest";
                encode(message: BasicSubredditRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSubredditRequest;
                fromJSON(object: any): BasicSubredditRequest;
                toJSON(message: BasicSubredditRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): BasicSubredditRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): BasicSubredditRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditAboutTrafficResponse";
                encode(message: SubredditAboutTrafficResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAboutTrafficResponse;
                fromJSON(object: any): SubredditAboutTrafficResponse;
                toJSON(message: SubredditAboutTrafficResponse): unknown;
                create(base?: {
                    day?: {
                        values?: number[];
                    }[];
                    hour?: {
                        values?: number[];
                    }[];
                    month?: {
                        values?: number[];
                    }[];
                }): SubredditAboutTrafficResponse;
                fromPartial(object: {
                    day?: {
                        values?: number[];
                    }[];
                    hour?: {
                        values?: number[];
                    }[];
                    month?: {
                        values?: number[];
                    }[];
                }): SubredditAboutTrafficResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_sidebar */
        readonly sidebar: {
            readonly name: "Sidebar";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicSubredditRequest";
                encode(message: BasicSubredditRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicSubredditRequest;
                fromJSON(object: any): BasicSubredditRequest;
                toJSON(message: BasicSubredditRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): BasicSubredditRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): BasicSubredditRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.StringValue";
                encode(message: StringValue, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): StringValue;
                fromJSON(object: any): StringValue;
                toJSON(message: StringValue): unknown;
                create(base?: {
                    value?: string;
                }): StringValue;
                fromPartial(object: {
                    value?: string;
                }): StringValue;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_sticky */
        readonly sticky: {
            readonly name: "Sticky";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.StickyRequest";
                encode(message: StickyRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): StickyRequest;
                fromJSON(object: any): StickyRequest;
                toJSON(message: StickyRequest): unknown;
                create(base?: {
                    num?: number;
                    subreddit?: string;
                }): StickyRequest;
                fromPartial(object: {
                    num?: number;
                    subreddit?: string;
                }): StickyRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.StickyResponse";
                encode(message: StickyResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): StickyResponse;
                fromJSON(object: any): StickyResponse;
                toJSON(message: StickyResponse): unknown;
                create(base?: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        modhash?: string | undefined | undefined;
                        geoFilter?: string | undefined | undefined;
                        children?: {
                            kind?: string | undefined | undefined;
                            data?: {
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                userReports?: string[];
                                saved?: boolean | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                clicked?: boolean | undefined | undefined;
                                title?: string | undefined | undefined;
                                linkFlairRichtext?: string[];
                                subredditNamePrefixed?: string | undefined | undefined;
                                hidden?: boolean | undefined | undefined;
                                pwls?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                parentWhitelistStatus?: boolean | undefined | undefined;
                                hideScore?: boolean | undefined | undefined;
                                name?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                upvoteRatio?: number | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                ups?: number | undefined | undefined;
                                domain?: string | undefined | undefined;
                                mediaEmbed?: {
                                    content?: string | undefined | undefined;
                                    width?: number | undefined | undefined;
                                    height?: number | undefined | undefined;
                                    sandbox?: boolean | undefined | undefined;
                                    scrolling?: boolean | undefined | undefined;
                                    publicThumbnailUrl?: string | undefined | undefined;
                                } | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                authorFlairTemplateId?: string | undefined | undefined;
                                isOriginalContent?: boolean | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                secureMedia?: boolean | undefined | undefined;
                                isRedditMediaDomain?: boolean | undefined | undefined;
                                isMeta?: boolean | undefined | undefined;
                                category?: string | undefined | undefined;
                                secureMediaEmbed?: {
                                    content?: string | undefined | undefined;
                                    width?: number | undefined | undefined;
                                    height?: number | undefined | undefined;
                                    sandbox?: boolean | undefined | undefined;
                                    scrolling?: boolean | undefined | undefined;
                                    publicThumbnailUrl?: string | undefined | undefined;
                                } | undefined;
                                linkFlairText?: string | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                isCreatedFromAdsUi?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                previousVisits?: number[];
                                authorFlairRichtext?: string[];
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                contentCategories?: string | undefined | undefined;
                                isSelf?: boolean | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                created?: number | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                wls?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                allowLiveComments?: boolean | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                suggestedSort?: string | undefined | undefined;
                                bannedAtUtc?: number | undefined | undefined;
                                viewCount?: number | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                isCrosspostable?: boolean | undefined | undefined;
                                pinned?: boolean | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                awarders?: string[];
                                mediaOnly?: boolean | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                spoiler?: boolean | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                rteMode?: string | undefined | undefined;
                                visited?: boolean | undefined | undefined;
                                removedBy?: string | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                id?: string | undefined | undefined;
                                isRobotIndexable?: boolean | undefined | undefined;
                                numDuplicates?: number | undefined | undefined;
                                reportReasons?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                author?: string | undefined | undefined;
                                discussionType?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                media?: string | undefined | undefined;
                                contestMode?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                approved?: boolean | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                whitelistStatus?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                url?: string | undefined | undefined;
                                subredditSubscribers?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                numCrossposts?: number | undefined | undefined;
                                modReports?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                isVideo?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                    } | undefined;
                }): StickyResponse;
                fromPartial(object: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        modhash?: string | undefined | undefined;
                        geoFilter?: string | undefined | undefined;
                        children?: {
                            kind?: string | undefined | undefined;
                            data?: {
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                userReports?: string[];
                                saved?: boolean | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                clicked?: boolean | undefined | undefined;
                                title?: string | undefined | undefined;
                                linkFlairRichtext?: string[];
                                subredditNamePrefixed?: string | undefined | undefined;
                                hidden?: boolean | undefined | undefined;
                                pwls?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                parentWhitelistStatus?: boolean | undefined | undefined;
                                hideScore?: boolean | undefined | undefined;
                                name?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                upvoteRatio?: number | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                ups?: number | undefined | undefined;
                                domain?: string | undefined | undefined;
                                mediaEmbed?: {
                                    content?: string | undefined | undefined;
                                    width?: number | undefined | undefined;
                                    height?: number | undefined | undefined;
                                    sandbox?: boolean | undefined | undefined;
                                    scrolling?: boolean | undefined | undefined;
                                    publicThumbnailUrl?: string | undefined | undefined;
                                } | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                authorFlairTemplateId?: string | undefined | undefined;
                                isOriginalContent?: boolean | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                secureMedia?: boolean | undefined | undefined;
                                isRedditMediaDomain?: boolean | undefined | undefined;
                                isMeta?: boolean | undefined | undefined;
                                category?: string | undefined | undefined;
                                secureMediaEmbed?: {
                                    content?: string | undefined | undefined;
                                    width?: number | undefined | undefined;
                                    height?: number | undefined | undefined;
                                    sandbox?: boolean | undefined | undefined;
                                    scrolling?: boolean | undefined | undefined;
                                    publicThumbnailUrl?: string | undefined | undefined;
                                } | undefined;
                                linkFlairText?: string | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                isCreatedFromAdsUi?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                previousVisits?: number[];
                                authorFlairRichtext?: string[];
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                contentCategories?: string | undefined | undefined;
                                isSelf?: boolean | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                created?: number | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                wls?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                allowLiveComments?: boolean | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                suggestedSort?: string | undefined | undefined;
                                bannedAtUtc?: number | undefined | undefined;
                                viewCount?: number | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                isCrosspostable?: boolean | undefined | undefined;
                                pinned?: boolean | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                awarders?: string[];
                                mediaOnly?: boolean | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                spoiler?: boolean | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                rteMode?: string | undefined | undefined;
                                visited?: boolean | undefined | undefined;
                                removedBy?: string | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                id?: string | undefined | undefined;
                                isRobotIndexable?: boolean | undefined | undefined;
                                numDuplicates?: number | undefined | undefined;
                                reportReasons?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                author?: string | undefined | undefined;
                                discussionType?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                media?: string | undefined | undefined;
                                contestMode?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                approved?: boolean | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                whitelistStatus?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                url?: string | undefined | undefined;
                                subredditSubscribers?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                numCrossposts?: number | undefined | undefined;
                                modReports?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                isVideo?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                    } | undefined;
                }): StickyResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_subreddits_mine_\{where\} */
        readonly subredditsMineWhere: {
            readonly name: "SubredditsMineWhere";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicWhereRequest";
                encode(message: BasicWhereRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicWhereRequest;
                fromJSON(object: any): BasicWhereRequest;
                toJSON(message: BasicWhereRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    show?: string | undefined | undefined;
                    where?: string;
                }): BasicWhereRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    show?: string | undefined | undefined;
                    where?: string;
                }): BasicWhereRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.common.Listing";
                encode(message: Listing, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): Listing;
                fromJSON(object: any): Listing;
                toJSON(message: Listing): unknown;
                create(base?: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
                fromPartial(object: {
                    kind?: string;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        children?: {
                            kind?: string;
                            data?: {
                                allAwardings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                approved?: boolean | undefined | undefined;
                                approvedAtUtc?: number | undefined | undefined;
                                approvedBy?: string | undefined | undefined;
                                archived?: boolean | undefined | undefined;
                                associatedAward?: string | undefined | undefined;
                                author?: string | undefined | undefined;
                                authorFlairBackgroundColor?: string | undefined | undefined;
                                authorFlairCssClass?: string | undefined | undefined;
                                authorFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                authorFlairTemplateId?: string | undefined | undefined;
                                authorFlairText?: string | undefined | undefined;
                                authorFlairTextColor?: string | undefined | undefined;
                                authorFlairType?: string | undefined | undefined;
                                authorFullname?: string | undefined | undefined;
                                authorIsBlocked?: boolean | undefined | undefined;
                                authorPatreonFlair?: boolean | undefined | undefined;
                                authorPremium?: boolean | undefined | undefined;
                                awarders?: string[];
                                bannedAtUtc?: number | undefined | undefined;
                                bannedBy?: string | undefined | undefined;
                                body?: string | undefined | undefined;
                                bodyHtml?: string | undefined | undefined;
                                canGild?: boolean | undefined | undefined;
                                canModPost?: boolean | undefined | undefined;
                                collapsed?: boolean | undefined | undefined;
                                collapsedBecauseCrowdControl?: boolean | undefined | undefined;
                                collapsedReason?: string | undefined | undefined;
                                collapsedReasonCode?: string | undefined | undefined;
                                commentType?: string | undefined | undefined;
                                controversiality?: number | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                distinguished?: string | undefined | undefined;
                                downs?: number | undefined | undefined;
                                edited?: boolean | undefined | undefined;
                                gilded?: number | undefined | undefined;
                                gildings?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | undefined;
                                id?: string | undefined | undefined;
                                ignoreReports?: boolean | undefined | undefined;
                                isSubmitter?: boolean | undefined | undefined;
                                likes?: boolean | undefined | undefined;
                                linkId?: string | undefined | undefined;
                                locked?: boolean | undefined | undefined;
                                modNote?: string | undefined | undefined;
                                modReasonBy?: string | undefined | undefined;
                                modReasonTitle?: string | undefined | undefined;
                                name?: string | undefined | undefined;
                                noFollow?: boolean | undefined | undefined;
                                numReports?: number | undefined | undefined;
                                parentId?: string | undefined | undefined;
                                permalink?: string | undefined | undefined;
                                removalReason?: string | undefined | undefined;
                                removed?: boolean | undefined | undefined;
                                replies?: string | undefined | undefined;
                                reportReasons?: any[] | undefined;
                                rteMode?: string | undefined | undefined;
                                saved?: boolean | undefined | undefined;
                                score?: number | undefined | undefined;
                                scoreHidden?: boolean | undefined | undefined;
                                sendReplies?: boolean | undefined | undefined;
                                spam?: boolean | undefined | undefined;
                                stickied?: boolean | undefined | undefined;
                                subreddit?: string | undefined | undefined;
                                subredditId?: string | undefined | undefined;
                                subredditNamePrefixed?: string | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                topAwardedType?: string | undefined | undefined;
                                totalAwardsReceived?: number | undefined | undefined;
                                treatmentTags?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                }[];
                                unrepliableReason?: string | undefined | undefined;
                                ups?: number | undefined | undefined;
                                depth?: number | undefined | undefined;
                                linkTitle?: string | undefined | undefined;
                                linkAuthor?: string | undefined | undefined;
                                numComments?: number | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                linkPermalink?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                linkUrl?: string | undefined | undefined;
                                selftext?: string | undefined | undefined;
                                selftextHtml?: string | undefined | undefined;
                                thumbnail?: string | undefined | undefined;
                                thumbnailWidth?: number | undefined | undefined;
                                thumbnailHeight?: number | undefined | undefined;
                                title?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                modPermissions?: string[];
                                count?: number | undefined | undefined;
                                children?: any[] | undefined;
                                replyList?: /*elided*/ any | undefined;
                                hidden?: boolean | undefined | undefined;
                                linkFlairBackgroundColor?: string | undefined | undefined;
                                linkFlairCssClass?: string | undefined | undefined;
                                linkFlairRichtext?: {
                                    e?: string | undefined | undefined;
                                    t?: string | undefined | undefined;
                                    a?: string | undefined | undefined;
                                    u?: string | undefined | undefined;
                                }[];
                                linkFlairTemplateId?: string | undefined | undefined;
                                linkFlairText?: string | undefined | undefined;
                                linkFlairTextColor?: string | undefined | undefined;
                                linkFlairType?: string | undefined | undefined;
                                secureMedia?: {
                                    type?: string;
                                    oembed?: {
                                        type?: string;
                                        title?: string | undefined | undefined;
                                        providerName?: string | undefined | undefined;
                                        providerUrl?: string | undefined | undefined;
                                        version?: string;
                                        thumbnailWidth?: number | undefined | undefined;
                                        thumbnailHeight?: number | undefined | undefined;
                                        thumbnailUrl?: string | undefined | undefined;
                                        html?: string;
                                        height?: number | undefined | undefined;
                                        width?: number | undefined | undefined;
                                        authorUrl?: string | undefined | undefined;
                                        authorName?: string | undefined | undefined;
                                    } | undefined;
                                    redditVideo?: {
                                        bitrateKbps?: number | undefined | undefined;
                                        dashUrl?: string | undefined | undefined;
                                        duration?: number | undefined | undefined;
                                        fallbackUrl?: string | undefined | undefined;
                                        height?: number | undefined | undefined;
                                        hlsUrl?: string | undefined | undefined;
                                        isGif?: boolean | undefined | undefined;
                                        scrubberMediaUrl?: string | undefined | undefined;
                                        transcodingStatus?: string | undefined | undefined;
                                        width?: number | undefined | undefined;
                                    } | undefined;
                                } | undefined;
                                spoiler?: boolean;
                                modReports?: any[][];
                                userReports?: any[][];
                                removedBy?: string | undefined | undefined;
                                removedByCategory?: string | undefined | undefined;
                                gallery?: {
                                    url?: string;
                                    width?: number;
                                    height?: number;
                                    status?: import("../common/common_msg.js").GalleryMediaStatus;
                                }[];
                            } | undefined;
                        }[];
                        dist?: number | undefined | undefined;
                    } | undefined;
                }): Listing;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /**
         * https://www.reddit.com/dev/api#GET_subreddits_search
         * Make Wrapped
         */
        readonly subredditsSearch: {
            readonly name: "SubredditsSearch";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditsSearchRequest";
                encode(message: SubredditsSearchRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditsSearchRequest;
                fromJSON(object: any): SubredditsSearchRequest;
                toJSON(message: SubredditsSearchRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    q?: string;
                    searchQueryId?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    showUsers?: boolean | undefined | undefined;
                    sort?: string | undefined | undefined;
                    typeaheadActive?: boolean | undefined | undefined;
                }): SubredditsSearchRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    q?: string;
                    searchQueryId?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    showUsers?: boolean | undefined | undefined;
                    sort?: string | undefined | undefined;
                    typeaheadActive?: boolean | undefined | undefined;
                }): SubredditsSearchRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditsSearchResponse";
                encode(message: SubredditsSearchResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditsSearchResponse;
                fromJSON(object: any): SubredditsSearchResponse;
                toJSON(message: SubredditsSearchResponse): unknown;
                create(base?: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        geoFilter?: string | undefined | undefined;
                        children?: {
                            kind?: string | undefined | undefined;
                            data?: {
                                userFlairBackgroundColor?: string | undefined | undefined;
                                submitTextHtml?: string | undefined | undefined;
                                restrictPosting?: boolean | undefined | undefined;
                                userIsBanned?: boolean | undefined | undefined;
                                freeFormReports?: boolean | undefined | undefined;
                                wikiEnabled?: boolean | undefined | undefined;
                                userIsMuted?: boolean | undefined | undefined;
                                userCanFlairInSr?: boolean | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                headerImg?: string | undefined | undefined;
                                title?: string | undefined | undefined;
                                allowGalleries?: boolean | undefined | undefined;
                                iconSize?: number[];
                                primaryColor?: string | undefined | undefined;
                                activeUserCount?: number | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                displayNamePrefixed?: string | undefined | undefined;
                                accountsActive?: number | undefined | undefined;
                                publicTraffic?: boolean | undefined | undefined;
                                subscribers?: number | undefined | undefined;
                                userFlairRichtext?: string[];
                                videostreamLinksCount?: number | undefined | undefined;
                                name?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                hideAds?: boolean | undefined | undefined;
                                emojisEnabled?: boolean | undefined | undefined;
                                advertiserCategory?: string | undefined | undefined;
                                publicDescription?: string | undefined | undefined;
                                commentScoreHideMins?: number | undefined | undefined;
                                allowPredictions?: boolean | undefined | undefined;
                                userHasFavorited?: boolean | undefined | undefined;
                                userFlairTemplateId?: string | undefined | undefined;
                                communityIcon?: string | undefined | undefined;
                                bannerBackgroundImage?: string | undefined | undefined;
                                originalContentTagEnabled?: boolean | undefined | undefined;
                                communityReviewed?: boolean | undefined | undefined;
                                submitText?: string | undefined | undefined;
                                descriptionHtml?: string | undefined | undefined;
                                spoilersEnabled?: boolean | undefined | undefined;
                                commentContributionSettings?: {
                                    allowedMediaTypes?: string[];
                                } | undefined;
                                allowTalks?: boolean | undefined | undefined;
                                headerSize?: number[];
                                userFlairPosition?: string | undefined | undefined;
                                allOriginalContent?: boolean | undefined | undefined;
                                hasMenuWidget?: boolean | undefined | undefined;
                                isEnrolledInNewModmail?: boolean | undefined | undefined;
                                keyColor?: string | undefined | undefined;
                                canAssignUserFlair?: boolean | undefined | undefined;
                                created?: number | undefined | undefined;
                                wls?: number | undefined | undefined;
                                showMediaPreview?: boolean | undefined | undefined;
                                submissionType?: string | undefined | undefined;
                                userIsSubscriber?: boolean | undefined | undefined;
                                allowedMediaInComments?: string[];
                                allowVideogifs?: boolean | undefined | undefined;
                                shouldArchivePosts?: boolean | undefined | undefined;
                                userFlairType?: string | undefined | undefined;
                                allowPolls?: boolean | undefined | undefined;
                                collapseDeletedComments?: boolean | undefined | undefined;
                                emojisCustomSize?: number[];
                                publicDescriptionHtml?: string | undefined | undefined;
                                allowVideos?: boolean | undefined | undefined;
                                isCrosspostableSubreddit?: boolean | undefined | undefined;
                                notificationLevel?: string | undefined | undefined;
                                shouldShowMediaInCommentsSetting?: boolean | undefined | undefined;
                                canAssignLinkFlair?: boolean | undefined | undefined;
                                accountsActiveIsFuzzed?: boolean | undefined | undefined;
                                allowPredictionContributors?: boolean | undefined | undefined;
                                submitTextLabel?: string | undefined | undefined;
                                linkFlairPosition?: string | undefined | undefined;
                                userSrFlairEnabled?: boolean | undefined | undefined;
                                userFlairEnabledInSr?: boolean | undefined | undefined;
                                allowChatPostCreation?: boolean | undefined | undefined;
                                allowDiscovery?: boolean | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                userSrThemeEnabled?: boolean | undefined | undefined;
                                linkFlairEnabled?: boolean | undefined | undefined;
                                disableContributorRequests?: boolean | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                suggestedCommentSort?: string | undefined | undefined;
                                bannerImg?: string | undefined | undefined;
                                userFlairText?: string | undefined | undefined;
                                contentCategory?: string | undefined | undefined;
                                bannerBackgroundColor?: string | undefined | undefined;
                                showMedia?: boolean | undefined | undefined;
                                id?: string | undefined | undefined;
                                userIsModerator?: boolean | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                headerTitle?: string | undefined | undefined;
                                description?: string | undefined | undefined;
                                isChatPostFeatureEnabled?: boolean | undefined | undefined;
                                submitLinkLabel?: string | undefined | undefined;
                                userFlairTextColor?: string | undefined | undefined;
                                restrictCommenting?: boolean | undefined | undefined;
                                userFlairCssClass?: string | undefined | undefined;
                                allowImages?: boolean | undefined | undefined;
                                lang?: string | undefined | undefined;
                                whitelistStatus?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                bannerSize?: number[];
                                mobileBannerImage?: string | undefined | undefined;
                                userIsContributor?: boolean | undefined | undefined;
                                allowPredictionsTournament?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                    } | undefined;
                }): SubredditsSearchResponse;
                fromPartial(object: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        geoFilter?: string | undefined | undefined;
                        children?: {
                            kind?: string | undefined | undefined;
                            data?: {
                                userFlairBackgroundColor?: string | undefined | undefined;
                                submitTextHtml?: string | undefined | undefined;
                                restrictPosting?: boolean | undefined | undefined;
                                userIsBanned?: boolean | undefined | undefined;
                                freeFormReports?: boolean | undefined | undefined;
                                wikiEnabled?: boolean | undefined | undefined;
                                userIsMuted?: boolean | undefined | undefined;
                                userCanFlairInSr?: boolean | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                headerImg?: string | undefined | undefined;
                                title?: string | undefined | undefined;
                                allowGalleries?: boolean | undefined | undefined;
                                iconSize?: number[];
                                primaryColor?: string | undefined | undefined;
                                activeUserCount?: number | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                displayNamePrefixed?: string | undefined | undefined;
                                accountsActive?: number | undefined | undefined;
                                publicTraffic?: boolean | undefined | undefined;
                                subscribers?: number | undefined | undefined;
                                userFlairRichtext?: string[];
                                videostreamLinksCount?: number | undefined | undefined;
                                name?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                hideAds?: boolean | undefined | undefined;
                                emojisEnabled?: boolean | undefined | undefined;
                                advertiserCategory?: string | undefined | undefined;
                                publicDescription?: string | undefined | undefined;
                                commentScoreHideMins?: number | undefined | undefined;
                                allowPredictions?: boolean | undefined | undefined;
                                userHasFavorited?: boolean | undefined | undefined;
                                userFlairTemplateId?: string | undefined | undefined;
                                communityIcon?: string | undefined | undefined;
                                bannerBackgroundImage?: string | undefined | undefined;
                                originalContentTagEnabled?: boolean | undefined | undefined;
                                communityReviewed?: boolean | undefined | undefined;
                                submitText?: string | undefined | undefined;
                                descriptionHtml?: string | undefined | undefined;
                                spoilersEnabled?: boolean | undefined | undefined;
                                commentContributionSettings?: {
                                    allowedMediaTypes?: string[];
                                } | undefined;
                                allowTalks?: boolean | undefined | undefined;
                                headerSize?: number[];
                                userFlairPosition?: string | undefined | undefined;
                                allOriginalContent?: boolean | undefined | undefined;
                                hasMenuWidget?: boolean | undefined | undefined;
                                isEnrolledInNewModmail?: boolean | undefined | undefined;
                                keyColor?: string | undefined | undefined;
                                canAssignUserFlair?: boolean | undefined | undefined;
                                created?: number | undefined | undefined;
                                wls?: number | undefined | undefined;
                                showMediaPreview?: boolean | undefined | undefined;
                                submissionType?: string | undefined | undefined;
                                userIsSubscriber?: boolean | undefined | undefined;
                                allowedMediaInComments?: string[];
                                allowVideogifs?: boolean | undefined | undefined;
                                shouldArchivePosts?: boolean | undefined | undefined;
                                userFlairType?: string | undefined | undefined;
                                allowPolls?: boolean | undefined | undefined;
                                collapseDeletedComments?: boolean | undefined | undefined;
                                emojisCustomSize?: number[];
                                publicDescriptionHtml?: string | undefined | undefined;
                                allowVideos?: boolean | undefined | undefined;
                                isCrosspostableSubreddit?: boolean | undefined | undefined;
                                notificationLevel?: string | undefined | undefined;
                                shouldShowMediaInCommentsSetting?: boolean | undefined | undefined;
                                canAssignLinkFlair?: boolean | undefined | undefined;
                                accountsActiveIsFuzzed?: boolean | undefined | undefined;
                                allowPredictionContributors?: boolean | undefined | undefined;
                                submitTextLabel?: string | undefined | undefined;
                                linkFlairPosition?: string | undefined | undefined;
                                userSrFlairEnabled?: boolean | undefined | undefined;
                                userFlairEnabledInSr?: boolean | undefined | undefined;
                                allowChatPostCreation?: boolean | undefined | undefined;
                                allowDiscovery?: boolean | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                userSrThemeEnabled?: boolean | undefined | undefined;
                                linkFlairEnabled?: boolean | undefined | undefined;
                                disableContributorRequests?: boolean | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                suggestedCommentSort?: string | undefined | undefined;
                                bannerImg?: string | undefined | undefined;
                                userFlairText?: string | undefined | undefined;
                                contentCategory?: string | undefined | undefined;
                                bannerBackgroundColor?: string | undefined | undefined;
                                showMedia?: boolean | undefined | undefined;
                                id?: string | undefined | undefined;
                                userIsModerator?: boolean | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                headerTitle?: string | undefined | undefined;
                                description?: string | undefined | undefined;
                                isChatPostFeatureEnabled?: boolean | undefined | undefined;
                                submitLinkLabel?: string | undefined | undefined;
                                userFlairTextColor?: string | undefined | undefined;
                                restrictCommenting?: boolean | undefined | undefined;
                                userFlairCssClass?: string | undefined | undefined;
                                allowImages?: boolean | undefined | undefined;
                                lang?: string | undefined | undefined;
                                whitelistStatus?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                bannerSize?: number[];
                                mobileBannerImage?: string | undefined | undefined;
                                userIsContributor?: boolean | undefined | undefined;
                                allowPredictionsTournament?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                    } | undefined;
                }): SubredditsSearchResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_subreddits_\{where\} */
        readonly subredditsWhere: {
            readonly name: "SubredditsWhere";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicWhereRequest";
                encode(message: BasicWhereRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicWhereRequest;
                fromJSON(object: any): BasicWhereRequest;
                toJSON(message: BasicWhereRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    show?: string | undefined | undefined;
                    where?: string;
                }): BasicWhereRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    show?: string | undefined | undefined;
                    where?: string;
                }): BasicWhereRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditsSearchResponse";
                encode(message: SubredditsSearchResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditsSearchResponse;
                fromJSON(object: any): SubredditsSearchResponse;
                toJSON(message: SubredditsSearchResponse): unknown;
                create(base?: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        geoFilter?: string | undefined | undefined;
                        children?: {
                            kind?: string | undefined | undefined;
                            data?: {
                                userFlairBackgroundColor?: string | undefined | undefined;
                                submitTextHtml?: string | undefined | undefined;
                                restrictPosting?: boolean | undefined | undefined;
                                userIsBanned?: boolean | undefined | undefined;
                                freeFormReports?: boolean | undefined | undefined;
                                wikiEnabled?: boolean | undefined | undefined;
                                userIsMuted?: boolean | undefined | undefined;
                                userCanFlairInSr?: boolean | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                headerImg?: string | undefined | undefined;
                                title?: string | undefined | undefined;
                                allowGalleries?: boolean | undefined | undefined;
                                iconSize?: number[];
                                primaryColor?: string | undefined | undefined;
                                activeUserCount?: number | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                displayNamePrefixed?: string | undefined | undefined;
                                accountsActive?: number | undefined | undefined;
                                publicTraffic?: boolean | undefined | undefined;
                                subscribers?: number | undefined | undefined;
                                userFlairRichtext?: string[];
                                videostreamLinksCount?: number | undefined | undefined;
                                name?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                hideAds?: boolean | undefined | undefined;
                                emojisEnabled?: boolean | undefined | undefined;
                                advertiserCategory?: string | undefined | undefined;
                                publicDescription?: string | undefined | undefined;
                                commentScoreHideMins?: number | undefined | undefined;
                                allowPredictions?: boolean | undefined | undefined;
                                userHasFavorited?: boolean | undefined | undefined;
                                userFlairTemplateId?: string | undefined | undefined;
                                communityIcon?: string | undefined | undefined;
                                bannerBackgroundImage?: string | undefined | undefined;
                                originalContentTagEnabled?: boolean | undefined | undefined;
                                communityReviewed?: boolean | undefined | undefined;
                                submitText?: string | undefined | undefined;
                                descriptionHtml?: string | undefined | undefined;
                                spoilersEnabled?: boolean | undefined | undefined;
                                commentContributionSettings?: {
                                    allowedMediaTypes?: string[];
                                } | undefined;
                                allowTalks?: boolean | undefined | undefined;
                                headerSize?: number[];
                                userFlairPosition?: string | undefined | undefined;
                                allOriginalContent?: boolean | undefined | undefined;
                                hasMenuWidget?: boolean | undefined | undefined;
                                isEnrolledInNewModmail?: boolean | undefined | undefined;
                                keyColor?: string | undefined | undefined;
                                canAssignUserFlair?: boolean | undefined | undefined;
                                created?: number | undefined | undefined;
                                wls?: number | undefined | undefined;
                                showMediaPreview?: boolean | undefined | undefined;
                                submissionType?: string | undefined | undefined;
                                userIsSubscriber?: boolean | undefined | undefined;
                                allowedMediaInComments?: string[];
                                allowVideogifs?: boolean | undefined | undefined;
                                shouldArchivePosts?: boolean | undefined | undefined;
                                userFlairType?: string | undefined | undefined;
                                allowPolls?: boolean | undefined | undefined;
                                collapseDeletedComments?: boolean | undefined | undefined;
                                emojisCustomSize?: number[];
                                publicDescriptionHtml?: string | undefined | undefined;
                                allowVideos?: boolean | undefined | undefined;
                                isCrosspostableSubreddit?: boolean | undefined | undefined;
                                notificationLevel?: string | undefined | undefined;
                                shouldShowMediaInCommentsSetting?: boolean | undefined | undefined;
                                canAssignLinkFlair?: boolean | undefined | undefined;
                                accountsActiveIsFuzzed?: boolean | undefined | undefined;
                                allowPredictionContributors?: boolean | undefined | undefined;
                                submitTextLabel?: string | undefined | undefined;
                                linkFlairPosition?: string | undefined | undefined;
                                userSrFlairEnabled?: boolean | undefined | undefined;
                                userFlairEnabledInSr?: boolean | undefined | undefined;
                                allowChatPostCreation?: boolean | undefined | undefined;
                                allowDiscovery?: boolean | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                userSrThemeEnabled?: boolean | undefined | undefined;
                                linkFlairEnabled?: boolean | undefined | undefined;
                                disableContributorRequests?: boolean | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                suggestedCommentSort?: string | undefined | undefined;
                                bannerImg?: string | undefined | undefined;
                                userFlairText?: string | undefined | undefined;
                                contentCategory?: string | undefined | undefined;
                                bannerBackgroundColor?: string | undefined | undefined;
                                showMedia?: boolean | undefined | undefined;
                                id?: string | undefined | undefined;
                                userIsModerator?: boolean | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                headerTitle?: string | undefined | undefined;
                                description?: string | undefined | undefined;
                                isChatPostFeatureEnabled?: boolean | undefined | undefined;
                                submitLinkLabel?: string | undefined | undefined;
                                userFlairTextColor?: string | undefined | undefined;
                                restrictCommenting?: boolean | undefined | undefined;
                                userFlairCssClass?: string | undefined | undefined;
                                allowImages?: boolean | undefined | undefined;
                                lang?: string | undefined | undefined;
                                whitelistStatus?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                bannerSize?: number[];
                                mobileBannerImage?: string | undefined | undefined;
                                userIsContributor?: boolean | undefined | undefined;
                                allowPredictionsTournament?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                    } | undefined;
                }): SubredditsSearchResponse;
                fromPartial(object: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        geoFilter?: string | undefined | undefined;
                        children?: {
                            kind?: string | undefined | undefined;
                            data?: {
                                userFlairBackgroundColor?: string | undefined | undefined;
                                submitTextHtml?: string | undefined | undefined;
                                restrictPosting?: boolean | undefined | undefined;
                                userIsBanned?: boolean | undefined | undefined;
                                freeFormReports?: boolean | undefined | undefined;
                                wikiEnabled?: boolean | undefined | undefined;
                                userIsMuted?: boolean | undefined | undefined;
                                userCanFlairInSr?: boolean | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                headerImg?: string | undefined | undefined;
                                title?: string | undefined | undefined;
                                allowGalleries?: boolean | undefined | undefined;
                                iconSize?: number[];
                                primaryColor?: string | undefined | undefined;
                                activeUserCount?: number | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                displayNamePrefixed?: string | undefined | undefined;
                                accountsActive?: number | undefined | undefined;
                                publicTraffic?: boolean | undefined | undefined;
                                subscribers?: number | undefined | undefined;
                                userFlairRichtext?: string[];
                                videostreamLinksCount?: number | undefined | undefined;
                                name?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                hideAds?: boolean | undefined | undefined;
                                emojisEnabled?: boolean | undefined | undefined;
                                advertiserCategory?: string | undefined | undefined;
                                publicDescription?: string | undefined | undefined;
                                commentScoreHideMins?: number | undefined | undefined;
                                allowPredictions?: boolean | undefined | undefined;
                                userHasFavorited?: boolean | undefined | undefined;
                                userFlairTemplateId?: string | undefined | undefined;
                                communityIcon?: string | undefined | undefined;
                                bannerBackgroundImage?: string | undefined | undefined;
                                originalContentTagEnabled?: boolean | undefined | undefined;
                                communityReviewed?: boolean | undefined | undefined;
                                submitText?: string | undefined | undefined;
                                descriptionHtml?: string | undefined | undefined;
                                spoilersEnabled?: boolean | undefined | undefined;
                                commentContributionSettings?: {
                                    allowedMediaTypes?: string[];
                                } | undefined;
                                allowTalks?: boolean | undefined | undefined;
                                headerSize?: number[];
                                userFlairPosition?: string | undefined | undefined;
                                allOriginalContent?: boolean | undefined | undefined;
                                hasMenuWidget?: boolean | undefined | undefined;
                                isEnrolledInNewModmail?: boolean | undefined | undefined;
                                keyColor?: string | undefined | undefined;
                                canAssignUserFlair?: boolean | undefined | undefined;
                                created?: number | undefined | undefined;
                                wls?: number | undefined | undefined;
                                showMediaPreview?: boolean | undefined | undefined;
                                submissionType?: string | undefined | undefined;
                                userIsSubscriber?: boolean | undefined | undefined;
                                allowedMediaInComments?: string[];
                                allowVideogifs?: boolean | undefined | undefined;
                                shouldArchivePosts?: boolean | undefined | undefined;
                                userFlairType?: string | undefined | undefined;
                                allowPolls?: boolean | undefined | undefined;
                                collapseDeletedComments?: boolean | undefined | undefined;
                                emojisCustomSize?: number[];
                                publicDescriptionHtml?: string | undefined | undefined;
                                allowVideos?: boolean | undefined | undefined;
                                isCrosspostableSubreddit?: boolean | undefined | undefined;
                                notificationLevel?: string | undefined | undefined;
                                shouldShowMediaInCommentsSetting?: boolean | undefined | undefined;
                                canAssignLinkFlair?: boolean | undefined | undefined;
                                accountsActiveIsFuzzed?: boolean | undefined | undefined;
                                allowPredictionContributors?: boolean | undefined | undefined;
                                submitTextLabel?: string | undefined | undefined;
                                linkFlairPosition?: string | undefined | undefined;
                                userSrFlairEnabled?: boolean | undefined | undefined;
                                userFlairEnabledInSr?: boolean | undefined | undefined;
                                allowChatPostCreation?: boolean | undefined | undefined;
                                allowDiscovery?: boolean | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                userSrThemeEnabled?: boolean | undefined | undefined;
                                linkFlairEnabled?: boolean | undefined | undefined;
                                disableContributorRequests?: boolean | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                suggestedCommentSort?: string | undefined | undefined;
                                bannerImg?: string | undefined | undefined;
                                userFlairText?: string | undefined | undefined;
                                contentCategory?: string | undefined | undefined;
                                bannerBackgroundColor?: string | undefined | undefined;
                                showMedia?: boolean | undefined | undefined;
                                id?: string | undefined | undefined;
                                userIsModerator?: boolean | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                headerTitle?: string | undefined | undefined;
                                description?: string | undefined | undefined;
                                isChatPostFeatureEnabled?: boolean | undefined | undefined;
                                submitLinkLabel?: string | undefined | undefined;
                                userFlairTextColor?: string | undefined | undefined;
                                restrictCommenting?: boolean | undefined | undefined;
                                userFlairCssClass?: string | undefined | undefined;
                                allowImages?: boolean | undefined | undefined;
                                lang?: string | undefined | undefined;
                                whitelistStatus?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                bannerSize?: number[];
                                mobileBannerImage?: string | undefined | undefined;
                                userIsContributor?: boolean | undefined | undefined;
                                allowPredictionsTournament?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                    } | undefined;
                }): SubredditsSearchResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_users_search */
        readonly usersSearch: {
            readonly name: "UsersSearch";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.UsersSearchRequest";
                encode(message: UsersSearchRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): UsersSearchRequest;
                fromJSON(object: any): UsersSearchRequest;
                toJSON(message: UsersSearchRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    q?: string;
                    searchQueryId?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    sort?: string | undefined | undefined;
                    typeaheadActive?: boolean | undefined | undefined;
                }): UsersSearchRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    q?: string;
                    searchQueryId?: string | undefined | undefined;
                    show?: string | undefined | undefined;
                    sort?: string | undefined | undefined;
                    typeaheadActive?: boolean | undefined | undefined;
                }): UsersSearchRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.UserSearchResponse";
                encode(message: UserSearchResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): UserSearchResponse;
                fromJSON(object: any): UserSearchResponse;
                toJSON(message: UserSearchResponse): unknown;
                create(base?: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        modhash?: string | undefined | undefined;
                        geoFilter?: string | undefined | undefined;
                        children?: {
                            kind?: string | undefined | undefined;
                            data?: {
                                isEmployee?: boolean | undefined | undefined;
                                isFriend?: boolean | undefined | undefined;
                                snoovatarSize?: number[];
                                id?: string | undefined | undefined;
                                verified?: boolean | undefined | undefined;
                                isGold?: boolean | undefined | undefined;
                                isMod?: boolean | undefined | undefined;
                                hasVerifiedEmail?: boolean | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                hideFromRobots?: boolean | undefined | undefined;
                                linkKarma?: number | undefined | undefined;
                                acceptChats?: boolean | undefined | undefined;
                                isBlocked?: boolean | undefined | undefined;
                                prefShowSnoovatar?: boolean | undefined | undefined;
                                name?: string | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                snoovatarImg?: string | undefined | undefined;
                                commentKarma?: number | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                hasSubscribed?: boolean | undefined | undefined;
                                acceptPms?: boolean | undefined | undefined;
                                isSuspended?: boolean | undefined | undefined;
                                subreddit?: {
                                    defaultSet?: boolean | undefined | undefined;
                                    userIsContributor?: boolean | undefined | undefined;
                                    bannerImg?: string | undefined | undefined;
                                    allowedMediaInComments?: string[];
                                    userIsBanned?: boolean | undefined | undefined;
                                    freeFormReports?: boolean | undefined | undefined;
                                    communityIcon?: string | undefined | undefined;
                                    showMedia?: boolean | undefined | undefined;
                                    iconColor?: string | undefined | undefined;
                                    userIsMuted?: boolean | undefined | undefined;
                                    displayName?: string | undefined | undefined;
                                    headerImg?: string | undefined | undefined;
                                    title?: string | undefined | undefined;
                                    previousNames?: string[];
                                    over18?: boolean | undefined | undefined;
                                    iconSize?: number[];
                                    primaryColor?: string | undefined | undefined;
                                    iconImg?: string | undefined | undefined;
                                    description?: string | undefined | undefined;
                                    submitLinkLabel?: string | undefined | undefined;
                                    headerSize?: number[];
                                    restrictPosting?: boolean | undefined | undefined;
                                    restrictCommenting?: boolean | undefined | undefined;
                                    subscribers?: number | undefined | undefined;
                                    submitTextLabel?: string | undefined | undefined;
                                    isDefaultIcon?: boolean | undefined | undefined;
                                    linkFlairPosition?: string | undefined | undefined;
                                    displayNamePrefixed?: string | undefined | undefined;
                                    keyColor?: string | undefined | undefined;
                                    name?: string | undefined | undefined;
                                    isDefaultBanner?: boolean | undefined | undefined;
                                    url?: string | undefined | undefined;
                                    quarantine?: boolean | undefined | undefined;
                                    bannerSize?: number[];
                                    userIsModerator?: boolean | undefined | undefined;
                                    acceptFollowers?: boolean | undefined | undefined;
                                    publicDescription?: string | undefined | undefined;
                                    linkFlairEnabled?: boolean | undefined | undefined;
                                    disableContributorRequests?: boolean | undefined | undefined;
                                    subredditType?: string | undefined | undefined;
                                    userIsSubscriber?: boolean | undefined | undefined;
                                } | undefined;
                            } | undefined;
                        }[];
                        before?: string | undefined | undefined;
                    } | undefined;
                }): UserSearchResponse;
                fromPartial(object: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        modhash?: string | undefined | undefined;
                        geoFilter?: string | undefined | undefined;
                        children?: {
                            kind?: string | undefined | undefined;
                            data?: {
                                isEmployee?: boolean | undefined | undefined;
                                isFriend?: boolean | undefined | undefined;
                                snoovatarSize?: number[];
                                id?: string | undefined | undefined;
                                verified?: boolean | undefined | undefined;
                                isGold?: boolean | undefined | undefined;
                                isMod?: boolean | undefined | undefined;
                                hasVerifiedEmail?: boolean | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                hideFromRobots?: boolean | undefined | undefined;
                                linkKarma?: number | undefined | undefined;
                                acceptChats?: boolean | undefined | undefined;
                                isBlocked?: boolean | undefined | undefined;
                                prefShowSnoovatar?: boolean | undefined | undefined;
                                name?: string | undefined | undefined;
                                created?: number | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                snoovatarImg?: string | undefined | undefined;
                                commentKarma?: number | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                hasSubscribed?: boolean | undefined | undefined;
                                acceptPms?: boolean | undefined | undefined;
                                isSuspended?: boolean | undefined | undefined;
                                subreddit?: {
                                    defaultSet?: boolean | undefined | undefined;
                                    userIsContributor?: boolean | undefined | undefined;
                                    bannerImg?: string | undefined | undefined;
                                    allowedMediaInComments?: string[];
                                    userIsBanned?: boolean | undefined | undefined;
                                    freeFormReports?: boolean | undefined | undefined;
                                    communityIcon?: string | undefined | undefined;
                                    showMedia?: boolean | undefined | undefined;
                                    iconColor?: string | undefined | undefined;
                                    userIsMuted?: boolean | undefined | undefined;
                                    displayName?: string | undefined | undefined;
                                    headerImg?: string | undefined | undefined;
                                    title?: string | undefined | undefined;
                                    previousNames?: string[];
                                    over18?: boolean | undefined | undefined;
                                    iconSize?: number[];
                                    primaryColor?: string | undefined | undefined;
                                    iconImg?: string | undefined | undefined;
                                    description?: string | undefined | undefined;
                                    submitLinkLabel?: string | undefined | undefined;
                                    headerSize?: number[];
                                    restrictPosting?: boolean | undefined | undefined;
                                    restrictCommenting?: boolean | undefined | undefined;
                                    subscribers?: number | undefined | undefined;
                                    submitTextLabel?: string | undefined | undefined;
                                    isDefaultIcon?: boolean | undefined | undefined;
                                    linkFlairPosition?: string | undefined | undefined;
                                    displayNamePrefixed?: string | undefined | undefined;
                                    keyColor?: string | undefined | undefined;
                                    name?: string | undefined | undefined;
                                    isDefaultBanner?: boolean | undefined | undefined;
                                    url?: string | undefined | undefined;
                                    quarantine?: boolean | undefined | undefined;
                                    bannerSize?: number[];
                                    userIsModerator?: boolean | undefined | undefined;
                                    acceptFollowers?: boolean | undefined | undefined;
                                    publicDescription?: string | undefined | undefined;
                                    linkFlairEnabled?: boolean | undefined | undefined;
                                    disableContributorRequests?: boolean | undefined | undefined;
                                    subredditType?: string | undefined | undefined;
                                    userIsSubscriber?: boolean | undefined | undefined;
                                } | undefined;
                            } | undefined;
                        }[];
                        before?: string | undefined | undefined;
                    } | undefined;
                }): UserSearchResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /** https://www.reddit.com/dev/api#GET_users_\{where\} */
        readonly usersWhere: {
            readonly name: "UsersWhere";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.BasicWhereRequest";
                encode(message: BasicWhereRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BasicWhereRequest;
                fromJSON(object: any): BasicWhereRequest;
                toJSON(message: BasicWhereRequest): unknown;
                create(base?: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    show?: string | undefined | undefined;
                    where?: string;
                }): BasicWhereRequest;
                fromPartial(object: {
                    after?: string | undefined | undefined;
                    before?: string | undefined | undefined;
                    count?: number | undefined | undefined;
                    limit?: number | undefined | undefined;
                    show?: string | undefined | undefined;
                    where?: string;
                }): BasicWhereRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditsSearchResponse";
                encode(message: SubredditsSearchResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditsSearchResponse;
                fromJSON(object: any): SubredditsSearchResponse;
                toJSON(message: SubredditsSearchResponse): unknown;
                create(base?: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        geoFilter?: string | undefined | undefined;
                        children?: {
                            kind?: string | undefined | undefined;
                            data?: {
                                userFlairBackgroundColor?: string | undefined | undefined;
                                submitTextHtml?: string | undefined | undefined;
                                restrictPosting?: boolean | undefined | undefined;
                                userIsBanned?: boolean | undefined | undefined;
                                freeFormReports?: boolean | undefined | undefined;
                                wikiEnabled?: boolean | undefined | undefined;
                                userIsMuted?: boolean | undefined | undefined;
                                userCanFlairInSr?: boolean | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                headerImg?: string | undefined | undefined;
                                title?: string | undefined | undefined;
                                allowGalleries?: boolean | undefined | undefined;
                                iconSize?: number[];
                                primaryColor?: string | undefined | undefined;
                                activeUserCount?: number | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                displayNamePrefixed?: string | undefined | undefined;
                                accountsActive?: number | undefined | undefined;
                                publicTraffic?: boolean | undefined | undefined;
                                subscribers?: number | undefined | undefined;
                                userFlairRichtext?: string[];
                                videostreamLinksCount?: number | undefined | undefined;
                                name?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                hideAds?: boolean | undefined | undefined;
                                emojisEnabled?: boolean | undefined | undefined;
                                advertiserCategory?: string | undefined | undefined;
                                publicDescription?: string | undefined | undefined;
                                commentScoreHideMins?: number | undefined | undefined;
                                allowPredictions?: boolean | undefined | undefined;
                                userHasFavorited?: boolean | undefined | undefined;
                                userFlairTemplateId?: string | undefined | undefined;
                                communityIcon?: string | undefined | undefined;
                                bannerBackgroundImage?: string | undefined | undefined;
                                originalContentTagEnabled?: boolean | undefined | undefined;
                                communityReviewed?: boolean | undefined | undefined;
                                submitText?: string | undefined | undefined;
                                descriptionHtml?: string | undefined | undefined;
                                spoilersEnabled?: boolean | undefined | undefined;
                                commentContributionSettings?: {
                                    allowedMediaTypes?: string[];
                                } | undefined;
                                allowTalks?: boolean | undefined | undefined;
                                headerSize?: number[];
                                userFlairPosition?: string | undefined | undefined;
                                allOriginalContent?: boolean | undefined | undefined;
                                hasMenuWidget?: boolean | undefined | undefined;
                                isEnrolledInNewModmail?: boolean | undefined | undefined;
                                keyColor?: string | undefined | undefined;
                                canAssignUserFlair?: boolean | undefined | undefined;
                                created?: number | undefined | undefined;
                                wls?: number | undefined | undefined;
                                showMediaPreview?: boolean | undefined | undefined;
                                submissionType?: string | undefined | undefined;
                                userIsSubscriber?: boolean | undefined | undefined;
                                allowedMediaInComments?: string[];
                                allowVideogifs?: boolean | undefined | undefined;
                                shouldArchivePosts?: boolean | undefined | undefined;
                                userFlairType?: string | undefined | undefined;
                                allowPolls?: boolean | undefined | undefined;
                                collapseDeletedComments?: boolean | undefined | undefined;
                                emojisCustomSize?: number[];
                                publicDescriptionHtml?: string | undefined | undefined;
                                allowVideos?: boolean | undefined | undefined;
                                isCrosspostableSubreddit?: boolean | undefined | undefined;
                                notificationLevel?: string | undefined | undefined;
                                shouldShowMediaInCommentsSetting?: boolean | undefined | undefined;
                                canAssignLinkFlair?: boolean | undefined | undefined;
                                accountsActiveIsFuzzed?: boolean | undefined | undefined;
                                allowPredictionContributors?: boolean | undefined | undefined;
                                submitTextLabel?: string | undefined | undefined;
                                linkFlairPosition?: string | undefined | undefined;
                                userSrFlairEnabled?: boolean | undefined | undefined;
                                userFlairEnabledInSr?: boolean | undefined | undefined;
                                allowChatPostCreation?: boolean | undefined | undefined;
                                allowDiscovery?: boolean | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                userSrThemeEnabled?: boolean | undefined | undefined;
                                linkFlairEnabled?: boolean | undefined | undefined;
                                disableContributorRequests?: boolean | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                suggestedCommentSort?: string | undefined | undefined;
                                bannerImg?: string | undefined | undefined;
                                userFlairText?: string | undefined | undefined;
                                contentCategory?: string | undefined | undefined;
                                bannerBackgroundColor?: string | undefined | undefined;
                                showMedia?: boolean | undefined | undefined;
                                id?: string | undefined | undefined;
                                userIsModerator?: boolean | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                headerTitle?: string | undefined | undefined;
                                description?: string | undefined | undefined;
                                isChatPostFeatureEnabled?: boolean | undefined | undefined;
                                submitLinkLabel?: string | undefined | undefined;
                                userFlairTextColor?: string | undefined | undefined;
                                restrictCommenting?: boolean | undefined | undefined;
                                userFlairCssClass?: string | undefined | undefined;
                                allowImages?: boolean | undefined | undefined;
                                lang?: string | undefined | undefined;
                                whitelistStatus?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                bannerSize?: number[];
                                mobileBannerImage?: string | undefined | undefined;
                                userIsContributor?: boolean | undefined | undefined;
                                allowPredictionsTournament?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                    } | undefined;
                }): SubredditsSearchResponse;
                fromPartial(object: {
                    kind?: string | undefined | undefined;
                    data?: {
                        after?: string | undefined | undefined;
                        before?: string | undefined | undefined;
                        dist?: number | undefined | undefined;
                        geoFilter?: string | undefined | undefined;
                        children?: {
                            kind?: string | undefined | undefined;
                            data?: {
                                userFlairBackgroundColor?: string | undefined | undefined;
                                submitTextHtml?: string | undefined | undefined;
                                restrictPosting?: boolean | undefined | undefined;
                                userIsBanned?: boolean | undefined | undefined;
                                freeFormReports?: boolean | undefined | undefined;
                                wikiEnabled?: boolean | undefined | undefined;
                                userIsMuted?: boolean | undefined | undefined;
                                userCanFlairInSr?: boolean | undefined | undefined;
                                displayName?: string | undefined | undefined;
                                headerImg?: string | undefined | undefined;
                                title?: string | undefined | undefined;
                                allowGalleries?: boolean | undefined | undefined;
                                iconSize?: number[];
                                primaryColor?: string | undefined | undefined;
                                activeUserCount?: number | undefined | undefined;
                                iconImg?: string | undefined | undefined;
                                displayNamePrefixed?: string | undefined | undefined;
                                accountsActive?: number | undefined | undefined;
                                publicTraffic?: boolean | undefined | undefined;
                                subscribers?: number | undefined | undefined;
                                userFlairRichtext?: string[];
                                videostreamLinksCount?: number | undefined | undefined;
                                name?: string | undefined | undefined;
                                quarantine?: boolean | undefined | undefined;
                                hideAds?: boolean | undefined | undefined;
                                emojisEnabled?: boolean | undefined | undefined;
                                advertiserCategory?: string | undefined | undefined;
                                publicDescription?: string | undefined | undefined;
                                commentScoreHideMins?: number | undefined | undefined;
                                allowPredictions?: boolean | undefined | undefined;
                                userHasFavorited?: boolean | undefined | undefined;
                                userFlairTemplateId?: string | undefined | undefined;
                                communityIcon?: string | undefined | undefined;
                                bannerBackgroundImage?: string | undefined | undefined;
                                originalContentTagEnabled?: boolean | undefined | undefined;
                                communityReviewed?: boolean | undefined | undefined;
                                submitText?: string | undefined | undefined;
                                descriptionHtml?: string | undefined | undefined;
                                spoilersEnabled?: boolean | undefined | undefined;
                                commentContributionSettings?: {
                                    allowedMediaTypes?: string[];
                                } | undefined;
                                allowTalks?: boolean | undefined | undefined;
                                headerSize?: number[];
                                userFlairPosition?: string | undefined | undefined;
                                allOriginalContent?: boolean | undefined | undefined;
                                hasMenuWidget?: boolean | undefined | undefined;
                                isEnrolledInNewModmail?: boolean | undefined | undefined;
                                keyColor?: string | undefined | undefined;
                                canAssignUserFlair?: boolean | undefined | undefined;
                                created?: number | undefined | undefined;
                                wls?: number | undefined | undefined;
                                showMediaPreview?: boolean | undefined | undefined;
                                submissionType?: string | undefined | undefined;
                                userIsSubscriber?: boolean | undefined | undefined;
                                allowedMediaInComments?: string[];
                                allowVideogifs?: boolean | undefined | undefined;
                                shouldArchivePosts?: boolean | undefined | undefined;
                                userFlairType?: string | undefined | undefined;
                                allowPolls?: boolean | undefined | undefined;
                                collapseDeletedComments?: boolean | undefined | undefined;
                                emojisCustomSize?: number[];
                                publicDescriptionHtml?: string | undefined | undefined;
                                allowVideos?: boolean | undefined | undefined;
                                isCrosspostableSubreddit?: boolean | undefined | undefined;
                                notificationLevel?: string | undefined | undefined;
                                shouldShowMediaInCommentsSetting?: boolean | undefined | undefined;
                                canAssignLinkFlair?: boolean | undefined | undefined;
                                accountsActiveIsFuzzed?: boolean | undefined | undefined;
                                allowPredictionContributors?: boolean | undefined | undefined;
                                submitTextLabel?: string | undefined | undefined;
                                linkFlairPosition?: string | undefined | undefined;
                                userSrFlairEnabled?: boolean | undefined | undefined;
                                userFlairEnabledInSr?: boolean | undefined | undefined;
                                allowChatPostCreation?: boolean | undefined | undefined;
                                allowDiscovery?: boolean | undefined | undefined;
                                acceptFollowers?: boolean | undefined | undefined;
                                userSrThemeEnabled?: boolean | undefined | undefined;
                                linkFlairEnabled?: boolean | undefined | undefined;
                                disableContributorRequests?: boolean | undefined | undefined;
                                subredditType?: string | undefined | undefined;
                                suggestedCommentSort?: string | undefined | undefined;
                                bannerImg?: string | undefined | undefined;
                                userFlairText?: string | undefined | undefined;
                                contentCategory?: string | undefined | undefined;
                                bannerBackgroundColor?: string | undefined | undefined;
                                showMedia?: boolean | undefined | undefined;
                                id?: string | undefined | undefined;
                                userIsModerator?: boolean | undefined | undefined;
                                over18?: boolean | undefined | undefined;
                                headerTitle?: string | undefined | undefined;
                                description?: string | undefined | undefined;
                                isChatPostFeatureEnabled?: boolean | undefined | undefined;
                                submitLinkLabel?: string | undefined | undefined;
                                userFlairTextColor?: string | undefined | undefined;
                                restrictCommenting?: boolean | undefined | undefined;
                                userFlairCssClass?: string | undefined | undefined;
                                allowImages?: boolean | undefined | undefined;
                                lang?: string | undefined | undefined;
                                whitelistStatus?: string | undefined | undefined;
                                url?: string | undefined | undefined;
                                createdUtc?: number | undefined | undefined;
                                bannerSize?: number[];
                                mobileBannerImage?: string | undefined | undefined;
                                userIsContributor?: boolean | undefined | undefined;
                                allowPredictionsTournament?: boolean | undefined | undefined;
                            } | undefined;
                        }[];
                    } | undefined;
                }): SubredditsSearchResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /**
         * Add a removal reason to a subreddit.
         *
         * POST /api/v1/{subreddit}/removal_reasons
         */
        readonly subredditAddRemovalReason: {
            readonly name: "SubredditAddRemovalReason";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditAddRemovalReasonRequest";
                encode(message: SubredditAddRemovalReasonRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAddRemovalReasonRequest;
                fromJSON(object: any): SubredditAddRemovalReasonRequest;
                toJSON(message: SubredditAddRemovalReasonRequest): unknown;
                create(base?: {
                    subreddit?: string;
                    message?: string;
                    title?: string;
                }): SubredditAddRemovalReasonRequest;
                fromPartial(object: {
                    subreddit?: string;
                    message?: string;
                    title?: string;
                }): SubredditAddRemovalReasonRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditAddRemovalReasonResponse";
                encode(message: SubredditAddRemovalReasonResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditAddRemovalReasonResponse;
                fromJSON(object: any): SubredditAddRemovalReasonResponse;
                toJSON(message: SubredditAddRemovalReasonResponse): unknown;
                create(base?: {
                    id?: string;
                }): SubredditAddRemovalReasonResponse;
                fromPartial(object: {
                    id?: string;
                }): SubredditAddRemovalReasonResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
        /**
         * Get the list of subreddit's removal reasons.
         *
         * GET /api/v1/{subreddit}/removal_reasons
         */
        readonly subredditGetRemovalReasons: {
            readonly name: "SubredditGetRemovalReasons";
            readonly requestType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditGetRemovalReasonsRequest";
                encode(message: SubredditGetRemovalReasonsRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditGetRemovalReasonsRequest;
                fromJSON(object: any): SubredditGetRemovalReasonsRequest;
                toJSON(message: SubredditGetRemovalReasonsRequest): unknown;
                create(base?: {
                    subreddit?: string;
                }): SubredditGetRemovalReasonsRequest;
                fromPartial(object: {
                    subreddit?: string;
                }): SubredditGetRemovalReasonsRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.plugin.redditapi.subreddits.SubredditGetRemovalReasonsResponse";
                encode(message: SubredditGetRemovalReasonsResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SubredditGetRemovalReasonsResponse;
                fromJSON(object: any): SubredditGetRemovalReasonsResponse;
                toJSON(message: SubredditGetRemovalReasonsResponse): unknown;
                create(base?: {
                    data?: {
                        [x: string]: {
                            id?: string;
                            message?: string;
                            title?: string;
                        } | undefined;
                    };
                    order?: string[];
                }): SubredditGetRemovalReasonsResponse;
                fromPartial(object: {
                    data?: {
                        [x: string]: {
                            id?: string;
                            message?: string;
                            title?: string;
                        } | undefined;
                    };
                    order?: string[];
                }): SubredditGetRemovalReasonsResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly _unknownFields: {
                    readonly 480010: readonly [Uint8Array<ArrayBuffer>, Uint8Array<ArrayBuffer>];
                };
            };
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array, metadata?: Metadata): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=subreddits_svc.d.ts.map