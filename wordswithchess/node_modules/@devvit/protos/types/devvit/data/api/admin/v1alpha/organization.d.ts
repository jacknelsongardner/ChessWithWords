/**
 * #organization.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
export interface Organization {
    id: string;
    name: string;
    isInternal: boolean;
    contractEndDate?: Date | undefined;
}
export interface CreateOrganizationRequest {
    name: string;
    isInternal: boolean;
    contractEndDate?: Date | undefined;
}
export interface CreateOrganizationResponse {
    organization?: Organization | undefined;
}
export interface DeleteOrganizationRequest {
    id: string;
}
export interface DeleteOrganizationResponse {
    organization?: Organization | undefined;
}
export interface GetOrganizationByNameRequest {
    name: string;
}
export interface GetOrganizationByNameResponse {
    organization?: Organization | undefined;
}
export interface GetOrganizationByIdRequest {
    id: string;
}
export interface GetOrganizationByIdResponse {
    organization?: Organization | undefined;
}
export interface GetOrganizationsRequest {
}
export interface GetOrganizationsResponse {
    organizations: Organization[];
}
export declare const Organization: {
    $type: "devvit.data.api.admin.v1alpha.Organization";
    encode(message: Organization, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Organization;
    fromJSON(object: any): Organization;
    toJSON(message: Organization): unknown;
    create(base?: DeepPartial<Organization>): Organization;
    fromPartial(object: DeepPartial<Organization>): Organization;
};
export declare const CreateOrganizationRequest: {
    $type: "devvit.data.api.admin.v1alpha.CreateOrganizationRequest";
    encode(message: CreateOrganizationRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CreateOrganizationRequest;
    fromJSON(object: any): CreateOrganizationRequest;
    toJSON(message: CreateOrganizationRequest): unknown;
    create(base?: DeepPartial<CreateOrganizationRequest>): CreateOrganizationRequest;
    fromPartial(object: DeepPartial<CreateOrganizationRequest>): CreateOrganizationRequest;
};
export declare const CreateOrganizationResponse: {
    $type: "devvit.data.api.admin.v1alpha.CreateOrganizationResponse";
    encode(message: CreateOrganizationResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CreateOrganizationResponse;
    fromJSON(object: any): CreateOrganizationResponse;
    toJSON(message: CreateOrganizationResponse): unknown;
    create(base?: DeepPartial<CreateOrganizationResponse>): CreateOrganizationResponse;
    fromPartial(object: DeepPartial<CreateOrganizationResponse>): CreateOrganizationResponse;
};
export declare const DeleteOrganizationRequest: {
    $type: "devvit.data.api.admin.v1alpha.DeleteOrganizationRequest";
    encode(message: DeleteOrganizationRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DeleteOrganizationRequest;
    fromJSON(object: any): DeleteOrganizationRequest;
    toJSON(message: DeleteOrganizationRequest): unknown;
    create(base?: DeepPartial<DeleteOrganizationRequest>): DeleteOrganizationRequest;
    fromPartial(object: DeepPartial<DeleteOrganizationRequest>): DeleteOrganizationRequest;
};
export declare const DeleteOrganizationResponse: {
    $type: "devvit.data.api.admin.v1alpha.DeleteOrganizationResponse";
    encode(message: DeleteOrganizationResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DeleteOrganizationResponse;
    fromJSON(object: any): DeleteOrganizationResponse;
    toJSON(message: DeleteOrganizationResponse): unknown;
    create(base?: DeepPartial<DeleteOrganizationResponse>): DeleteOrganizationResponse;
    fromPartial(object: DeepPartial<DeleteOrganizationResponse>): DeleteOrganizationResponse;
};
export declare const GetOrganizationByNameRequest: {
    $type: "devvit.data.api.admin.v1alpha.GetOrganizationByNameRequest";
    encode(message: GetOrganizationByNameRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetOrganizationByNameRequest;
    fromJSON(object: any): GetOrganizationByNameRequest;
    toJSON(message: GetOrganizationByNameRequest): unknown;
    create(base?: DeepPartial<GetOrganizationByNameRequest>): GetOrganizationByNameRequest;
    fromPartial(object: DeepPartial<GetOrganizationByNameRequest>): GetOrganizationByNameRequest;
};
export declare const GetOrganizationByNameResponse: {
    $type: "devvit.data.api.admin.v1alpha.GetOrganizationByNameResponse";
    encode(message: GetOrganizationByNameResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetOrganizationByNameResponse;
    fromJSON(object: any): GetOrganizationByNameResponse;
    toJSON(message: GetOrganizationByNameResponse): unknown;
    create(base?: DeepPartial<GetOrganizationByNameResponse>): GetOrganizationByNameResponse;
    fromPartial(object: DeepPartial<GetOrganizationByNameResponse>): GetOrganizationByNameResponse;
};
export declare const GetOrganizationByIdRequest: {
    $type: "devvit.data.api.admin.v1alpha.GetOrganizationByIdRequest";
    encode(message: GetOrganizationByIdRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetOrganizationByIdRequest;
    fromJSON(object: any): GetOrganizationByIdRequest;
    toJSON(message: GetOrganizationByIdRequest): unknown;
    create(base?: DeepPartial<GetOrganizationByIdRequest>): GetOrganizationByIdRequest;
    fromPartial(object: DeepPartial<GetOrganizationByIdRequest>): GetOrganizationByIdRequest;
};
export declare const GetOrganizationByIdResponse: {
    $type: "devvit.data.api.admin.v1alpha.GetOrganizationByIdResponse";
    encode(message: GetOrganizationByIdResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetOrganizationByIdResponse;
    fromJSON(object: any): GetOrganizationByIdResponse;
    toJSON(message: GetOrganizationByIdResponse): unknown;
    create(base?: DeepPartial<GetOrganizationByIdResponse>): GetOrganizationByIdResponse;
    fromPartial(object: DeepPartial<GetOrganizationByIdResponse>): GetOrganizationByIdResponse;
};
export declare const GetOrganizationsRequest: {
    $type: "devvit.data.api.admin.v1alpha.GetOrganizationsRequest";
    encode(_: GetOrganizationsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetOrganizationsRequest;
    fromJSON(_: any): GetOrganizationsRequest;
    toJSON(_: GetOrganizationsRequest): unknown;
    create(base?: DeepPartial<GetOrganizationsRequest>): GetOrganizationsRequest;
    fromPartial(_: DeepPartial<GetOrganizationsRequest>): GetOrganizationsRequest;
};
export declare const GetOrganizationsResponse: {
    $type: "devvit.data.api.admin.v1alpha.GetOrganizationsResponse";
    encode(message: GetOrganizationsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetOrganizationsResponse;
    fromJSON(object: any): GetOrganizationsResponse;
    toJSON(message: GetOrganizationsResponse): unknown;
    create(base?: DeepPartial<GetOrganizationsResponse>): GetOrganizationsResponse;
    fromPartial(object: DeepPartial<GetOrganizationsResponse>): GetOrganizationsResponse;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=organization.d.ts.map