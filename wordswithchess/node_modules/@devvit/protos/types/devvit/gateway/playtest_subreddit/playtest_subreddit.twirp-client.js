import { CreatePlaytestSubredditRequest, CreatePlaytestSubredditResponse, } from './playtest_subreddit.js';
export class PlaytestSubredditClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.CreatePlaytestSubreddit.bind(this);
    }
    CreatePlaytestSubreddit(request) {
        const data = CreatePlaytestSubredditRequest.toJSON(request);
        const promise = this.rpc.request('devvit.gateway.playtest_subreddit.PlaytestSubreddit', 'CreatePlaytestSubreddit', 'application/json', data);
        return promise.then((data) => CreatePlaytestSubredditResponse.fromJSON(data));
    }
}
export class PlaytestSubredditClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.CreatePlaytestSubreddit.bind(this);
    }
    CreatePlaytestSubreddit(request) {
        const data = CreatePlaytestSubredditRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.gateway.playtest_subreddit.PlaytestSubreddit', 'CreatePlaytestSubreddit', 'application/protobuf', data);
        return promise.then((data) => CreatePlaytestSubredditResponse.decode(data));
    }
}
