import { CreatePlaytestSubredditRequest, CreatePlaytestSubredditResponse } from './playtest_subreddit.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface PlaytestSubredditClient {
    CreatePlaytestSubreddit(request: CreatePlaytestSubredditRequest): Promise<CreatePlaytestSubredditResponse>;
}
export declare class PlaytestSubredditClientJSON implements PlaytestSubredditClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    CreatePlaytestSubreddit(request: CreatePlaytestSubredditRequest): Promise<CreatePlaytestSubredditResponse>;
}
export declare class PlaytestSubredditClientProtobuf implements PlaytestSubredditClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    CreatePlaytestSubreddit(request: CreatePlaytestSubredditRequest): Promise<CreatePlaytestSubredditResponse>;
}
export {};
//# sourceMappingURL=playtest_subreddit.twirp-client.d.ts.map