/**
 * #share.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
/**
 * Effect emitted on intent to share URL. Displays a native share sheet on
 * mobile. Always share the current post (PDP) and use the post data entrypoint.
 * Effects are always untrusted.
 */
export interface WebViewShareEffect {
    /** User data as a string for ShareParam. Eg, `'abc'` or `'{"abc":"123"}'`. */
    userData?: string | undefined;
    /** Title of share sheet. */
    title?: string | undefined;
    /** Body of share sheet. */
    text?: string | undefined;
    /**
     * App icon URI (likely URL derived from
     * `LinkedBundle.assets['$devvit_icon.png']`). Eg,
     * `'https://csipc4--699ce78e-44a2-43c4-b581-3f58298a2711-0-0-9-webview.devvit.net/$devvit_icon.png'`.
     */
    appIconUri?: string | undefined;
}
export declare const WebViewShareEffect: {
    $type: "devvit.ui.effects.web_view.v1alpha.WebViewShareEffect";
    encode(message: WebViewShareEffect, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): WebViewShareEffect;
    fromJSON(object: any): WebViewShareEffect;
    toJSON(message: WebViewShareEffect): unknown;
    create(base?: DeepPartial<WebViewShareEffect>): WebViewShareEffect;
    fromPartial(object: DeepPartial<WebViewShareEffect>): WebViewShareEffect;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=share.d.ts.map