/**
 * #immersive_mode.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
export declare enum WebViewImmersiveMode {
    UNSPECIFIED = 0,
    INLINE_MODE = 1,
    IMMERSIVE_MODE = 2,
    UNRECOGNIZED = -1
}
export declare function webViewImmersiveModeFromJSON(object: any): WebViewImmersiveMode;
export declare function webViewImmersiveModeToJSON(object: WebViewImmersiveMode): number;
export interface WebViewImmersiveModeEffect {
    immersiveMode: WebViewImmersiveMode;
}
export declare const WebViewImmersiveModeEffect: {
    $type: "devvit.ui.effects.web_view.v1alpha.WebViewImmersiveModeEffect";
    encode(message: WebViewImmersiveModeEffect, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): WebViewImmersiveModeEffect;
    fromJSON(object: any): WebViewImmersiveModeEffect;
    toJSON(message: WebViewImmersiveModeEffect): unknown;
    create(base?: DeepPartial<WebViewImmersiveModeEffect>): WebViewImmersiveModeEffect;
    fromPartial(object: DeepPartial<WebViewImmersiveModeEffect>): WebViewImmersiveModeEffect;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=immersive_mode.d.ts.map