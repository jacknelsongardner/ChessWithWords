/**
 * #init.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
/** Response the init cli command expects to receive */
export interface InitAppResponse {
    /** One time use auth code to authenticate the CLI to Reddit */
    authCode?: string | undefined;
    /** Name of the app to be created */
    appName: string;
    /** Name of the template to be used to create the app */
    templateName?: string | undefined;
}
export declare const InitAppResponse: {
    $type: "devvit.cli.InitAppResponse";
    encode(message: InitAppResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): InitAppResponse;
    fromJSON(object: any): InitAppResponse;
    toJSON(message: InitAppResponse): unknown;
    create(base?: DeepPartial<InitAppResponse>): InitAppResponse;
    fromPartial(object: DeepPartial<InitAppResponse>): InitAppResponse;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=init.d.ts.map