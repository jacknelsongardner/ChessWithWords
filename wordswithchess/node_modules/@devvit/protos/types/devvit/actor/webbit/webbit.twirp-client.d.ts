import { WebbitHttpRequest, WebbitHttpResponse } from './webbit.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface WebbitServerClient {
    Request(request: WebbitHttpRequest): Promise<WebbitHttpResponse>;
}
export declare class WebbitServerClientJSON implements WebbitServerClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Request(request: WebbitHttpRequest): Promise<WebbitHttpResponse>;
}
export declare class WebbitServerClientProtobuf implements WebbitServerClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    Request(request: WebbitHttpRequest): Promise<WebbitHttpResponse>;
}
export {};
//# sourceMappingURL=webbit.twirp-client.d.ts.map