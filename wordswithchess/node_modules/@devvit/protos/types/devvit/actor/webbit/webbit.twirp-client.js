import { WebbitHttpRequest, WebbitHttpResponse } from './webbit.js';
export class WebbitServerClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.Request.bind(this);
    }
    Request(request) {
        const data = WebbitHttpRequest.toJSON(request);
        const promise = this.rpc.request('devvit.actor.webbit.WebbitServer', 'Request', 'application/json', data);
        return promise.then((data) => WebbitHttpResponse.fromJSON(data));
    }
}
export class WebbitServerClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.Request.bind(this);
    }
    Request(request) {
        const data = WebbitHttpRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.actor.webbit.WebbitServer', 'Request', 'application/protobuf', data);
        return promise.then((data) => WebbitHttpResponse.decode(data));
    }
}
