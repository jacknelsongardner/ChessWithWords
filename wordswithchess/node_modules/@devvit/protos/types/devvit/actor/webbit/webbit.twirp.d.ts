import { TwirpContext, TwirpServer } from 'twirp-ts';
import { WebbitHttpRequest, WebbitHttpResponse } from './webbit.js';
export interface WebbitServerTwirp<T extends TwirpContext = TwirpContext> {
    Request(ctx: T, request: WebbitHttpRequest): Promise<WebbitHttpResponse>;
}
export declare enum WebbitServerMethod {
    Request = "Request"
}
export declare const WebbitServerMethodList: WebbitServerMethod[];
export declare function createWebbitServerServer<T extends TwirpContext = TwirpContext>(service: WebbitServerTwirp<T>): TwirpServer<WebbitServerTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=webbit.twirp.d.ts.map