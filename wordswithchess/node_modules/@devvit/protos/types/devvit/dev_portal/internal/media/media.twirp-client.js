import { UpdateAssetStatusRequest, UpdateAssetStatusResponse, CheckForV1AssetAndBackfillRequest, } from './media.js';
import { Empty } from '../../../../google/protobuf/empty.js';
export class DevPortalMediaClientJSON {
    constructor(rpc) {
        this.rpc = rpc;
        this.UpdateAssetStatus.bind(this);
        this.CheckForV1AssetAndBackfill.bind(this);
    }
    UpdateAssetStatus(request) {
        const data = UpdateAssetStatusRequest.toJSON(request);
        const promise = this.rpc.request('devvit.dev_portal.internal.media.DevPortalMedia', 'UpdateAssetStatus', 'application/json', data);
        return promise.then((data) => UpdateAssetStatusResponse.fromJSON(data));
    }
    CheckForV1AssetAndBackfill(request) {
        const data = CheckForV1AssetAndBackfillRequest.toJSON(request);
        const promise = this.rpc.request('devvit.dev_portal.internal.media.DevPortalMedia', 'CheckForV1AssetAndBackfill', 'application/json', data);
        return promise.then((data) => Empty.fromJSON(data));
    }
}
export class DevPortalMediaClientProtobuf {
    constructor(rpc) {
        this.rpc = rpc;
        this.UpdateAssetStatus.bind(this);
        this.CheckForV1AssetAndBackfill.bind(this);
    }
    UpdateAssetStatus(request) {
        const data = UpdateAssetStatusRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.dev_portal.internal.media.DevPortalMedia', 'UpdateAssetStatus', 'application/protobuf', data);
        return promise.then((data) => UpdateAssetStatusResponse.decode(data));
    }
    CheckForV1AssetAndBackfill(request) {
        const data = CheckForV1AssetAndBackfillRequest.encode(request).finish();
        const promise = this.rpc.request('devvit.dev_portal.internal.media.DevPortalMedia', 'CheckForV1AssetAndBackfill', 'application/protobuf', data);
        return promise.then((data) => Empty.decode(data));
    }
}
