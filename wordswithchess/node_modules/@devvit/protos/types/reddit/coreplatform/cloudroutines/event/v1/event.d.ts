/**
 * #event.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import _m0 from "protobufjs/minimal.js";
import { WorkerPool_Source } from "../../workerpool/v1/workerpool.js";
export interface EventMessageMetadata {
    defaultTopic: string;
    publicationSourceWhitelist: WorkerPool_Source[];
}
export interface EventFieldMetadata {
    shardingIdentifier: boolean;
    shardingFieldPath: string;
}
export interface MessageRoute {
    /**
     * Cluster URI is optional. Defaults to the same cluster as the original protobuf message.
     * This will be mapped internally to the correct publisher.
     */
    clusterUri?: string | undefined;
    /** Topic is optional. Defaults to `dlq_{proto_full_name}`. */
    topic?: string | undefined;
    /** Partitioning value is optional. Defaults to the annotated field on the original protobuf message. */
    partitioningValue?: string | undefined;
}
export declare const EventMessageMetadata: {
    $type: "reddit.coreplatform.cloudroutines.event.v1.EventMessageMetadata";
    encode(message: EventMessageMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventMessageMetadata;
    fromJSON(object: any): EventMessageMetadata;
    toJSON(message: EventMessageMetadata): unknown;
    create(base?: DeepPartial<EventMessageMetadata>): EventMessageMetadata;
    fromPartial(object: DeepPartial<EventMessageMetadata>): EventMessageMetadata;
};
export declare const EventFieldMetadata: {
    $type: "reddit.coreplatform.cloudroutines.event.v1.EventFieldMetadata";
    encode(message: EventFieldMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventFieldMetadata;
    fromJSON(object: any): EventFieldMetadata;
    toJSON(message: EventFieldMetadata): unknown;
    create(base?: DeepPartial<EventFieldMetadata>): EventFieldMetadata;
    fromPartial(object: DeepPartial<EventFieldMetadata>): EventFieldMetadata;
};
export declare const MessageRoute: {
    $type: "reddit.coreplatform.cloudroutines.event.v1.MessageRoute";
    encode(message: MessageRoute, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MessageRoute;
    fromJSON(object: any): MessageRoute;
    toJSON(message: MessageRoute): unknown;
    create(base?: DeepPartial<MessageRoute>): MessageRoute;
    fromPartial(object: DeepPartial<MessageRoute>): MessageRoute;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=event.d.ts.map