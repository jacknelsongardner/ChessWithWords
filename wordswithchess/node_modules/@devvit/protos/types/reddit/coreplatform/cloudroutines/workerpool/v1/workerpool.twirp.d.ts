import { TwirpContext, TwirpServer } from 'twirp-ts';
import { RegisterWorkerPoolVersionRequest, RegisterWorkerPoolVersionResponse, ReplayCallbackWithWindowRequest, ReplayCallbackWithWindowResponse } from './workerpool.js';
export interface WorkerPoolServiceTwirp<T extends TwirpContext = TwirpContext> {
    RegisterWorkerPoolVersion(ctx: T, request: RegisterWorkerPoolVersionRequest): Promise<RegisterWorkerPoolVersionResponse>;
    ReplayCallbackWithWindow(ctx: T, request: ReplayCallbackWithWindowRequest): Promise<ReplayCallbackWithWindowResponse>;
}
export declare enum WorkerPoolServiceMethod {
    RegisterWorkerPoolVersion = "RegisterWorkerPoolVersion",
    ReplayCallbackWithWindow = "ReplayCallbackWithWindow"
}
export declare const WorkerPoolServiceMethodList: WorkerPoolServiceMethod[];
export declare function createWorkerPoolServiceServer<T extends TwirpContext = TwirpContext>(service: WorkerPoolServiceTwirp<T>): TwirpServer<WorkerPoolServiceTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse<import("http").IncomingMessage>>>, T>;
//# sourceMappingURL=workerpool.twirp.d.ts.map