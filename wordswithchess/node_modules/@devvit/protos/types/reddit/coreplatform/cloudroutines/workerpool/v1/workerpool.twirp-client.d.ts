import { RegisterWorkerPoolVersionRequest, RegisterWorkerPoolVersionResponse, ReplayCallbackWithWindowRequest, ReplayCallbackWithWindowResponse } from './workerpool.js';
interface Rpc {
    request(service: string, method: string, contentType: 'application/json' | 'application/protobuf', data: object | Uint8Array): Promise<object | Uint8Array>;
}
export interface WorkerPoolServiceClient {
    RegisterWorkerPoolVersion(request: RegisterWorkerPoolVersionRequest): Promise<RegisterWorkerPoolVersionResponse>;
    ReplayCallbackWithWindow(request: ReplayCallbackWithWindowRequest): Promise<ReplayCallbackWithWindowResponse>;
}
export declare class WorkerPoolServiceClientJSON implements WorkerPoolServiceClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    RegisterWorkerPoolVersion(request: RegisterWorkerPoolVersionRequest): Promise<RegisterWorkerPoolVersionResponse>;
    ReplayCallbackWithWindow(request: ReplayCallbackWithWindowRequest): Promise<ReplayCallbackWithWindowResponse>;
}
export declare class WorkerPoolServiceClientProtobuf implements WorkerPoolServiceClient {
    private readonly rpc;
    constructor(rpc: Rpc);
    RegisterWorkerPoolVersion(request: RegisterWorkerPoolVersionRequest): Promise<RegisterWorkerPoolVersionResponse>;
    ReplayCallbackWithWindow(request: ReplayCallbackWithWindowRequest): Promise<ReplayCallbackWithWindowResponse>;
}
export {};
//# sourceMappingURL=workerpool.twirp-client.d.ts.map