syntax = "proto3";

package reddit.coreplatform.comments.v1;

import "google/protobuf/descriptor.proto";
import "reddit/coreplatform/comments/v1/comments.proto";

option go_package = "github.snooguts.net/reddit/thing-api/go/grpc/comments/v1;comments";
option java_multiple_files = true;
option java_outer_classname = "CommentTreeProto";
option java_package = "com.reddit.coreplatform.api.comments.v1";

// Message representing a comment tree. This is not a traditional tree or graph.
// A CommentTree is represented via a list of Nodes.
// Each of which may contain a Comment Thing model, comment id, or a cursor to sub-segment of the tree.
message CommentTree {
  // Enum with possible max_comments/max_depth cached/precomputed comment tree sizes
  enum PrecomputedTreeView {
    // the default value is unspecified so usage of this enum must be explicit when supplying a value
    PRECOMPUTED_TREE_VIEW_UNSPECIFIED = 0;
    // logged out user - 200 max_comments / 5 max_depth
    PRECOMPUTED_TREE_VIEW_LOGGED_OUT = 1;
    // logged in user - 500 max_comments / 5 max_depth
    PRECOMPUTED_TREE_VIEW_DEFAULT = 2;
    // the user has Gold/Premium - 1500 max_comments / 7 max_depth
    PRECOMPUTED_TREE_VIEW_GOLD = 3;
    // user viewing on Shreddit - 10 max_comments / 2 max_depth
    PRECOMPUTED_TREE_VIEW_SHREDDIT = 4;
  }

  // Filters comments based on conditions when generating a CommentTree
  enum Filter {
    // No filtering will be applied
    FILTER_UNSPECIFIED = 0;

    // Only include comments which have a response by the OP or a collaborator
    FILTER_ANSWERED = 1;
    // Only include comments which do not have a response by the OP or a collaborator
    FILTER_UNANSWERED = 2;
  }

  // LoadMoreComments represents a pointer to a comment tree subset that was hidden because of size/depth limitations or content relevancy.
  message LoadMoreComments {
    // A reference to a subset of a CommentTree
    string cursor = 1;
    // The number of comments the cursor points to
    int32 num_comments = 2;
  }

  // Node represents a comment node (hydrated or non-hydrated) or a LoadMoreComments cursor.
  message Node {
    // The depth of this comment node from overall tree. This is the distance between
    // this node and the root node of the comment tree.
    int32 depth = 1;

    // The t1 Thing Comment id of the parent of this comment. If this comment
    // has no parent, then this field will be an empty string.
    string parent_id = 2;

    // The value of this (comment) Node.
    oneof value {
      // A fully hydrated Comment Thing model. This field will only be populated if the
      // client requested the tree nodes to be hydrated.
      Comment comment = 3;

      // A t1 Thing Comment id that represents a comment. This field is populated if *no* comment hydration was requested.
      string comment_id = 4;

      // A reference to a comment tree subset. This node is used to represent
      // a tree node for comments that are part of the tree but need to be loaded
      // separately due to response size limitations or content relevancy.
      LoadMoreComments load_more_comments = 5;
    }
  }

  // An ordered list of the nodes that this comment tree segment is comprised of
  repeated Node nodes = 1;
}
