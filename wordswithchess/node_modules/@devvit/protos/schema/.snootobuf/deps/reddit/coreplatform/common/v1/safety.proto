syntax = "proto3";

package reddit.coreplatform.common.v1;

import "reddit/coreplatform/api/metadata/v1/metadata.proto";

option go_package = "github.snooguts.net/reddit/thing-api/go/grpc/common/v1";
option java_multiple_files = true;
option java_outer_classname = "SafetyProto";
option java_package = "com.reddit.coreplatform.api.common.v1";

/* @exclude No documentation present when converted from Thrift to Proto */
enum CrowdControlLevel {
  /* @exclude No documentation present when converted from Thrift to Proto */
  CROWD_CONTROL_LEVEL_UNSPECIFIED = 0;

  /* @exclude No documentation present when converted from Thrift to Proto */
  CROWD_CONTROL_LEVEL_OFF = 1 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "OFF"
    ordinal: 0
  }];

  /* @exclude No documentation present when converted from Thrift to Proto */
  CROWD_CONTROL_LEVEL_LENIENT = 2 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "LENIENT"
    ordinal: 1
  }];

  /* @exclude No documentation present when converted from Thrift to Proto */
  CROWD_CONTROL_LEVEL_MEDIUM = 3 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "MEDIUM"
    ordinal: 2
  }];

  /* @exclude No documentation present when converted from Thrift to Proto */
  CROWD_CONTROL_LEVEL_STRICT = 4 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "STRICT"
    ordinal: 3
  }];
}

/* @exclude No documentation present when converted from Thrift to Proto */
enum HatefulContentThreshold {
  /* @exclude No documentation present when converted from Thrift to Proto */
  HATEFUL_CONTENT_THRESHOLD_UNSPECIFIED = 0;
  /* @exclude No documentation present when converted from Thrift to Proto */
  HATEFUL_CONTENT_THRESHOLD_OFF = 1 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "OFF"
    ordinal: 0
  }];
  /* @exclude No documentation present when converted from Thrift to Proto */
  HATEFUL_CONTENT_THRESHOLD_LENIENT = 2 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "LENIENT"
    ordinal: 1
  }];
  /* @exclude No documentation present when converted from Thrift to Proto */
  HATEFUL_CONTENT_THRESHOLD_MODERATE = 3 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "MODERATE"
    ordinal: 2
  }];
  /* @exclude No documentation present when converted from Thrift to Proto */
  HATEFUL_CONTENT_THRESHOLD_STRICT = 4 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "STRICT"
    ordinal: 3
  }];
}

// DEPRECATED, see reddit-service-ban-evasion FilterSettings
/* @exclude No documentation present when converted from Thrift to Proto */
enum BanEvasionThreshold {
  /* @exclude No documentation present when converted from Thrift to Proto */
  BAN_EVASION_THRESHOLD_UNSPECIFIED = 0 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "UNKNOWN"
    ordinal: 0
  }];

  /* @exclude No documentation present when converted from Thrift to Proto */
  BAN_EVASION_THRESHOLD_OFF = 1 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "OFF"
    ordinal: 1
  }];

  /* @exclude No documentation present when converted from Thrift to Proto */
  BAN_EVASION_THRESHOLD_LENIENT = 2 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "LENIENT"
    ordinal: 2
  }];

  /* @exclude No documentation present when converted from Thrift to Proto */
  BAN_EVASION_THRESHOLD_MODERATE = 3 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "MODERATE"
    ordinal: 3
  }];

  /* @exclude No documentation present when converted from Thrift to Proto */
  BAN_EVASION_THRESHOLD_STRICT = 4 [(reddit.coreplatform.api.metadata.v1.thrift_alias) = {
    name: "STRICT"
    ordinal: 4
  }];
}

/* @exclude No documentation present when converted from Thrift to Proto */
message SafetyVTag {
  /* @exclude No documentation present when converted from Thrift to Proto */
  map<string, double> versions = 1;
  /* @exclude No documentation present when converted from Thrift to Proto */
  optional double score = 2;
}

/* @exclude No documentation present when converted from Thrift to Proto */
message SafetyXTag {
  /* @exclude No documentation present when converted from Thrift to Proto */
  map<string, double> versions = 1;
  /* @exclude No documentation present when converted from Thrift to Proto */
  optional double score = 2;
}
