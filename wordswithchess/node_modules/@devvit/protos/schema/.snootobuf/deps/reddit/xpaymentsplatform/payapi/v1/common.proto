syntax = "proto3";

package reddit.xpaymentsplatform.payapi.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.snooguts.net/reddit/payments-api/api/xpaymentsplatform/payapipb/v1;payapipb";

message Product {
  string id = 1;
  ProductType product_type = 2;
  string name = 3;
  PaymentProvider payment_provider = 4;
  ProductPrice price = 5;
  ProductPrice base_price = 6;
  string external_id = 7;
  map<string, Image> images = 8;
  oneof metadata {
    string generic_metadata = 9;
    // RedditGoldMetadata reddit_gold = 10; // deprecated - please use Goldpack instead
    GoldpackMetadata goldpack = 11;
    DevvitMetadata devvit_metadata = 12;
    SubscriptionPlanMetadata subscription_plan = 13;
  }
  Environment environment = 20;
  string description = 21;
  string owner_id = 22;
  AccountingType accounting_type = 23;
  string terms_of_service = 24;
  ProductSubType product_subtype = 25;
}

message ProductPrice {
  int32 amount = 1; // integer price in currency's smallest units, e.g. 199 for $1.99
  Currency currency = 2;
  string display_amount = 3; // exact decimal price without any multipliers, e.g. 1.99 for $1.99
}

message CheckoutAction {
  CheckoutMode mode = 1;
  PaymentProvider payment_provider = 2;
  string client_token = 3;
}

message ClientInfo {
  string app_name = 1;
  string app_version = 2;
  string request_ip = 3;
  string country_code = 4;
  string subdivision_code = 5;
  string city_code = 6;
}

message Image {
  string url = 1;
  int32 width = 2;
  int32 height = 3;
}

message GoldpackMetadata {
  int32 gold_amount = 1;
}

message DevvitMetadata {
  map<string, string> metadata = 1;
}

message SubscriptionPlanMetadata {
  Duration billing_period = 1;
  bool renewable = 2;
  Duration trial_period = 3;
  Duration grace_period = 4;
  int32 tier = 5; // product specific but lower numbers mean lower tiers, so 0 -> 1 is upgrade and 1 -> 0 is downgrade
  repeated Subscription subscriptions = 6; // individual subscriptions provided by the plan
  string scope_id = 7; // unique identifier for the subreddits where the subscription is valid (T5_XXXXX)
}

enum AccountingType {
  ACCOUNT_TYPE_UNSPECIFIED = 0;
  ACCOUNT_TYPE_INSTANT = 1; // Used immediately as it is purchased.
  ACCOUNT_TYPE_DURABLE = 2; // It grants access indefinitely.
  ACCOUNT_TYPE_CONSUMABLE = 3; // User can use the good at any time in the future but it is gone once it's used.
  ACCOUNT_TYPE_VALID_FOR_1D = 4; // Consumed over a fixed period of time.
  ACCOUNT_TYPE_VALID_FOR_7D = 5;
  ACCOUNT_TYPE_VALID_FOR_30D = 6;
  ACCOUNT_TYPE_VALID_FOR_1Y = 7;
}

enum Environment {
  ENVIRONMENT_UNSPECIFIED = 0;
  ENVIRONMENT_SANDBOX = 1;
  ENVIRONMENT_PRODUCTION = 2;
}

enum PaymentProvider {
  PAYMENT_PROVIDER_UNSPECIFIED = 0;
  PAYMENT_PROVIDER_STRIPE = 1;
  PAYMENT_PROVIDER_PAYPAL = 2;
  PAYMENT_PROVIDER_GOOGLE_INAPP = 3;
  PAYMENT_PROVIDER_APPLE_INAPP = 4;
  PAYMENT_PROVIDER_REDDIT_GOLD_PROVIDER = 5;
}

enum CallerID {
  CALLER_ID_UNSPECIFIED = 0;
  CALLER_ID_GQL = 1;
  CALLER_ID_DATA_DELETION_PIPELINE = 2;
  CALLER_ID_ECON_BE_AWARDS = 3;
  CALLER_ID_DEV_PLATFORM = 4;
  CALLER_ID_DEV_PLATFORM_PROXY = 5;
  CALLER_ID_GUIDES = 6;
  CALLER_ID_EVEREST = 7;
  CALLER_ID_ADMIN_PANEL = 8;
}

enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_NEW = 1;
  ORDER_STATUS_CREATED = 2;
  ORDER_STATUS_PAID = 3;
  ORDER_STATUS_DELIVERED = 4;
  ORDER_STATUS_CANCELED = 5;
  ORDER_STATUS_REVERTED = 6;
  ORDER_STATUS_ACTIVE = 7;
}

enum OrderType {
  ORDER_TYPE_UNSPECIFIED = 0;
  ORDER_TYPE_ONE_TIME = 1;
  ORDER_TYPE_SUBSCRIPTION = 2;
}

enum StatusReason {
  STATUS_REASON_UNSPECIFIED = 0;

  STATUS_REASON_REFUND_REDDIT_ADMIN = 1;
  STATUS_REASON_REFUND_PAYMENT_PLATFORM_INTERNAL = 2;
  STATUS_REASON_REFUND_PRODUCT_OWNER = 3;

  STATUS_REASON_CHARGEBACK = 4;

  STATUS_REASON_EXPIRED_INTERNAL_ERROR = 5;
  STATUS_REASON_EXPIRED_NOT_PAID = 6;
  STATUS_REASON_EXPIRED_NOT_DELIVERED = 7;

  STATUS_REASON_VALIDATION_FAILED = 8;

  // When Devvit integration trigger an error
  STATUS_REASON_INTERNAL_ERROR_DEVVIT = 9;
  // When Devvit integration reject the order
  STATUS_REASON_REJECTED_BY_DEVVIT = 10;

  // When the refund is due to content being taken down (e.g. a user marks their content as NSFW)
  STATUS_REFUND_CONTENT_TAKEDOWN = 11;

  // When a subscription is revoked by a Reddit Admin
  SUBSCRIPTION_REVOCATION_REQUEST_BY_REDDIT_ADMIN = 12;
}

enum CheckoutMode {
  CHECKOUT_MODE_UNSPECIFIED = 0;
  CHECKOUT_MODE_CLIENT_SIDE = 1;
  CHECKOUT_MODE_CLIENT_SIDE_REDIRECT = 2;
  CHECKOUT_MODE_SERVER_SIDE = 3;
}

enum ProductType {
  PRODUCT_TYPE_UNSPECIFIED = 0;
  PRODUCT_TYPE_REDDIT_GOLD = 1; // deprecated - please use PRODUCT_TYPE_GOLDPACK instead
  PRODUCT_TYPE_AWARD = 2;
  PRODUCT_TYPE_DEV_PLATFORM = 3;
  PRODUCT_TYPE_PREMIUM_SUBSCRIPTION = 4;
  PRODUCT_TYPE_GOLDPACK = 5;
  PRODUCT_TYPE_COMMUNITY_SUBSCRIPTION = 6;
  PRODUCT_TYPE_GOLD_DEPOSIT = 7;
}

enum ProductSubType {
  PRODUCT_SUBTYPE_UNSPECIFIED = 0;
  PRODUCT_SUBTYPE_MOD_AWARD = 1;
  PRODUCT_SUBTYPE_GIFT_SUBSCRIPTION = 2;
}

enum Currency {
  CURRENCY_UNSPECIFIED = 0;

  AED = 1; // United Arab Emirates dirham
  AFN = 2; // Afghan afghani
  ALL = 3; // Albanian lek
  AMD = 4; // Armenian dram
  ANG = 5; // Netherlands Antillean guilder
  AOA = 6; // Angolan kwanza
  ARS = 7; // Argentine peso
  AUD = 8; // Australian dollar
  AWG = 9; // Aruban florin
  AZN = 10; // Azerbaijani manat
  BAM = 11; // Bosnia and Herzegovina convertible mark
  BBD = 12; // Barbados dollar
  BDT = 13; // Bangladeshi taka
  BGN = 14; // Bulgarian lev
  BHD = 15; // Bahraini dinar
  BIF = 16; // Burundian franc
  BMD = 17; // Bermudian dollar
  BND = 18; // Brunei dollar
  BOB = 19; // Boliviano
  BOV = 20; // Bolivian Mvdol (funds code)
  BRL = 21; // Brazilian real
  BSD = 22; // Bahamian dollar
  BTN = 23; // Bhutanese ngultrum
  BWP = 24; // Botswana pula
  BYN = 25; // Belarusian ruble
  BZD = 26; // Belize dollar
  CAD = 27; // Canadian dollar
  CDF = 28; // Congolese franc
  CHE = 29; // WIR euro (complementary currency)
  CHF = 30; // Swiss franc
  CHW = 31; // WIR franc (complementary currency)
  CLF = 32; // Unidad de Fomento (funds code)
  CLP = 33; // Chilean peso
  CNY = 34; // Chinese yuan
  COP = 35; // Colombian peso
  COU = 36; // Unidad de Valor Real (UVR) (funds code)
  CRC = 37; // Costa Rican colon
  CUC = 38; // Cuban convertible peso
  CUP = 39; // Cuban peso
  CVE = 40; // Cape Verdean escudo
  CZK = 41; // Czech koruna
  DJF = 42; // Djiboutian franc
  DKK = 43; // Danish krone
  DOP = 44; // Dominican peso
  DZD = 45; // Algerian dinar
  EGP = 46; // Egyptian pound
  ERN = 47; // Eritrean nakfa
  ETB = 48; // Ethiopian birr
  EUR = 49; // Euro
  FJD = 50; // Fiji dollar
  FKP = 51; // Falkland Islands pound
  GBP = 52; // Pound sterling
  GEL = 53; // Georgian lari
  GHS = 54; // Ghanaian cedi
  GIP = 55; // Gibraltar pound
  GMD = 56; // Gambian dalasi
  GNF = 57; // Guinean franc
  GTQ = 58; // Guatemalan quetzal
  GYD = 59; // Guyanese dollar
  HKD = 60; // Hong Kong dollar
  HNL = 61; // Honduran lempira
  HRK = 62; // Croatian kuna
  HTG = 63; // Haitian gourde
  HUF = 64; // Hungarian forint
  IDR = 65; // Indonesian rupiah
  ILS = 66; // Israeli new shekel
  INR = 67; // Indian rupee
  IQD = 68; // Iraqi dinar
  IRR = 69; // Iranian rial
  ISK = 70; // Icelandic krona
  JMD = 71; // Jamaican dollar
  JOD = 72; // Jordanian dinar
  JPY = 73; // Japanese yen
  KES = 74; // Kenyan shilling
  KGS = 75; // Kyrgyzstani som
  KHR = 76; // Cambodian riel
  KMF = 77; // Comoro franc
  KPW = 78; // North Korean won
  KRW = 79; // South Korean won
  KWD = 80; // Kuwaiti dinar
  KYD = 81; // Cayman Islands dollar
  KZT = 82; // Kazakhstani tenge
  LAK = 83; // Lao kip
  LBP = 84; // Lebanese pound
  LKR = 85; // Sri Lankan rupee
  LRD = 86; // Liberian dollar
  LSL = 87; // Lesotho loti
  LYD = 88; // Libyan dinar
  MAD = 89; // Moroccan dirham
  MDL = 90; // Moldovan leu
  MGA = 91; // Malagasy ariary
  MKD = 92; // Macedonian denar
  MMK = 93; // Myanmar kyat
  MNT = 94; // Mongolian togrog
  MOP = 95; // Macanese pataca
  MRU = 96; // Mauritanian ouguiya
  MUR = 97; // Mauritian rupee
  MVR = 98; // Maldivian rufiyaa
  MWK = 99; // Malawian kwacha
  MXN = 100; // Mexican peso
  MXV = 101; // Mexican Unidad de Inversion (UDI) (funds code)
  MYR = 102; // Malaysian ringgit
  MZN = 103; // Mozambican metical
  NAD = 104; // Namibian dollar
  NGN = 105; // Nigerian naira
  NIO = 106; // Nicaraguan cordoba
  NOK = 107; // Norwegian krone
  NPR = 108; // Nepalese rupee
  NZD = 109; // New Zealand dollar
  OMR = 110; // Omani rial
  PAB = 111; // Panamanian balboa
  PEN = 112; // Peruvian sol
  PGK = 113; // Papua New Guinean kina
  PHP = 114; // Philippine peso
  PKR = 115; // Pakistani rupee
  PLN = 116; // Polish zloty
  PYG = 117; // Paraguayan guarani
  QAR = 118; // Qatari riyal
  RON = 119; // Romanian leu
  RSD = 120; // Serbian dinar
  RUB = 121; // Russian ruble
  RWF = 122; // Rwandan franc
  SAR = 123; // Saudi riyal
  SBD = 124; // Solomon Islands dollar
  SCR = 125; // Seychelles rupee
  SDG = 126; // Sudanese pound
  SEK = 127; // Swedish krona/kronor
  SGD = 128; // Singapore dollar
  SHP = 129; // Saint Helena pound
  SLL = 130; // Sierra Leonean leone
  SOS = 131; // Somali shilling
  SRD = 132; // Surinamese dollar
  SSP = 133; // South Sudanese pound
  STN = 134; // Sao Tome and Principe dobra
  SVC = 135; // Salvadoran colon
  SYP = 136; // Syrian pound
  SZL = 137; // Swazi lilangeni
  THB = 138; // Thai baht
  TJS = 139; // Tajikistani somoni
  TMT = 140; // Turkmenistan manat
  TND = 141; // Tunisian dinar
  TOP = 142; // Tongan pa anga
  TRY = 143; // Turkish lira
  TTD = 144; // Trinidad and Tobago dollar
  TWD = 145; // New Taiwan dollar
  TZS = 146; // Tanzanian shilling
  UAH = 147; // Ukrainian hryvnia
  UGX = 148; // Ugandan shilling
  USD = 149; // United States dollar
  USN = 150; // United States dollar (next day) (funds code)
  UYI = 151; // Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)
  UYU = 152; // Uruguayan peso
  UYW = 153; // Unidad previsional
  UZS = 154; // Uzbekistan som
  VES = 155; // Venezuelan bolivar soberano
  VND = 156; // Vietnamese dong
  VUV = 157; // Vanuatu vatu
  WST = 158; // Samoan tala
  XAF = 159; // CFA franc BEAC
  XAG = 160; // Silver (one troy ounce)
  XAU = 161; // Gold (one troy ounce)
  XBA = 162; // European Composite Unit (EURCO) (bond market unit)
  XBB = 163; // European Monetary Unit (E.M.U.-6) (bond market unit)
  XBC = 164; // European Unit of Account 9 (E.U.A.-9) (bond market unit)
  XBD = 165; // European Unit of Account 17 (E.U.A.-17) (bond market unit)
  XCD = 166; // East Caribbean dollar
  XDR = 167; // Special drawing rights
  XOF = 168; // CFA franc BCEAO
  XPD = 169; // Palladium (one troy ounce)
  XPF = 170; // CFP franc (franc Pacifique)
  XPT = 171; // Platinum (one troy ounce)
  XSU = 172; // SUCRE
  XUA = 173; // ADB Unit of Account
  YER = 174; // Yemeni rial
  ZAR = 175; // South African rand
  ZMW = 176; // Zambian kwacha
  ZWL = 177; // Zimbabwean dollar

  GOLD = 200; // Reddit internal currency
}

message PageInfo {
  string start_cursor = 1; // if empty, start from the first page
  int32 page_size = 2;
  bool has_next_page = 3;
}

message Duration {
  uint32 amount = 1;
  DurationUnit unit = 2;
}

message Subscription {
  SubscriptionFeature feature = 1; // Reddit feature the subscription unlocks
  uint32 max_scopes = 2; // for scoped features, limits the number of individual scopes. 0 for global/unbounded
}

enum SubscriptionFeature {
  SUBSCRIPTION_FEATURE_UNSPECIFIED = 0;
  PREMIUM = 1;
  COMMUNITY = 2;
}

enum DurationUnit {
  DURATION_UNIT_UNSPECIFIED = 0;
  DAY = 1;
  MONTH = 2;
  YEAR = 3;
  WEEK = 4;
  MINUTE = 5;
}

message OrderItem {
  Product product = 1; // "Product.price" is the checkout_price for the product
  ProductPrice checkout_price = 2;
  string seller_id = 3; // Seller's t2_id for the product
  map<string, string> checkout_metadata = 4; // Metadata recorded at checkout for the product
}

message Order {
  string id = 1;
  OrderStatus status = 2;
  OrderType type = 12;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
  repeated OrderItem items = 5;
  CheckoutAction checkout_action = 6;
  StatusReason status_reason = 7;
  Environment environment = 8;
  string seller_id = 9;
  string buyer_id = 10;
  map<string, string> metadata = 11; // Recorded at order creation
}

enum TransactionsView {
  TRANSACTIONS_VIEW_UNSPECIFIED = 0;
  BUYER = 1; // Where entity (user, subreddit) is the seller
  SELLER = 2; // Where entity (user, subreddit) is the seller
  BUYER_OR_SELLER = 3; // Where entity (user, subreddit) is either the buyer or the seller
}
