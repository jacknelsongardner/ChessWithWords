syntax = "proto3";

package reddit.coreplatform.cloudroutines.testing.v1;

import "reddit/coreplatform/cloudroutines/event/v1/event.proto";

option go_package = "github.snooguts.net/reddit/cloudroutines/go/testingpb/v1;testingpb";

// Request message containing the event to be processed by the user's registered event handler
message ExampleEvent {
  string user_id = 1 [(reddit.coreplatform.cloudroutines.event.v1.field) = {sharding_identifier: true}];

  string subreddit_id = 2;
}

message ExampleTask {
  string user_id = 1 [(reddit.coreplatform.cloudroutines.event.v1.field) = {sharding_identifier: true}];

  string greeting = 2;
}

message ExampleCustomizedEvent {
  option (reddit.coreplatform.cloudroutines.event.v1.message) = {
    default_topic: "my_existing_topic"
    publication_source_whitelist: [
      {
        deployment_reference: {
          name: "reddit-service-cloudroutines-dummy-client"
          namespace: "reddit-service-cloudroutines"
        }
      }
    ]
  };

  string subreddit_id = 1 [(reddit.coreplatform.cloudroutines.event.v1.field) = {sharding_identifier: true}];
}

message ExampleCustomizedNestedEvent {
  message Relation {
    string relation_id = 1;
    RelationDetails details = 2;
  }

  message RelationDetails {
    string thing1_id = 1; // this is the sharding identifier
    string thing2_id = 2;
    int64 int64_field = 3;
    repeated string repeated_string_field = 4;
    float float_field = 5;
  }

  string event_id = 1;

  Relation relation = 2 [(reddit.coreplatform.cloudroutines.event.v1.field) = {
    sharding_identifier: true
    sharding_field_path: "details.thing1_id"
  }];

  int64 int64_field = 3;
  repeated string repeated_string_field = 4;
  float float_field = 5;
}

message ExampleDLQEvent {
  string user_id = 1 [(reddit.coreplatform.cloudroutines.event.v1.field) = {sharding_identifier: true}];

  string subreddit_id = 2;
}

message ExampleResult {
  string greeting = 1;
}
