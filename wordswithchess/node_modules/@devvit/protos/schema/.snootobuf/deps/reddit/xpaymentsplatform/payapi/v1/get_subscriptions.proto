syntax = "proto3";

package reddit.xpaymentsplatform.payapi.v1;

import "google/protobuf/timestamp.proto";
import "reddit/xpaymentsplatform/payapi/v1/common.proto";

option go_package = "github.snooguts.net/reddit/payments-api/api/xpaymentsplatform/payapipb/v1;payapipb";

enum SubscriptionStatus {
  SUBSCRIPTION_STATUS_UNSPECIFIED = 0;
  SUBSCRIPTION_STATUS_PENDING = 1; // Waiting for initial payment, next status: ACTIVATING, ABORTED
  SUBSCRIPTION_STATUS_ACTIVATING = 6; // Activating features after successful payment, next status: ACTIVE
  SUBSCRIPTION_STATUS_ACTIVE = 2; // Feature access is being provided, next status: CANCELED, TERMINATED, FAILED
  SUBSCRIPTION_STATUS_CANCELED = 3; // Canceled / was not renewed after previous billing period expired, terminal status
  SUBSCRIPTION_STATUS_TERMINATED = 4; // Terminated before expiration (eg. due to a refund), terminal status
  SUBSCRIPTION_STATUS_FAILED = 5; // Initial or renewal payment failed, terminal status
  SUBSCRIPTION_STATUS_ABORTED = 7; // Initial payment did not happen, order was CANCELED, terminal status
}

enum SubscriptionFeatureStatus {
  FEATURE_STATUS_UNSPECIFIED = 0;
  FEATURE_PENDING = 1; // Waiting for feature activation/delivery
  FEATURE_ACTIVE = 2; // Feature access is being provided
  FEATURE_INACTIVE = 3; // Feature access was revoked
}

message SubscribedFeature {
  SubscriptionFeature feature = 1;
  string scope_id = 2;
  SubscriptionFeatureStatus status = 3;
}

message SubscriptionPlan {
  string id = 1;
  string title = 2;
  ProductPrice price = 3;
  SubscriptionStatus status = 4;
  PaymentProvider payment_provider = 5;
  Environment environment = 6;
  ProductType product_type = 7;
  repeated SubscribedFeature features = 8;
  bool renewable = 9;
  Duration billing_period = 10;
  google.protobuf.Timestamp started_at = 11;
  optional google.protobuf.Timestamp trial_ends_at = 12;
  optional google.protobuf.Timestamp next_renewal_at = 13;
  optional google.protobuf.Timestamp ended_at = 14;
  string buyer_id = 15;
  string seller_id = 16;
  optional google.protobuf.Timestamp grace_ends_at = 17;
  bool is_in_grace_period = 18;
}

message GetSubscriptionsRequest {
  CallerID caller_id = 1;
  Environment environment = 2;
  string user_id = 3; // Reddit user calling the API
  optional ProductType product_type_filter = 4; // If specified, include only subscriptions of type
  optional SubscriptionStatus status_filter = 5; // If specified, include only subscriptions in status
  optional string scope_id_filter = 6; // If specified, include only subscriptions in the given scope/subreddit
}

message GetSubscriptionsResponse {
  repeated SubscriptionPlan subscriptions = 1;
}
