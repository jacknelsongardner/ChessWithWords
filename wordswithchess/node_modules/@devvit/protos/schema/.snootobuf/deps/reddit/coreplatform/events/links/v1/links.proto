syntax = "proto3";

package reddit.coreplatform.events.links.v1;

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "reddit/coreplatform/events/common/v1/actor.proto";
import "reddit/coreplatform/links/v1/links.proto";

option go_package = "github.snooguts.net/reddit/core-platform-events/go/links/v1;links";
option java_multiple_files = true;
option java_outer_classname = "LinksProto";
option java_package = "com.reddit.coreplatform.events.links.v1";

// An event which encapsulates a single instance of a link entity modification. A single update event is emitted
// per link update, regardless of the number of attributes that are modified. This is not triggered on link
// creation, but will be triggered on any subsequent changes to that link.
message LinkUpdateEvent {
  // A link thing entity. All fields on this link instance are eventually consistent, with the exception of those
  // explicitly referenced by the `updated_fields` field of this message. Updated fields are always strongly consistent
  // at the moment this event was emitted. Storage of the link model in systems external to core-platform must abide
  // by the `max_retention` policy defined on any of its fields.
  reddit.coreplatform.links.v1.Link link = 1;

  // A field mask containing a list of all fields that were updated on the link in this event.
  // Fields denoted in the field mask are guaranteed to be consistent at the time this event was triggered.
  // The precision of this mask is limited to only the root fields on a link message. It it makes no guarantee to convey
  // if or which nested fields may have changed during an update.
  google.protobuf.FieldMask updated_fields = 2;

  // The actor that triggered this event
  reddit.coreplatform.events.common.v1.Actor updated_by = 3;

  // The UTC timestamp of the instance at which this event was triggered and successfully persisted to
  // any relevant datastore.
  google.protobuf.Timestamp updated_at = 4;

  // The version ID of this link update. This is a monotonically increasing integer that is incremented
  // on every update to this link. On overflow (after 2^31-1 updates), the version ID will reset to 0.
  int32 version_id = 5;
}

// An event which encapsulates a single instance of a link entity creation. This event will not be triggered
// on any subsequent changes to a link.
message LinkCreateEvent {
  // A link thing entity. The fields set on this link instance reflect a combination of the attributes supplied
  // during the create and the default values for any unset fields. This is an exact representation of the entity at the
  // time of creation. This event will not reflect any modifications made to a link immediately after creation.
  // Storage of the link model in systems external to core-platform must abide by the `max_retention` policy defined
  // on any of its fields.
  reddit.coreplatform.links.v1.Link link = 1;

  // The actor that triggered this event
  reddit.coreplatform.events.common.v1.Actor created_by = 2;

  // The UTC timestamp of the instance at which this event was triggered and successfully persisted to
  // any relevant datastore.
  google.protobuf.Timestamp created_at = 3;
}
