syntax = "proto3";

package reddit.xpaymentsplatform.payapi.v1;

import "google/protobuf/timestamp.proto";
import "reddit/xpaymentsplatform/payapi/v1/common.proto";

option go_package = "github.snooguts.net/reddit/payments-api/api/xpaymentsplatform/payapipb/v1;payapipb";

message DeleteUsersDataRequest {
  repeated string user_ids = 1; // The user IDs to delete data for
  CallerID caller_id = 99;
}

message DeleteUsersDataResponse {
  repeated string user_ids = 1; // The user IDs that were successfully deleted
}

message GetUsersPurchasesRequest {
  repeated string user_ids = 1;
  google.protobuf.Timestamp start_from = 2;
  google.protobuf.Timestamp end_at = 3;
}

message GetUsersPurchasesResponse {
  repeated Purchase purchases = 1;
}

message Purchase {
  string buyer_id = 1;
  PaymentProvider provider = 2;
  string external_payment_id = 3;
  ProductType product_type = 4;
  google.protobuf.Timestamp created_at = 5;
  ProductPrice price = 6;
  PaymentUnitStatus status = 7;
}

enum PaymentUnitStatus {
  PAYMENT_UNIT_STATUS_UNSPECIFIED = 0;

  PAYMENT_UNIT_STATUS_NEW = 1;
  PAYMENT_UNIT_STATUS_ACTION_REQUIRED = 2;
  PAYMENT_UNIT_STATUS_SUCCEEDED = 3;
  PAYMENT_UNIT_STATUS_FAILED = 4;

  PAYMENT_UNIT_STATUS_REVERTED_CREATED = 5;
  PAYMENT_UNIT_STATUS_REVERTED_COMPLETED = 6;
  PAYMENT_UNIT_STATUS_REVERTED_FAILED = 7;
}

service DataComplianceService {
  rpc DeleteUsersData(DeleteUsersDataRequest) returns (DeleteUsersDataResponse) {}
  rpc GetUsersPurchases(GetUsersPurchasesRequest) returns (GetUsersPurchasesResponse) {}
}
