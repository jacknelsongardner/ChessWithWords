syntax = "proto3";

package reddit.coreplatform.events.common.v1;

option go_package = "github.snooguts.net/reddit/core-platform-events/go/common/v1";
option java_multiple_files = true;
option java_outer_classname = "ActorProto";
option java_package = "com.reddit.coreplatform.events.common.v1";

// A reference to an actor which initiated an action. In the case of events, this
// is usually the user or service account which performed the action that resulted
// in the attributed event being emitted.
message Actor {
  // The entity which triggered an event
  oneof entity {
    // The service used to trigger an event. This field will be propagated if the service
    // account is acting on behalf of itself OR performing an action on behalf of a user.
    Service service = 1;

    // The user which triggered this action. This field will NOT be populated for actions performed by a service account
    // acting on behalf of a user. The `service` field will be populated instead.
    User user = 2;
  }

  // A message describing a user actor
  message User {
    // The id of the user which triggered this action. If the action was trigger by a service account on behalf
    // of a user, then this field will be populated.
    string id = 1;
  }

  // A message describing a service actor
  message Service {
    // The service account id used to trigger an event. This id will match the service name used in the edge
    // context which performed the action.
    string service_account_id = 1;

    // The id of the user this service assumed when performing the action which triggered an event. If the service
    // was acting as a super user, then this field will be set to the const `__super__`. If no special permissions
    // were invoked and the service acted on behalf of itself, then this field will be empty.
    string on_behalf_of_user = 2;
  }
}
