syntax = "proto3";

package devvit.ui.events.v1alpha;

import "devvit/ui/effects/v1alpha/app_permission.proto";
import "devvit/ui/effects/v1alpha/realtime_subscriptions.proto";
import "devvit/ui/effects/v1alpha/show_form.proto";
import "devvit/ui/effects/web_view/v1alpha/immersive_mode.proto";
import "google/protobuf/struct.proto";

option go_package = "github.snooguts.net/reddit/reddit-devplatform-monorepo/go-common/generated/protos/types/devvit/ui/events/v1alpha";
option java_package = "com.reddit.devvit.ui.events.v1alpha";

enum WebViewVisibility {
  WEBVIEW_VISIBLE = 0;
  WEBVIEW_HIDDEN = 1;
}

// Fired when the content of a WebView calls window.parent.postMessage()
message WebViewPostMessageEvent {
  // Can be a Struct or a scalar value since postMessage doesn't restrict the type of 'message'.
  // @deprecated Use json_string instead
  google.protobuf.Value message = 1;

  // JSON string payload
  string json_string = 2;
}

// Fired when the visibility of a fullscreen WebView changes
message WebViewFullScreenEvent {
  WebViewVisibility visibility = 1;
}

message WebViewEvent {
  oneof payload {
    WebViewPostMessageEvent post_message = 1;
    WebViewFullScreenEvent full_screen = 2;
  }
}

message WebViewImmersiveModeChangedEvent {
  devvit.ui.effects.web_view.v1alpha.WebViewImmersiveMode immersive_mode = 1;
}

message WebViewInternalEventMessage {
  // ID of the event message, matches the id of the WebViewInternalMessage that triggered it
  string id = 1;
  oneof data {
    devvit.ui.effects.v1alpha.FormCanceledEvent form_canceled = 2;
    devvit.ui.effects.v1alpha.FormSubmittedEvent form_submitted = 3;
    devvit.ui.effects.v1alpha.RealtimeSubscriptionEvent realtime_event = 4;
    WebViewImmersiveModeChangedEvent immersive_mode_event = 5;
    devvit.ui.effects.v1alpha.ConsentStatusEvent consent_status = 7;
  }
}
