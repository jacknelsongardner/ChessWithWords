syntax = "proto3";

package devvit.data.api.admin.v1alpha;

import "devvit/options/options.proto";
import "devvit/reddit/v2alpha/subredditv2.proto";

option go_package = "github.snooguts.net/reddit/data-api-firehose/generated/protos/types/admin";

message Subscription {
  string id = 1;
  string name = 2;
  string organization_id = 3;
  string description = 4;
  repeated devvit.options.FirehoseEvent events = 5;
  repeated string subreddits = 6;
  repeated devvit.reddit.v2alpha.SubredditRating subreddit_ratings = 7;
}

message CreateSubscriptionRequest {
  repeated devvit.options.FirehoseEvent events = 1;
  repeated string subreddits = 2;
  repeated devvit.reddit.v2alpha.SubredditRating subreddit_ratings = 3;
  string organization_id = 4;
  string name = 5;
  string description = 6;
}

message CreateSubscriptionResponse {
  Subscription subscription = 1;
}

message GetSubscriptionByIdRequest {
  string subscription_id = 1;
}

message GetSubscriptionByIdResponse {
  Subscription subscription = 1;
}

message GetSubscriptionsByOrganizationNameRequest {
  string organization_name = 1;
}

message GetSubscriptionsByOrganizationNameResponse {
  repeated Subscription subscriptions = 1;
}

message UpdateSubscriptionRequest {
  // Id of the subscription to update
  string subscription_id = 1;
  // New name of the subscription
  optional string name = 2;
  // New description of the subscription
  optional string description = 3;
  // New events. Will overwrite the array of existing events.
  repeated devvit.options.FirehoseEvent events = 4;
  // New subreddits. Will overwrite the array of existing subreddits.
  repeated string subreddits = 5;
  // New subreddit ratings. Will overwrite the array of existing subreddit ratings.
  repeated devvit.reddit.v2alpha.SubredditRating subreddit_ratings = 6;
}

message UpdateSubscriptionResponse {
  Subscription subscription = 1;
}

message DeleteSubscriptionRequest {
  string subscription_id = 1;
}

message DeleteSubscriptionResponse {}
