/**
 * #remote_logger.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { LogErrorMessage, LogEventMessage, LogMessage } from "../plugin/logger/logger.js";
export declare enum RemoteLogType {
    LOG = 0,
    ERROR = 1,
    EVENT = 2,
    UNRECOGNIZED = -1
}
export type RemoteLogMessages = {
    messages: RemoteLogMessage[];
};
export type RemoteLogPutResponse = {};
export type KeepAliveMessage = {
    timestamp?: string | undefined;
};
export type RemoteLogMessage = {
    log?: LogMessage | undefined;
    error?: LogErrorMessage | undefined;
    keepalive?: KeepAliveMessage | undefined;
    event?: LogEventMessage | undefined;
};
/** Filter on installation ID (encoded subreddit name AND app name). */
export type RemoteLogInstallationFilter = {
    installationId: string;
};
/**
 * Filter on subreddit name and / or app name. Not all combinations are
 * available on all streams.
 */
export type RemoteLogSubredditAppNameFilter = {
    subreddit: string;
    appName: string;
};
export type RemoteLogQuery = {
    installation?: RemoteLogInstallationFilter | undefined;
    subredditAppName?: RemoteLogSubredditAppNameFilter | undefined;
    type: RemoteLogType;
    since?: string | undefined;
};
//# sourceMappingURL=remote_logger.d.ts.map