/**
 * #subreddit_metadata.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { ContextActionList } from "../actor/reddit/context_action.js";
import type { LinkedBundle } from "../runtime/bundle.js";
/** @deprecated */
export type SubredditContextActions = {
    /** LinkedBundle.hostname */
    actorHostname: string;
    /** Return value from ContextAction.GetActions() */
    actions?: ContextActionList | undefined;
};
/**
 * The subreddit manifest. Nothing to do with gRPC-web or any other kind of
 * metadata.
 * base64-encoded in Subreddit.devPlatformMetadata
 * ([ex](https://gql.reddit.com/?queryGz=eJw1y7EKg0AMANBfKTfpct07dnOoCH5AiU2kES8JXizIcf9eF5e3vZL3aSNE9k5mfR49JGrk5BGyk31JlPFt%2BxTaEmNUuY1XKEi%2FYQWfdUsvckBwaBIn8sPODmYrf8BZ5b5kldDWWv89vSpI&operationName=)).
 *
 * @deprecated
 */
export type DevvitSubredditMetadata = {
    /** List of all installed apps for the loaded Subreddit */
    installedRemoteApps: LinkedBundle[];
    contextActions: SubredditContextActions[];
    errors: ErrorMessage[];
    installedAppsInfo: DevvitSubredditMetadata_AppInfo[];
};
export type DevvitSubredditMetadata_AppInfo = {
    /** Unique identifier */
    slug: string;
    /** Display name */
    name: string;
    /** Owner user ID. Eg, `t2_1w72`. */
    ownerId: string;
};
export type ErrorMessage = {
    message: string;
};
//# sourceMappingURL=subreddit_metadata.d.ts.map