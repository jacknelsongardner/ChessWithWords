/**
 * #user_configurable.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
export declare enum ConfigFieldType {
    /** STRING - Single-line string */
    STRING = 0,
    /** PARAGRAPH - Multi-line string */
    PARAGRAPH = 1,
    /** NUMBER - Number input (i.e.: spinner) */
    NUMBER = 2,
    /** BOOLEAN - Checkbox, switch */
    BOOLEAN = 3,
    /** IMAGE - Image upload - value is a URL for the uploaded image */
    IMAGE = 7,
    UNRECOGNIZED = -1
}
export type ConfigForm = {
    fields: ConfigField[];
};
/** Defines a configuration field with a specific type */
export type ConfigField = {
    /** Determines what kind of user input to generate for this field */
    fieldType: ConfigFieldType;
    /** Unique identifier for the setting */
    key: string;
    /** Message to display to the user for this setting */
    prompt: string;
    /**
     * The value of the field.
     * When calling RenderForm provide the existing value of the field
     * When calling HandleFormResponse read this property to get the user's response
     */
    response: string;
};
export type FormResponse = {
    success: boolean;
    messages: string[];
};
//# sourceMappingURL=user_configurable.d.ts.map