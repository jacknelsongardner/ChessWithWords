/**
 * #listings_msg.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { Listing } from "../common/common_msg.js";
export type GetBestRequest = {
    /**
     * Post thing ID
     * Return Posts in the listing up to this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    after?: string | undefined;
    /**
     * Post thing ID
     * Return Posts in the listing starting after this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    before?: string | undefined;
    /**
     * The number of items seen so far.
     * Use when fetching subsequent pages with `before` or `after`.
     */
    count?: number | undefined;
    /** The maximum number of items desired (default: 25, maximum: 100) */
    limit?: number | undefined;
    /** Adding the string "all" will show all results regardless of user preferences */
    show?: string | undefined;
};
export type GetSortRequest = {
    /**
     * Fetch posts from this subreddit.
     * Note: If omitted Home is used
     * @example "AskReddit"
     */
    subreddit?: string | undefined;
    /**
     * Sort method
     * One of: "top", "controversial"
     */
    sort: string;
    /**
     * Post thing ID
     * Return Posts in the listing up to this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    after?: string | undefined;
    /**
     * Post thing ID
     * Return Posts in the listing starting after this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    before?: string | undefined;
    /** One of: "num_comments", "new" */
    limit?: number | undefined;
    /**
     * The number of items seen so far.
     * Use when fetching subsequent pages with `before` or `after`, defaults to 0
     */
    count?: number | undefined;
    /** Adding the string "all" will show all results regardless of user preferences */
    show?: string | undefined;
    /**
     * Show results within the given timeframe (default: "day")
     * One of: "hour", "day", "week", "month", "year", "all"
     */
    t?: string | undefined;
};
export type GetCommentsRequest = {
    /**
     * Post thing ID without t3_ prefix
     * @example "abc123" // for: t3_abc123
     */
    article: string;
    /**
     * Comment thing ID without t1_ prefix
     * Note: If provided this will be the only sub-tree in the listing
     * @example "def456" // for: t1_def456
     */
    comment?: string | undefined;
    /**
     * If `comment` is provided and is not a top-level comment include
     * up to this amount of parent comments. Range: 0-8
     */
    context?: number | undefined;
    /** Maximum depth of any comment tree in the listing */
    depth?: number | undefined;
    /**
     * Maximum comments to include in each sub-tree
     * Note: This limit is applied to each level of the comment tree
     */
    limit?: number | undefined;
    /** One of: "confidence", "top", "new", "controversial", "old", "random", "qa", "live" */
    sort?: string | undefined;
    /** If `false` the comment tree is flattened instead of nesting sub-trees in `replies` */
    threaded?: boolean | undefined;
    /**
     * Limit the total number of comments returned to this amount. Range: 0-50
     * Note: While `limit` sets the maximum comments per sub-tree, `truncate`
     *       counts each comment and its descendents toward the maximum
     */
    truncate?: number | undefined;
};
export type GetByIdRequest = {
    /**
     * Comma-separated list of Post thing IDs
     * @example "t3_abc123,t3_def456"
     */
    postIds: string;
};
export type GetDuplicatesRequest = {
    /**
     * Post thing ID without t3_ prefix
     * @example "abc123" // for: t3_abc123
     */
    article: string;
    /**
     * Post thing ID
     * Return Posts in the listing starting after this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    before?: string | undefined;
    /**
     * Post thing ID
     * Return Posts in the listing up to this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    after?: string | undefined;
    /** Maximum number of items to include in the response */
    limit?: number | undefined;
    /** One of: "num_comments", "new" */
    sort?: string | undefined;
    /**
     * Limit search to the given subreddit name
     * @example "AskReddit"
     */
    sr?: string | undefined;
    /**
     * The number of items seen so far.
     * Use when fetching subsequent pages with `before` or `after`.
     */
    count?: number | undefined;
    /** Only return duplicates that are crossposting this post */
    crosspostsOnly?: boolean | undefined;
    /** Adding the string "all" will show all results regardless of user preferences */
    show?: string | undefined;
};
export type GetHotRequest = {
    /**
     * Fetch posts from this subreddit.
     * Note: If omitted Home is used
     * @example "AskReddit"
     */
    subreddit?: string | undefined;
    /**
     * Post thing ID
     * Return Posts in the listing starting after this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    before?: string | undefined;
    /**
     * Post thing ID
     * Return Posts in the listing up to this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    after?: string | undefined;
    /** The maximum number of items desired (default: 25, maximum: 100) */
    limit?: number | undefined;
    /**
     * The number of items seen so far.
     * Use when fetching subsequent pages with `before` or `after`.
     */
    count?: number | undefined;
    /** Adding the string "all" will show all results regardless of user preferences */
    show?: string | undefined;
    /**
     * If provided filter the results by geographic location
     * One of: GLOBAL, US, AR, AU, BG, CA, CL, CO, HR, CZ, FI, FR,
     *         DE, GR, HU, IS, IN, IE, IT, JP, MY, MX, NZ, PH, PL,
     *         PT, PR, RO, RS, SG, ES, SE, TW, TH, TR, GB,
     *         US_WA, US_DE, US_DC, US_WI, US_WV, US_HI, US_FL, US_WY,
     *         US_NH, US_NJ, US_NM, US_TX, US_LA, US_NC, US_ND, US_NE,
     *         US_TN, US_NY, US_PA, US_CA, US_NV, US_VA, US_CO, US_AK,
     *         US_AL, US_AR, US_VT, US_IL, US_GA, US_IN, US_IA, US_OK,
     *         US_AZ, US_ID, US_CT, US_ME, US_MD, US_MA, US_OH, US_UT,
     *         US_MO, US_MN, US_MI, US_RI, US_KS, US_MT, US_MS, US_SC,
     *         US_KY, US_OR, US_SD
     */
    g?: string | undefined;
};
export type GetNewRequest = {
    /**
     * Fetch posts from this subreddit.
     * Note: If omitted Home is used
     * @example "AskReddit"
     */
    subreddit?: string | undefined;
    /**
     * Post thing ID
     * Return Posts in the listing starting after this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    before?: string | undefined;
    /**
     * Post thing ID
     * Return Posts in the listing up to this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    after?: string | undefined;
    /** The maximum number of items desired (default: 25, maximum: 100) */
    limit?: number | undefined;
    /**
     * The number of items seen so far.
     * Use when fetching subsequent pages with `before` or `after`.
     */
    count?: number | undefined;
    /**
     * The number of items seen so far.
     * Use when fetching subsequent pages with `before` or `after`.
     */
    show?: string | undefined;
};
export type GetRisingRequest = {
    /**
     * Fetch posts from this subreddit.
     * Note: If omitted Home is used
     * @example "AskReddit"
     */
    subreddit?: string | undefined;
    /**
     * Post thing ID
     * Return Posts in the listing up to this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    after?: string | undefined;
    /**
     * Post thing ID
     * Return Posts in the listing starting after this Post (non-inclusive)
     * Note: Do not use `before` and `after` in the same request
     * @example "t3_abc123"
     */
    before?: string | undefined;
    /**
     * The number of items seen so far.
     * Use when fetching subsequent pages with `before` or `after`.
     */
    count?: number | undefined;
    /** The maximum number of items desired (default: 25, maximum: 100) */
    limit?: number | undefined;
    /**
     * The number of items seen so far.
     * Use when fetching subsequent pages with `before` or `after`.
     */
    show?: string | undefined;
};
/** Responses */
export type ListingResponse = {
    listings: Listing[];
};
//# sourceMappingURL=listings_msg.d.ts.map