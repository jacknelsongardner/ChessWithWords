/**
 * #subreddits_msg.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { Any } from "../../../../google/protobuf/any.js";
import type { CommentContributionSettings, MediaEmbed, UserFlairRichtext } from "../../../reddit/common.js";
/** requests */
export type AboutWhereRequest = {
    /** fullname of a thing */
    after?: string | undefined;
    /** fullname of a thing */
    before?: string | undefined;
    /** a positive integer (default: 0) */
    count?: number | undefined;
    /** the maximum number of items desired (default: 25, maximum: 100) */
    limit?: number | undefined;
    /** (optional) the string all */
    show?: string | undefined;
    /** A valid, existing reddit username */
    user?: string | undefined;
    /** the name of the subreddit */
    subreddit?: string | undefined;
    /** one of "banned", "muted", "wikibanned", "contributors", "wikicontributors", or "moderators" */
    where: string;
};
export type BasicSubredditRequest = {
    /** the name of the subreddit */
    subreddit: string;
};
export type DeleteSrImgRequest = {
    /** the name of the subreddit */
    subreddit: string;
    /** a valid subreddit image name */
    imgName: string;
};
export type BasicSearchRequest = {
    /** boolean value */
    exact?: boolean | undefined;
    /** boolean value */
    includeOver18?: boolean | undefined;
    /** boolean value */
    includeUnadvertisable?: boolean | undefined;
    /** a string up to 50 characters long, consisting of printable characters */
    query: string;
    /** a uuid */
    searchQueryId?: string | undefined;
    /** (optional) boolean value */
    typeaheadActive?: boolean | undefined;
};
export type SiteAdminRequest = {
    /** boolean value */
    acceptFollowers: boolean;
    /** boolean value */
    adminOverrideSpamComments: boolean;
    /** boolean value */
    adminOverrideSpamLinks: boolean;
    /** boolean value */
    adminOverrideSpamSelfposts: boolean;
    /** boolean value */
    allOriginalContent: boolean;
    /** boolean value */
    allowChatPostCreation: boolean;
    /** boolean value */
    allowDiscovery: boolean;
    /** boolean value */
    allowGalleries: boolean;
    /** boolean value */
    allowImages: boolean;
    /** boolean value */
    allowPolls: boolean;
    /** boolean value */
    allowPostCrossposts: boolean;
    /** boolean value */
    allowPredictionContributors: boolean;
    /** boolean value */
    allowPredictions: boolean;
    /** boolean value */
    allowPredictionsTournament: boolean;
    /** boolean value */
    allowTalks: boolean;
    /** boolean value */
    allowTop: boolean;
    /** boolean value */
    allowVideos: boolean;
    /** an integer between 0 and 3 */
    banEvasionThreshold: number;
    /** boolean value */
    collapseDeletedComments: boolean;
    /**
     * json data:
     * \{
     *   "allowed_media_types": [
     *     one of (`giphy`, `unknown`, `animated`, `static`),
     *     ...
     *   ],
     * \}
     */
    commentContributionSettings?: CommentContributionSettings | undefined;
    /** an integer between 0 and 1440 (default: 0) */
    commentScoreHideMins: number;
    /** boolean value */
    crowdControlFilter: boolean;
    /** an integer between 0 and 3 */
    crowdControlLevel: number;
    /** boolean value */
    crowdControlMode: boolean;
    /** an integer between 0 and 3 */
    crowdControlPostLevel: number;
    /** raw markdown text */
    description: string;
    /** boolean value */
    disableContributorRequests: boolean;
    /** boolean value */
    excludeBannedModqueue: boolean;
    /** boolean value */
    freeFormReports: boolean;
    gRecaptchaResponse: string;
    /** an integer between 0 and 3 */
    hatefulContentThresholdAbuse: number;
    /** an integer between 0 and 3 */
    hatefulContentThresholdIdentity: number;
    /** a string no longer than 500 characters */
    headerTitle: string;
    /** a 6-digit rgb hex color, e.g. #AABBCC */
    keyColor: string;
    /** one of (any, link, self) */
    linkType: string;
    /** subreddit name */
    name: string;
    /** boolean value */
    newPinnedPostPnsEnabled: boolean;
    /** boolean value */
    originalContentTagEnabled: boolean;
    /** boolean value */
    over18: boolean;
    /** an integer between 0 and 2 */
    predictionLeaderboardEntryType: number;
    /** raw markdown text */
    publicDescription: string;
    /** boolean value */
    restrictCommenting: boolean;
    /** boolean value */
    restrictPosting: boolean;
    /** boolean value */
    shouldArchivePosts: boolean;
    /** boolean value */
    showMedia: boolean;
    /** boolean value */
    showMediaPreview: boolean;
    /** one of (low, high, all) */
    spamComments: string;
    /** one of (low, high, all) */
    spamLinks: string;
    /** one of (low, high, all) */
    spamSelfposts: string;
    /** boolean value */
    spoilersEnabled: boolean;
    /** fullname of a thing */
    sr: string;
    /** a string no longer than 60 characters */
    submitLinkLabel: string;
    /** raw markdown text */
    submitText: string;
    /** a string no longer than 60 characters */
    submitTextLabel: string;
    /** one of (confidence, top, new, controversial, old, random, qa, live) */
    suggestedCommentSort: string;
    /** a string no longer than 100 characters */
    title: string;
    /** an integer between 0 and 1 */
    toxicityThresholdChatLevel: number;
    /** one of (gold_restricted, archived, restricted, private, employees_only, gold_only, public, user) */
    type: string;
    /** boolean value */
    userFlairPnsEnabled: boolean;
    /** boolean value */
    welcomeMessageEnabled: boolean;
    /** raw markdown text */
    welcomeMessageText: string;
    /** an integer between 0 and 36600 (default: 0) */
    wikiEditAge: number;
    /** an integer between 0 and 1000000000 (default: 0) */
    wikiEditKarma: number;
    /** one of (disabled, modonly, anyone) */
    wikimode: string;
    /** an integer between 0 and 3 */
    crowdControlChatLevel: number;
    /** boolean value */
    hideAds: boolean;
    /** boolean value */
    modmailHarassmentFilterEnabled: boolean;
};
export type SubredditAutocompleteRequest = {
    /** boolean value */
    includeOver18?: boolean | undefined;
    /** boolean value */
    includeProfiles?: boolean | undefined;
    /** an integer between 1 and 10 (default: 5) */
    limit?: number | undefined;
    /** a string up to 25 characters long, consisting of printable characters */
    query: string;
    /** a uuid */
    searchQueryId?: string | undefined;
    /** (optional) boolean value */
    typeaheadActive?: boolean | undefined;
};
export type SubredditStylesheetRequest = {
    /** one of (save, preview) */
    op: string;
    /** a string up to 256 characters long, consisting of printable characters. */
    reason: string;
    /** the new stylesheet content */
    stylesheetContents: string;
    /** the name of the subreddit */
    subreddit: string;
};
export type SubscribeRequest = {
    /** one of (sub, unsub) */
    action: string;
    /** one of (o, n, b, o, a, r, d, i, n, g) */
    actionSource: string;
    /** boolean value */
    skipInitialDefaults: boolean;
    /** A comma-separated list of subreddit fullnames */
    sr: string;
    /** A comma-separated list of subreddit names */
    srName: string;
};
export type UploadSrImgRequest = {
    /** file upload with maximum size of 500 KiB */
    file: string;
    /** (optional) can be ignored */
    header: number;
    /** an integer between 0 and 1 */
    imgType: string;
    /** a valid subreddit image name */
    name: string;
    /** one of png or jpg (default: png) */
    uploadType: string;
    /** the name of the subreddit */
    subreddit: string;
};
export type SubredditAboutEditRequest = {
    /** one of (true, false) */
    created: string;
    location: string;
    /** the name of the subreddit */
    subreddit: string;
};
export type StickyRequest = {
    /** an integer between 1 and 2 (default: 1) */
    num: number;
    /** the name of the subreddit */
    subreddit: string;
};
export type BasicWhereRequest = {
    /** fullname of a thing */
    after?: string | undefined;
    /** fullname of a thing */
    before?: string | undefined;
    /** a positive integer (default: 0) */
    count?: number | undefined;
    /** the maximum number of items desired (default: 25, maximum: 100) */
    limit?: number | undefined;
    /** (optional) the string all */
    show?: string | undefined;
    /**
     * SubredditsMineWhere: one of (subscriber, contributor, moderator, streams)
     * SubredditsWhere: one of (popular, new, gold, default)
     * UsersWhere: one of (popular, new)
     */
    where: string;
};
export type SubredditsSearchRequest = {
    /** fullname of a thing */
    after?: string | undefined;
    /** fullname of a thing */
    before?: string | undefined;
    /** a positive integer (default: 0) */
    count?: number | undefined;
    /** the maximum number of items desired (default: 25, maximum: 100) */
    limit?: number | undefined;
    /** a search query */
    q: string;
    /** a uuid */
    searchQueryId?: string | undefined;
    /** (optional) the string all */
    show?: string | undefined;
    /** boolean value */
    showUsers?: boolean | undefined;
    /** one of (relevance, activity) */
    sort?: string | undefined;
    /** (optional) boolean value */
    typeaheadActive?: boolean | undefined;
};
export type UsersSearchRequest = {
    /** fullname of a thing */
    after?: string | undefined;
    /** fullname of a thing */
    before?: string | undefined;
    /** a positive integer (default: 0) */
    count?: number | undefined;
    /** the maximum number of items desired (default: 25, maximum: 100) */
    limit?: number | undefined;
    /** a search query */
    q: string;
    /** a uuid */
    searchQueryId?: string | undefined;
    /** (optional) the string all */
    show?: string | undefined;
    /** one of (relevance, activity) */
    sort?: string | undefined;
    /** (optional) boolean value */
    typeaheadActive?: boolean | undefined;
};
/** responses */
export type SearchRedditNamesResponse = {
    names: string[];
};
export type SearchSubredditsResponse = {
    subreddits: SearchSubredditsResponse_SubredditData[];
};
export type SearchSubredditsResponse_SubredditData = {
    activeUserCount?: number | undefined;
    iconImg?: string | undefined;
    keyColor?: string | undefined;
    name?: string | undefined;
    subscriberCount?: number | undefined;
    isChatPostFeatureEnabled?: boolean | undefined;
    allowChatPostCreation?: boolean | undefined;
    allowImages?: boolean | undefined;
};
export type SubmitTextResponse = {
    submitText?: string | undefined;
    submitTextHtml?: string | undefined;
};
export type SubredditAutocompleteResponse = {
    kind?: string | undefined;
    data?: SubredditAutocompleteResponse_AutocompleteResponse | undefined;
};
export type SubredditAutocompleteResponse_AutocompleteAccount = {
    isEmployee?: boolean | undefined;
    isFriend?: boolean | undefined;
    snoovatarSize?: number | undefined;
    id?: string | undefined;
    verified?: boolean | undefined;
    isGold?: boolean | undefined;
    isMod?: boolean | undefined;
    hasVerifiedEmail?: boolean | undefined;
    iconImg?: string | undefined;
    hideFromRobots?: boolean | undefined;
    linkKarma?: number | undefined;
    acceptChats?: boolean | undefined;
    isBlocked?: boolean | undefined;
    prefShowSnoovatar?: boolean | undefined;
    name?: string | undefined;
    created?: number | undefined;
    createdUtc?: number | undefined;
    snoovatarImg?: string | undefined;
    commentKarma?: number | undefined;
    acceptFollowers?: boolean | undefined;
    hasSubscribed?: boolean | undefined;
    acceptPms?: boolean | undefined;
};
export type SubredditAutocompleteResponse_AutocompleteAccount_Subreddit = {
    defaultSet?: boolean | undefined;
    userIsContributor?: boolean | undefined;
    bannerImg?: string | undefined;
    allowedMediaInComments: string[];
    userIsBanned?: boolean | undefined;
    freeFormReports?: boolean | undefined;
    communityIcon?: string | undefined;
    showMedia?: boolean | undefined;
    iconColor?: string | undefined;
    userIsMuted?: boolean | undefined;
    displayName?: string | undefined;
    headerImg?: string | undefined;
    title?: string | undefined;
    previousNames: string[];
    over18?: boolean | undefined;
    iconSize: number[];
    primaryColor?: string | undefined;
    iconImg?: string | undefined;
    description?: string | undefined;
    submitLinkLabel?: string | undefined;
    headerSize?: number | undefined;
    restrictPosting?: boolean | undefined;
    restrictCommenting?: boolean | undefined;
    subscribers?: number | undefined;
    submitTextLabel?: string | undefined;
    isDefaultIcon?: boolean | undefined;
    inkFlairPosition?: string | undefined;
    displayNamePrefixed?: string | undefined;
    keyColor?: string | undefined;
    name?: string | undefined;
    isDefaultBanner?: boolean | undefined;
    url?: string | undefined;
    quarantine?: boolean | undefined;
    bannerSize?: number | undefined;
    userIsModerator?: boolean | undefined;
    acceptFollowers?: boolean | undefined;
    publicDescription?: string | undefined;
    linkFlairEnabled?: boolean | undefined;
    disableContributorRequests?: boolean | undefined;
    subredditType?: string | undefined;
    userIsSubscriber?: boolean | undefined;
};
export type SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit = {
    kind: string;
    data?: FullSubredditObject | undefined;
};
export type SubredditAutocompleteResponse_WrappedAutoCompleteAccount = {
    kind: string;
    data?: SubredditAutocompleteResponse_AutocompleteAccount | undefined;
};
export type SubredditAutocompleteResponse_AutocompleteResponse = {
    after?: string | undefined;
    before?: string | undefined;
    dist?: number | undefined;
    childrenSubreddits: SubredditAutocompleteResponse_WrappedAutoCompleteSubreddit[];
    childrenAccounts: SubredditAutocompleteResponse_WrappedAutoCompleteAccount[];
};
export type UploadSrImgResponse = {
    errors: string[];
    imgSrc?: string | undefined;
    errorsValues: string[];
};
export type SubredditPostRequirementsResponse = {
    titleRegexes: string[];
    bodyBlacklistedStrings: string[];
    titleBlacklistedStrings: string[];
    bodyTextMaxLength?: number | undefined;
    titleRequiredStrings: string[];
    guidelinesText?: string | undefined;
    galleryMinItems?: number | undefined;
    domainBlacklist: string[];
    domainWhitelist: string[];
    titleTextMaxLength?: number | undefined;
    bodyRestrictionPolicy?: string | undefined;
    linkRestrictionPolicy?: string | undefined;
    guidelinesDisplayPolicy?: string | undefined;
    bodyRequiredStrings: string[];
    titleTextMinLength?: number | undefined;
    galleryCaptionsRequirement?: string | undefined;
    isFlairRequired?: boolean | undefined;
    galleryMaxItems?: number | undefined;
    galleryUrlsRequirement?: string | undefined;
    bodyRegexes: string[];
    linkRepostAge?: number | undefined;
    bodyTextMinLength?: number | undefined;
};
export type SubredditAboutResponse = {
    kind?: string | undefined;
    data?: SubredditAboutResponse_AboutData | undefined;
};
export type SubredditAboutResponse_AboutData = {
    userFlairBackgroundColor?: string | undefined;
    submitTextHtml?: string | undefined;
    restrictPosting?: boolean | undefined;
    userIsBanned?: boolean | undefined;
    freeFormReports?: boolean | undefined;
    wikiEnabled?: boolean | undefined;
    userIsMuted?: boolean | undefined;
    userCanFlairInSr?: boolean | undefined;
    displayName?: string | undefined;
    headerImg?: string | undefined;
    title?: string | undefined;
    allowGalleries?: boolean | undefined;
    primaryColor?: string | undefined;
    activeUserCount?: number | undefined;
    iconImg?: string | undefined;
    displayNamePrefixed?: string | undefined;
    accountsActive?: number | undefined;
    publicTraffic?: boolean | undefined;
    subscribers?: number | undefined;
    userFlairRichtext: UserFlairRichtext[];
    name?: string | undefined;
    quarantine?: boolean | undefined;
    hideAds?: boolean | undefined;
    emojisEnabled?: boolean | undefined;
    advertiserCategory?: string | undefined;
    publicDescription?: string | undefined;
    commentScoreHideMins?: number | undefined;
    allowPredictions?: boolean | undefined;
    userHasFavorited?: boolean | undefined;
    userFlairTemplateId?: string | undefined;
    communityIcon?: string | undefined;
    bannerBackgroundImage?: string | undefined;
    originalContentTagEnabled?: boolean | undefined;
    communityReviewed?: boolean | undefined;
    submitText?: string | undefined;
    descriptionHtml?: string | undefined;
    spoilersEnabled?: boolean | undefined;
    commentContributionSettings?: CommentContributionSettings | undefined;
    allowTalks?: boolean | undefined;
    userFlairPosition?: string | undefined;
    allOriginalContent?: boolean | undefined;
    collectionsEnabled?: boolean | undefined;
    isEnrolledInNewModmail?: boolean | undefined;
    keyColor?: string | undefined;
    eventPostsEnabled?: boolean | undefined;
    canAssignUserFlair?: boolean | undefined;
    created?: number | undefined;
    showMediaPreview?: boolean | undefined;
    submissionType?: string | undefined;
    userIsSubscriber?: boolean | undefined;
    allowedMediaInComments: string[];
    allowVideogifs?: boolean | undefined;
    shouldArchivePosts?: boolean | undefined;
    userFlairType?: string | undefined;
    allowPolls?: boolean | undefined;
    collapseDeletedComments?: boolean | undefined;
    coins?: number | undefined;
    publicDescriptionHtml?: string | undefined;
    allowVideos?: boolean | undefined;
    isCrosspostableSubreddit?: boolean | undefined;
    notificationLevel?: string | undefined;
    shouldShowMediaInCommentsSetting?: boolean | undefined;
    canAssignLinkFlair?: boolean | undefined;
    hasMenuWidget?: boolean | undefined;
    accountsActiveIsFuzzed?: boolean | undefined;
    allowPredictionContributors?: boolean | undefined;
    submitTextLabel?: string | undefined;
    linkFlairPosition?: string | undefined;
    userSrFlairEnabled?: boolean | undefined;
    userFlairEnabledInSr?: boolean | undefined;
    allowChatPostCreation?: boolean | undefined;
    allowDiscovery?: boolean | undefined;
    acceptFollowers?: boolean | undefined;
    userSrThemeEnabled?: boolean | undefined;
    linkFlairEnabled?: boolean | undefined;
    disableContributorRequests?: boolean | undefined;
    subredditType?: string | undefined;
    suggestedCommentSort?: string | undefined;
    bannerImg?: string | undefined;
    userFlairText?: string | undefined;
    bannerBackgroundColor?: string | undefined;
    showMedia?: boolean | undefined;
    id?: string | undefined;
    userIsModerator?: boolean | undefined;
    over18?: boolean | undefined;
    headerTitle?: string | undefined;
    description?: string | undefined;
    isChatPostFeatureEnabled?: boolean | undefined;
    submitLinkLabel?: string | undefined;
    userFlairTextColor?: string | undefined;
    restrictCommenting?: boolean | undefined;
    userFlairCssClass?: string | undefined;
    allowImages?: boolean | undefined;
    lang?: string | undefined;
    url?: string | undefined;
    createdUtc?: number | undefined;
    bannerSize: number[];
    mobileBannerImage?: string | undefined;
    userIsContributor?: boolean | undefined;
    allowPredictionsTournament?: boolean | undefined;
    iconSize: number[];
    headerSize: number[];
    wls?: number | undefined;
    whitelistStatus?: string | undefined;
    emojisCustomSize: number[];
};
export type SubredditAboutEditResponse = {
    kind?: string | undefined;
    data?: SubredditAboutEditResponse_SubredditSettings | undefined;
};
export type SubredditAboutEditResponse_SubredditSettings = {
    defaultSet?: boolean | undefined;
    toxicityThresholdChatLevel?: number | undefined;
    crowdControlChatLevel?: number | undefined;
    restrictPosting?: boolean | undefined;
    publicDescription?: string | undefined;
    subredditId?: string | undefined;
    allowImages?: boolean | undefined;
    freeFormReports?: boolean | undefined;
    domain?: string | undefined;
    originalContentTagEnabled?: boolean | undefined;
    showMedia?: boolean | undefined;
    excludeBannedModqueue?: boolean | undefined;
    shouldArchivePosts?: boolean | undefined;
    submitText?: string | undefined;
    spamLinks?: string | undefined;
    title?: string | undefined;
    collapseDeletedComments?: boolean | undefined;
    wikimode?: string | undefined;
    over18?: boolean | undefined;
    allowVideos?: boolean | undefined;
    allowGalleries?: boolean | undefined;
    crowdControlLevel?: number | undefined;
    banEvasionThreshold?: number | undefined;
    crowdControlMode?: boolean | undefined;
    welcomeMessageEnabled?: boolean | undefined;
    welcomeMessageText?: string | undefined;
    suggestedCommentSort?: boolean | undefined;
    disableContributorRequests?: boolean | undefined;
    allowTalks?: boolean | undefined;
    description?: string | undefined;
    submitLinkLabel?: string | undefined;
    spoilersEnabled?: boolean | undefined;
    allowPostCrossposts?: boolean | undefined;
    spamComments?: string | undefined;
    publicTraffic?: boolean | undefined;
    restrictCommenting?: boolean | undefined;
    allowPolls?: boolean | undefined;
    commentContributionSettings?: CommentContributionSettings | undefined;
    submitTextLabel?: string | undefined;
    commentScoreHideMins?: number | undefined;
    allOriginalContent?: boolean | undefined;
    spamSelfposts?: string | undefined;
    keyColor?: string | undefined;
    language?: string | undefined;
    newPinnedPostPnsEnabled?: boolean | undefined;
    hideAds?: boolean | undefined;
    predictionLeaderboardEntryType?: number | undefined;
    headerHoverText?: string | undefined;
    wikiEditAge?: number | undefined;
    allowChatPostCreation?: boolean | undefined;
    allowPredictionContributors?: boolean | undefined;
    allowDiscovery?: boolean | undefined;
    acceptFollowers?: boolean | undefined;
    crowdControlPostLevel?: number | undefined;
    allowPredictionsTournament?: boolean | undefined;
    wikiEditKarma?: number | undefined;
    showMediaPreview?: boolean | undefined;
    crowdControlFilter?: boolean | undefined;
    subredditType?: string | undefined;
    allowPredictions?: boolean | undefined;
    userFlairPnsEnabled?: boolean | undefined;
    contentOptions?: string | undefined;
};
export type SubredditAboutRulesResponse = {
    rules: SubredditAboutRulesResponse_SubredditRule[];
    siteRules: string[];
    siteRulesFlow: SubredditAboutRulesResponse_RuleFlow[];
};
export type SubredditAboutRulesResponse_SubredditRule = {
    kind?: string | undefined;
    description?: string | undefined;
    shortName?: string | undefined;
    violationReason?: string | undefined;
    createdUtc?: number | undefined;
    priority?: number | undefined;
    descriptionHtml?: string | undefined;
};
export type SubredditAboutRulesResponse_RuleFlow = {
    reasonTextToShow?: string | undefined;
    reasonText?: string | undefined;
    nextStepHeader?: string | undefined;
    nextStepReasons: SubredditAboutRulesResponse_RuleFlow[];
    complaintButtonText?: string | undefined;
    complaintUrl?: string | undefined;
    complaintPageTitle?: string | undefined;
    fileComplaint?: boolean | undefined;
    complaintPrompt?: string | undefined;
    canWriteNotes?: boolean | undefined;
    isAbuseOfReportButton?: boolean | undefined;
    notesInputTitle?: string | undefined;
    usernamesInputTitle?: string | undefined;
    canSpecifyUsernames?: boolean | undefined;
    requestCrisisSupport?: boolean | undefined;
    oneUsername?: boolean | undefined;
};
export type SubredditAboutTrafficResponse = {
    day: SubredditAboutTrafficResponse_Data[];
    hour: SubredditAboutTrafficResponse_Data[];
    month: SubredditAboutTrafficResponse_Data[];
};
export type SubredditAboutTrafficResponse_Data = {
    values: number[];
};
export type StickyResponse = {
    kind?: string | undefined;
    data?: StickyResponse_StickyResponseData | undefined;
};
export type StickyResponse_LinkData = {
    authorFlairBackgroundColor?: string | undefined;
    approvedAtUtc?: number | undefined;
    subreddit?: string | undefined;
    selftext?: string | undefined;
    userReports: string[];
    saved?: boolean | undefined;
    modReasonTitle?: string | undefined;
    gilded?: number | undefined;
    clicked?: boolean | undefined;
    title?: string | undefined;
    linkFlairRichtext: string[];
    subredditNamePrefixed?: string | undefined;
    hidden?: boolean | undefined;
    pwls?: string | undefined;
    linkFlairCssClass?: string | undefined;
    downs?: number | undefined;
    thumbnailHeight?: number | undefined;
    topAwardedType?: string | undefined;
    parentWhitelistStatus?: boolean | undefined;
    hideScore?: boolean | undefined;
    name?: string | undefined;
    quarantine?: boolean | undefined;
    linkFlairTextColor?: string | undefined;
    upvoteRatio?: number | undefined;
    ignoreReports?: boolean | undefined;
    ups?: number | undefined;
    domain?: string | undefined;
    mediaEmbed?: MediaEmbed | undefined;
    thumbnailWidth?: number | undefined;
    authorFlairTemplateId?: string | undefined;
    isOriginalContent?: boolean | undefined;
    authorFullname?: string | undefined;
    secureMedia?: boolean | undefined;
    isRedditMediaDomain?: boolean | undefined;
    isMeta?: boolean | undefined;
    category?: string | undefined;
    secureMediaEmbed?: MediaEmbed | undefined;
    linkFlairText?: string | undefined;
    canModPost?: boolean | undefined;
    score?: number | undefined;
    approvedBy?: string | undefined;
    isCreatedFromAdsUi?: boolean | undefined;
    authorPremium?: boolean | undefined;
    thumbnail?: string | undefined;
    edited?: boolean | undefined;
    authorFlairCssClass?: string | undefined;
    previousVisits: number[];
    authorFlairRichtext: string[];
    gildings?: Any | undefined;
    contentCategories?: string | undefined;
    isSelf?: boolean | undefined;
    subredditType?: string | undefined;
    created?: number | undefined;
    linkFlairType?: string | undefined;
    wls?: string | undefined;
    removedByCategory?: string | undefined;
    bannedBy?: string | undefined;
    authorFlairType?: string | undefined;
    totalAwardsReceived?: number | undefined;
    allowLiveComments?: boolean | undefined;
    selftextHtml?: string | undefined;
    likes?: boolean | undefined;
    suggestedSort?: string | undefined;
    bannedAtUtc?: number | undefined;
    viewCount?: number | undefined;
    archived?: boolean | undefined;
    noFollow?: boolean | undefined;
    spam?: boolean | undefined;
    isCrosspostable?: boolean | undefined;
    pinned?: boolean | undefined;
    over18?: boolean | undefined;
    allAwardings: Any[];
    awarders: string[];
    mediaOnly?: boolean | undefined;
    canGild?: boolean | undefined;
    removed?: boolean | undefined;
    spoiler?: boolean | undefined;
    locked?: boolean | undefined;
    authorFlairText?: string | undefined;
    treatmentTags: Any[];
    rteMode?: string | undefined;
    visited?: boolean | undefined;
    removedBy?: string | undefined;
    modNote?: string | undefined;
    distinguished?: string | undefined;
    subredditId?: string | undefined;
    authorIsBlocked?: boolean | undefined;
    modReasonBy?: string | undefined;
    numReports?: number | undefined;
    removalReason?: string | undefined;
    linkFlairBackgroundColor?: string | undefined;
    id?: string | undefined;
    isRobotIndexable?: boolean | undefined;
    numDuplicates?: number | undefined;
    reportReasons: Any[];
    author?: string | undefined;
    discussionType?: string | undefined;
    numComments?: number | undefined;
    sendReplies?: boolean | undefined;
    media?: string | undefined;
    contestMode?: boolean | undefined;
    authorPatreonFlair?: boolean | undefined;
    approved?: boolean | undefined;
    authorFlairTextColor?: string | undefined;
    permalink?: string | undefined;
    whitelistStatus?: boolean | undefined;
    stickied?: boolean | undefined;
    url?: string | undefined;
    subredditSubscribers?: number | undefined;
    createdUtc?: number | undefined;
    numCrossposts?: number | undefined;
    modReports: Any[];
    isVideo?: boolean | undefined;
};
export type StickyResponse_WrappedStickyListing = {
    kind?: string | undefined;
    data?: StickyResponse_LinkData | undefined;
};
export type StickyResponse_StickyResponseData = {
    after?: string | undefined;
    before?: string | undefined;
    dist?: number | undefined;
    modhash?: string | undefined;
    geoFilter?: string | undefined;
    children: StickyResponse_WrappedStickyListing[];
};
export type FullSubredditObject = {
    userFlairBackgroundColor?: string | undefined;
    submitTextHtml?: string | undefined;
    restrictPosting?: boolean | undefined;
    userIsBanned?: boolean | undefined;
    freeFormReports?: boolean | undefined;
    wikiEnabled?: boolean | undefined;
    userIsMuted?: boolean | undefined;
    userCanFlairInSr?: boolean | undefined;
    displayName?: string | undefined;
    headerImg?: string | undefined;
    title?: string | undefined;
    allowGalleries?: boolean | undefined;
    iconSize: number[];
    primaryColor?: string | undefined;
    activeUserCount?: number | undefined;
    iconImg?: string | undefined;
    displayNamePrefixed?: string | undefined;
    accountsActive?: number | undefined;
    publicTraffic?: boolean | undefined;
    subscribers?: number | undefined;
    userFlairRichtext: string[];
    videostreamLinksCount?: number | undefined;
    name?: string | undefined;
    quarantine?: boolean | undefined;
    hideAds?: boolean | undefined;
    emojisEnabled?: boolean | undefined;
    advertiserCategory?: string | undefined;
    publicDescription?: string | undefined;
    commentScoreHideMins?: number | undefined;
    allowPredictions?: boolean | undefined;
    userHasFavorited?: boolean | undefined;
    userFlairTemplateId?: string | undefined;
    communityIcon?: string | undefined;
    bannerBackgroundImage?: string | undefined;
    originalContentTagEnabled?: boolean | undefined;
    communityReviewed?: boolean | undefined;
    submitText?: string | undefined;
    descriptionHtml?: string | undefined;
    spoilersEnabled?: boolean | undefined;
    commentContributionSettings?: CommentContributionSettings | undefined;
    allowTalks?: boolean | undefined;
    headerSize: number[];
    userFlairPosition?: string | undefined;
    allOriginalContent?: boolean | undefined;
    hasMenuWidget?: boolean | undefined;
    isEnrolledInNewModmail?: boolean | undefined;
    keyColor?: string | undefined;
    canAssignUserFlair?: boolean | undefined;
    created?: number | undefined;
    wls?: number | undefined;
    showMediaPreview?: boolean | undefined;
    submissionType?: string | undefined;
    userIsSubscriber?: boolean | undefined;
    allowedMediaInComments: string[];
    allowVideogifs?: boolean | undefined;
    shouldArchivePosts?: boolean | undefined;
    userFlairType?: string | undefined;
    allowPolls?: boolean | undefined;
    collapseDeletedComments?: boolean | undefined;
    emojisCustomSize: number[];
    publicDescriptionHtml?: string | undefined;
    allowVideos?: boolean | undefined;
    isCrosspostableSubreddit?: boolean | undefined;
    notificationLevel?: string | undefined;
    shouldShowMediaInCommentsSetting?: boolean | undefined;
    canAssignLinkFlair?: boolean | undefined;
    accountsActiveIsFuzzed?: boolean | undefined;
    allowPredictionContributors?: boolean | undefined;
    submitTextLabel?: string | undefined;
    linkFlairPosition?: string | undefined;
    userSrFlairEnabled?: boolean | undefined;
    userFlairEnabledInSr?: boolean | undefined;
    allowChatPostCreation?: boolean | undefined;
    allowDiscovery?: boolean | undefined;
    acceptFollowers?: boolean | undefined;
    userSrThemeEnabled?: boolean | undefined;
    linkFlairEnabled?: boolean | undefined;
    disableContributorRequests?: boolean | undefined;
    subredditType?: string | undefined;
    suggestedCommentSort?: string | undefined;
    bannerImg?: string | undefined;
    userFlairText?: string | undefined;
    contentCategory?: string | undefined;
    bannerBackgroundColor?: string | undefined;
    showMedia?: boolean | undefined;
    id?: string | undefined;
    userIsModerator?: boolean | undefined;
    over18?: boolean | undefined;
    headerTitle?: string | undefined;
    description?: string | undefined;
    isChatPostFeatureEnabled?: boolean | undefined;
    submitLinkLabel?: string | undefined;
    userFlairTextColor?: string | undefined;
    restrictCommenting?: boolean | undefined;
    userFlairCssClass?: string | undefined;
    allowImages?: boolean | undefined;
    lang?: string | undefined;
    whitelistStatus?: string | undefined;
    url?: string | undefined;
    createdUtc?: number | undefined;
    bannerSize: number[];
    mobileBannerImage?: string | undefined;
    userIsContributor?: boolean | undefined;
    allowPredictionsTournament?: boolean | undefined;
};
export type SubredditsSearchResponse = {
    kind?: string | undefined;
    data?: SubredditsSearchResponse_WrappedSubredditObject | undefined;
};
export type SubredditsSearchResponse_WrappedSubredditObject = {
    after?: string | undefined;
    before?: string | undefined;
    dist?: number | undefined;
    geoFilter?: string | undefined;
    children: SubredditsSearchResponse_WrappedSubredditObject_SubredditData[];
};
export type SubredditsSearchResponse_WrappedSubredditObject_SubredditData = {
    kind?: string | undefined;
    data?: FullSubredditObject | undefined;
};
export type UserSearchResponse = {
    kind?: string | undefined;
    data?: UserSearchResponse_AccData | undefined;
};
export type UserSearchResponse_AccData = {
    after?: string | undefined;
    dist?: number | undefined;
    modhash?: string | undefined;
    geoFilter?: string | undefined;
    children: UserSearchResponse_Account[];
    before?: string | undefined;
};
export type UserSearchResponse_Account = {
    kind?: string | undefined;
    data?: UserSearchResponse_AccountData | undefined;
};
export type UserSearchResponse_AccountData = {
    isEmployee?: boolean | undefined;
    isFriend?: boolean | undefined;
    snoovatarSize: number[];
    id?: string | undefined;
    verified?: boolean | undefined;
    isGold?: boolean | undefined;
    isMod?: boolean | undefined;
    hasVerifiedEmail?: boolean | undefined;
    iconImg?: string | undefined;
    hideFromRobots?: boolean | undefined;
    linkKarma?: number | undefined;
    acceptChats?: boolean | undefined;
    isBlocked?: boolean | undefined;
    prefShowSnoovatar?: boolean | undefined;
    name?: string | undefined;
    created?: number | undefined;
    createdUtc?: number | undefined;
    snoovatarImg?: string | undefined;
    commentKarma?: number | undefined;
    acceptFollowers?: boolean | undefined;
    hasSubscribed?: boolean | undefined;
    acceptPms?: boolean | undefined;
    isSuspended?: boolean | undefined;
    subreddit?: UserSearchResponse_AccountData_Subreddit | undefined;
};
export type UserSearchResponse_AccountData_Subreddit = {
    defaultSet?: boolean | undefined;
    userIsContributor?: boolean | undefined;
    bannerImg?: string | undefined;
    allowedMediaInComments: string[];
    userIsBanned?: boolean | undefined;
    freeFormReports?: boolean | undefined;
    communityIcon?: string | undefined;
    showMedia?: boolean | undefined;
    iconColor?: string | undefined;
    userIsMuted?: boolean | undefined;
    displayName?: string | undefined;
    headerImg?: string | undefined;
    title?: string | undefined;
    previousNames: string[];
    over18?: boolean | undefined;
    iconSize: number[];
    primaryColor?: string | undefined;
    iconImg?: string | undefined;
    description?: string | undefined;
    submitLinkLabel?: string | undefined;
    headerSize: number[];
    restrictPosting?: boolean | undefined;
    restrictCommenting?: boolean | undefined;
    subscribers?: number | undefined;
    submitTextLabel?: string | undefined;
    isDefaultIcon?: boolean | undefined;
    linkFlairPosition?: string | undefined;
    displayNamePrefixed?: string | undefined;
    keyColor?: string | undefined;
    name?: string | undefined;
    isDefaultBanner?: boolean | undefined;
    url?: string | undefined;
    quarantine?: boolean | undefined;
    bannerSize: number[];
    userIsModerator?: boolean | undefined;
    acceptFollowers?: boolean | undefined;
    publicDescription?: string | undefined;
    linkFlairEnabled?: boolean | undefined;
    disableContributorRequests?: boolean | undefined;
    subredditType?: string | undefined;
    userIsSubscriber?: boolean | undefined;
};
export type SubredditAddRemovalReasonRequest = {
    /** The name of the subreddit without `r/` */
    subreddit: string;
    /** A message that will communicate to the user why their post was removed */
    message: string;
    /** Removal Reason title */
    title: string;
};
export type SubredditAddRemovalReasonResponse = {
    /** Removal Reason ID */
    id: string;
};
export type SubredditGetRemovalReasonsRequest = {
    /** The name of the subreddit without `r/` */
    subreddit: string;
};
export type SubredditGetRemovalReasonsResponse = {
    data: {
        [key: string]: SubredditGetRemovalReasonsResponse_SubredditRemovalReason;
    };
    /** Ordered list of Removal Reason IDs */
    order: string[];
};
export type SubredditGetRemovalReasonsResponse_SubredditRemovalReason = {
    /** Removal Reason ID */
    id: string;
    /** A message that will communicate to the user why their post was removed */
    message: string;
    /** Removal Reason title */
    title: string;
};
export type SubredditGetRemovalReasonsResponse_DataEntry = {
    key: string;
    value?: SubredditGetRemovalReasonsResponse_SubredditRemovalReason | undefined;
};
//# sourceMappingURL=subreddits_msg.d.ts.map