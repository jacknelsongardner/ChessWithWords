/**
 * #redisapi.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
/* eslint-disable */
/**
 * This key scope determines the key namespacing in Redis storage
 * By default, all keys in Redis are namespaced to an installation
 * Global redis enables apps to persist and access state across subreddit installations
 * Default key format - installation:app:custom-key
 * Global redis key format - global:app:custom-key
 */
export var RedisKeyScope;
(function (RedisKeyScope) {
    RedisKeyScope[RedisKeyScope["INSTALLATION"] = 0] = "INSTALLATION";
    RedisKeyScope[RedisKeyScope["GLOBAL"] = 1] = "GLOBAL";
    RedisKeyScope[RedisKeyScope["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(RedisKeyScope || (RedisKeyScope = {}));
export var BitfieldOverflowBehavior;
(function (BitfieldOverflowBehavior) {
    BitfieldOverflowBehavior[BitfieldOverflowBehavior["BITFIELD_OVERFLOW_BEHAVIOR_UNSPECIFIED"] = 0] = "BITFIELD_OVERFLOW_BEHAVIOR_UNSPECIFIED";
    BitfieldOverflowBehavior[BitfieldOverflowBehavior["BITFIELD_OVERFLOW_BEHAVIOR_WRAP"] = 1] = "BITFIELD_OVERFLOW_BEHAVIOR_WRAP";
    BitfieldOverflowBehavior[BitfieldOverflowBehavior["BITFIELD_OVERFLOW_BEHAVIOR_SAT"] = 2] = "BITFIELD_OVERFLOW_BEHAVIOR_SAT";
    BitfieldOverflowBehavior[BitfieldOverflowBehavior["BITFIELD_OVERFLOW_BEHAVIOR_FAIL"] = 3] = "BITFIELD_OVERFLOW_BEHAVIOR_FAIL";
    BitfieldOverflowBehavior[BitfieldOverflowBehavior["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(BitfieldOverflowBehavior || (BitfieldOverflowBehavior = {}));
