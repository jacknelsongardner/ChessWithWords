/**
 * #fetch_domain_request.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { Redditor } from "../reddit/redditor.js";
/** The status of the domain request, eg 'PENDING', 'APPROVED', 'DENIED' */
export declare enum FetchDomainRequestStatus {
    PENDING = 0,
    APPROVED = 1,
    DENIED = 2,
    UNRECOGNIZED = -1
}
/** Represents information about a domain request. */
export type FetchDomainRequestInfo = {
    /** The UUID of the request, eg '19ecb14b-db3c-4757-9793-4d58893ba449' */
    id: string;
    /** The timestamp when the request was created, eg '2025-06-04T17:14:38.029Z' */
    createdAt?: string | undefined;
    /** The timestamp when the request was last updated, eg '2025-06-04T17:14:38.029Z' */
    updatedAt?: string | undefined;
    /** The domain that is being requesting, eg 'hello-world.org' */
    domain: string;
    /** The status of the request, eg 'PENDING', 'APPROVED', 'DENIED' */
    status: FetchDomainRequestStatus;
    /** The t2_ id of the user who reviewed the request, eg 't2_1a2b' */
    reviewerId?: string | undefined;
    /** The slug of the app that the request is for, eg 'wsb-app'. */
    appSlug?: string | undefined;
    /** The account of the app owner who requested the domain, eg 't2_3c4d' */
    appOwnerAccount?: Redditor | undefined;
    /** The account of the reviewer who reviewed the request, eg 't2_1a2b' */
    reviewerAccount?: Redditor | undefined;
    /** The formatted time representing how long a request has been pending, eg '2 days', '5 hours', '23 seconds'. */
    timeInQueue?: string | undefined;
};
export type GetPendingRequest = {
    /** How many pending requests to return in a single page. */
    pageSize: number;
    /** The page number of pending requests to return. The page number should start at 1. */
    pageNumber: number;
};
export type GetResponse = {
    /** The list of fetch domain request information. */
    fetchDomainRequests: FetchDomainRequestInfo[];
    /** Indicates whether or not there is a next page of fetch domain requests. */
    hasNextPage?: boolean | undefined;
};
export type UpdateStatusForAppRequest = {
    /** The ID of the FetchDomainRequest to be updated. */
    id: string;
    /** The slug of the app that the request is for, eg 'wsb-app'. */
    appSlug: string;
    /** The domain on the request, eg 'api.hello-world.net'. */
    domain: string;
    /** The new status of the FetchDomainRequest. Can be one of PENDING, APPROVED, or DENIED. */
    status: FetchDomainRequestStatus;
};
//# sourceMappingURL=fetch_domain_request.d.ts.map