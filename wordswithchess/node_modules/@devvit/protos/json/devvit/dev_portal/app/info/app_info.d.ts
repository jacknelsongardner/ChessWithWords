/**
 * #app_info.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { AppPromoStatus } from "../../../../reddit/devvit/ads/v1/ads.js";
import type { ComputePool } from "../../app_version/info/app_version_info.js";
import type { Redditor } from "../../reddit/redditor.js";
import type { AppCategory, Categories } from "../categories/categories.js";
/**
 * Contains the details of an app. For field documentation, refer to the Prisma
 * schema.
 */
export type AppInfo = {
    id: string;
    /**
     * A unique, immutable, and somewhat more readable name for the app; can only
     * be URL-safe chars
     */
    slug: string;
    /** Human readable name used to be displayed on UIs */
    name: string;
    /** Human readable description */
    description: string;
    /** The t2_ id of the app account associated with this app */
    appAccount?: Redditor | undefined;
    /** App is NSFW (default: false) */
    isNsfw: boolean;
    /**
     * Flag to flip when *admins* want to take an app off the App Store listings
     * (default: false)
     */
    isDelisted: boolean;
    /** Flag to designate an app maintained by Reddit, Inc. (default: false) */
    isFirstParty: boolean;
    /**
     * Flag to flip when *app owners* want to take their app off App Store
     * listings (default: false)
     */
    isArchived: boolean;
    /**
     * Deprecated: Use capabilities instead.
     *
     * @deprecated
     */
    isWebviewEnabled: boolean;
    createdAt?: string | undefined;
    owner?: Redditor | undefined;
    /** @deprecated */
    categories: Categories[];
    stats?: AppStats | undefined;
    /** Human readable terms and conditions */
    termsAndConditions: string;
    /** Human readable privacy policy */
    privacyPolicy: string;
    defaultPool: ComputePool;
    /**
     * Flag to flip when *admins* want to switch the app off if the app is
     * behaving oddly, has a bad bug, or breaking something
     */
    isDisabled: boolean;
    /**
     * Flag to forbid the app installation in small subreddits (the actual upper
     * limit is specified in the code) (default: false)
     */
    minSubredditSizeRestrictionEnabled: boolean;
    /** T5 ID of the default subreddit to use for this app's playtest sessions */
    defaultPlaytestSubredditId: string;
    /** Whether the app is promoted */
    promoStatus: AppPromoStatus;
    /**
     * URL to the app icon, if available. This is not guaranteed to be present,
     * and will be empty if the app does not have an approved icon yet.
     */
    appIconUrl?: string | undefined;
    categoriesV2: AppCategory[];
};
export type MultipleAppInfos = {
    apps: AppInfo[];
};
/** Contains stats about an app. */
export type AppStats = {
    /** How many times/locations is this app currently installed in? */
    installCount: number;
    /**
     * How many versions is this app have in total (within search criteria, e.g.
     * may exclude pre-releases)
     */
    versionsCount: number;
};
//# sourceMappingURL=app_info.d.ts.map