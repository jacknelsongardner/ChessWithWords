/**
 * #app_settings.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { SettingsValues } from "../../plugin/settings/v1alpha/settings.js";
import type { Form } from "../../ui/form_builder/v1alpha/form.js";
export type GetAppSettingsRequest = {
    appId: string;
};
export type GetAppSettingsResponse = {
    settings?: SettingsValues | undefined;
};
export type UpdateAppSettingsRequest = {
    appId: string;
    settings?: SettingsValues | undefined;
};
export type UpdateAppSettingsResponse = {
    success: boolean;
    errors: {
        [key: string]: string;
    };
};
export type UpdateAppSettingsResponse_ErrorsEntry = {
    key: string;
    value: string;
};
export type GetAppSettingsFormRequest = {
    appId: string;
};
export type GetAppSettingsFormResponse = {
    /** App settings Forms mapped by actor_name */
    form: {
        [key: string]: Form;
    };
};
export type GetAppSettingsFormResponse_FormEntry = {
    key: string;
    value?: Form | undefined;
};
export type ValidateAppSettingsFormRequest = {
    appId: string;
    settings?: SettingsValues | undefined;
};
export type ValidateAppSettingsFormResponse = {
    /** If false, prevent submission and display errors on the form */
    success: boolean;
    /** Map of field_id:error pairs to display on the form */
    errors: {
        [key: string]: string;
    };
};
export type ValidateAppSettingsFormResponse_ErrorsEntry = {
    key: string;
    value: string;
};
//# sourceMappingURL=app_settings.d.ts.map