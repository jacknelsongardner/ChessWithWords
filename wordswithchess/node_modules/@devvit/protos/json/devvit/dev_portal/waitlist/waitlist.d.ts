/**
 * #waitlist.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { WaitlistStatus } from "../admin/waitlist_admin.js";
export declare enum ProgrammingExperienceLevel {
    BEGINNER = 0,
    PROFICIENT = 1,
    EXPERT = 2,
    UNRECOGNIZED = -1
}
export type IsCurrentUserRegisteredResponse = {
    isRegistered: boolean;
    /**
     * Original response returned here to future-proof
     * in case we want to allow the user to change their response
     */
    response?: WaitlistRegisterUserRequest | undefined;
    waitlistStatus: WaitlistStatus;
};
export type WaitlistRegisterUserRequest = {
    /** Thing ID */
    userId: string;
    /** Username */
    userName: string;
    /** "What apps, bots, or experiences would you like to build?" */
    whatToBuild: string;
    /** "What types of bots have you created?" (only available if above is true) */
    botsBuilt?: string | undefined;
    /** "What languages can you work with, and how proficient are you with them?" */
    programmingExperience: {
        [key: string]: ProgrammingExperienceLevel;
    };
    appsWanted: string;
    /** "What apps or customizations would you like to see in your subreddit(s)?" */
    doesConsentToEmail: boolean;
};
export type WaitlistRegisterUserRequest_ProgrammingExperienceEntry = {
    key: string;
    value: ProgrammingExperienceLevel;
};
export type WaitlistRegisterUserResponse = {
    success: boolean;
    /** Optional message, for errors, etc. */
    message?: string | undefined;
};
export type GetCurrentUserStatusResponse = {
    waitlistStatus: WaitlistStatus;
    acceptedTermsVersion: number;
    currentTermsVersion: number;
    hasVerifiedEmail: boolean;
    doesConsentToEmail: boolean;
};
//# sourceMappingURL=waitlist.d.ts.map