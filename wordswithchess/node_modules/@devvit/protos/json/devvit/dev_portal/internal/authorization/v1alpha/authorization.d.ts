/**
 * #authorization.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { RemoteLogType } from "../../../../remote_logger/remote_logger.js";
/** An application version installed to a specific location */
export type DevPortalAuthInstalledAppResource = {
    app?: DevPortalAuthAppVersionResource | undefined;
    location?: DevPortalAuthLocationResource | undefined;
};
/** Represents a specific application version */
export type DevPortalAuthAppVersionResource = {
    /** The short app name (slug) */
    name: string;
    /** Semver of the application */
    version: string;
};
/** Represents a specific subreddit */
export type DevPortalAuthLocationResource = {
    /** t5_ for the subreddit or t2_ for user */
    id: string;
};
export type DevPortalAuthCanViewLogsRequest = {
    userId: string;
    /** Installation Id UUID */
    id?: string | undefined;
    /** An app version + location combo */
    app?: DevPortalAuthInstalledAppResource | undefined;
    /**
     * The log stream type that will be read from. Admins may have access to more
     * types than other types of users.
     */
    type: RemoteLogType;
};
export type DevPortalAuthorizationResponse = {
    /** true if the requested action is allowed */
    allowed: boolean;
    /** a reason for the allow/deny. This is more likely present for the deny case. */
    reason: string;
};
//# sourceMappingURL=authorization.d.ts.map