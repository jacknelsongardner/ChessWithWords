/**
 * #value.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { FormFieldType } from "./type.js";
export type FormFieldValue = {
    /** The type as configured in the corresponding FormField */
    fieldType: FormFieldType;
    /** If true this value comes from a FormField that was defined as a secret */
    isSecret?: boolean | undefined;
    /** For: STRING, PARAGRAPH, IMAGE (the URL) */
    stringValue?: string | undefined;
    /** For: NUMBER */
    numberValue?: number | undefined;
    /** For: BOOLEAN */
    boolValue?: boolean | undefined;
    /** For: LIST */
    listValue?: FormFieldValue_ListValue | undefined;
    /** For: SELECTION */
    selectionValue?: FormFieldValue_SelectionValue | undefined;
    /** For: GROUP */
    groupValue?: FormFieldValue_GroupValue | undefined;
};
export type FormFieldValue_ListValue = {
    /** The type as configured in the corresponding FieldConfig */
    itemType: FormFieldType;
    items: FormFieldValue[];
};
export type FormFieldValue_SelectionValue = {
    /** One or more values from the choices defined in the Selection config. */
    values: string[];
};
/** Group does not have a value */
export type FormFieldValue_GroupValue = {};
//# sourceMappingURL=value.d.ts.map