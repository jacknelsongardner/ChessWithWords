/**
 * #product.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
import type { Environment } from "./common.js";
export declare enum Currency {
    CURRENCY_UNSPECIFIED = 0,
    /** GOLD - Reddit internal currency */
    GOLD = 200,
    UNRECOGNIZED = -1
}
export declare enum AccountingType {
    ACCOUNTING_TYPE_UNSPECIFIED = 0,
    /** ACCOUNTING_TYPE_INSTANT - Used immediately as it is purchased. */
    ACCOUNTING_TYPE_INSTANT = 1,
    /** ACCOUNTING_TYPE_DURABLE - It grants access indefinitely. */
    ACCOUNTING_TYPE_DURABLE = 2,
    /** ACCOUNTING_TYPE_CONSUMABLE - User can use the good at any time in the future but it is gone once it's used. */
    ACCOUNTING_TYPE_CONSUMABLE = 3,
    /** ACCOUNTING_TYPE_VALID_FOR_1D - Consumed over a fixed period of time. */
    ACCOUNTING_TYPE_VALID_FOR_1D = 4,
    ACCOUNTING_TYPE_VALID_FOR_7D = 5,
    ACCOUNTING_TYPE_VALID_FOR_30D = 6,
    ACCOUNTING_TYPE_VALID_FOR_1Y = 7,
    UNRECOGNIZED = -1
}
/** Mapping from payments API Product : https://github.snooguts.net/reddit/reddit-service-pay-api/blob/main/api/protos/reddit/xpaymentsplatform/payapi/v1/common.proto#L7 */
export type Product = {
    /** the developer defined identifer for the product */
    sku: string;
    /** Human-readable name of the product */
    name: string;
    /** the price of the product */
    price?: ProductPrice | undefined;
    /** whether or not this product is defined for sandbox or production purchases */
    environment: Environment;
    /** Human-readable description of the product */
    description: string;
    /** the accounting treatment of the product */
    accountingType: AccountingType;
    /** tags associated with the product */
    productMetadata: {
        [key: string]: string;
    };
    /**
     * Images associated with the product. The key is the image type and the value
     * is the asset path (without assets/ or whatever the media directory is). Eg,
     * `"foo.png"` and `subdir/bar.gif`. Currently, only the `icon` key can
     * reference images.
     */
    images: {
        [key: string]: string;
    };
};
export type Product_ProductMetadataEntry = {
    key: string;
    value: string;
};
export type Product_ImagesEntry = {
    key: string;
    value: string;
};
export type ProductPrice = {
    amount: number;
    currency: Currency;
};
//# sourceMappingURL=product.d.ts.map