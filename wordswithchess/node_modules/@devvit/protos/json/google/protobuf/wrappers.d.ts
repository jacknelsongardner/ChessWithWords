/**
 * #wrappers.ts
 *
 * Code generated by ts-proto. DO NOT EDIT.
 * @packageDocumentation
 */
/**
 * Wrapper message for `double`.
 *
 * The JSON representation for `DoubleValue` is JSON number.
 */
export type DoubleValue = {
    /** The double value. */
    value: number;
};
/**
 * Wrapper message for `float`.
 *
 * The JSON representation for `FloatValue` is JSON number.
 */
export type FloatValue = {
    /** The float value. */
    value: number;
};
/**
 * Wrapper message for `int64`.
 *
 * The JSON representation for `Int64Value` is JSON string.
 */
export type Int64Value = {
    /** The int64 value. */
    value: number;
};
/**
 * Wrapper message for `uint64`.
 *
 * The JSON representation for `UInt64Value` is JSON string.
 */
export type UInt64Value = {
    /** The uint64 value. */
    value: number;
};
/**
 * Wrapper message for `int32`.
 *
 * The JSON representation for `Int32Value` is JSON number.
 */
export type Int32Value = {
    /** The int32 value. */
    value: number;
};
/**
 * Wrapper message for `uint32`.
 *
 * The JSON representation for `UInt32Value` is JSON number.
 */
export type UInt32Value = {
    /** The uint32 value. */
    value: number;
};
/**
 * Wrapper message for `bool`.
 *
 * The JSON representation for `BoolValue` is JSON `true` and `false`.
 */
export type BoolValue = {
    /** The bool value. */
    value: boolean;
};
/**
 * Wrapper message for `string`.
 *
 * The JSON representation for `StringValue` is JSON string.
 */
export type StringValue = {
    /** The string value. */
    value: string;
};
/**
 * Wrapper message for `bytes`.
 *
 * The JSON representation for `BytesValue` is JSON string.
 */
export type BytesValue = {
    /** The bytes value. */
    value: string;
};
//# sourceMappingURL=wrappers.d.ts.map